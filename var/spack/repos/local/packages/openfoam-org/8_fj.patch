diff -uprN a/OpenFOAM-8/etc/bashrc b/OpenFOAM-8/etc/bashrc
--- a/OpenFOAM-8/etc/bashrc	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/etc/bashrc	2020-08-08 18:36:08.000000000 +0900
@@ -43,7 +43,7 @@ export WM_PROJECT_VERSION=8
 # Please set to the appropriate path if the default is not correct.
 #
 [ "$BASH" -o "$ZSH_NAME" ] && \
-export FOAM_INST_DIR=$(cd $(dirname ${BASH_SOURCE:-$0})/../.. && pwd -P) || \
+export FOAM_INST_DIR=$(cd $(dirname ${BASH_SOURCE:-$0})/../.. && pwd -L) || \
 export FOAM_INST_DIR=$HOME/$WM_PROJECT
 # export FOAM_INST_DIR=~$WM_PROJECT
 # export FOAM_INST_DIR=/opt/$WM_PROJECT
@@ -62,7 +62,7 @@ export WM_COMPILER_TYPE=system
 
 #- Compiler:
 #    WM_COMPILER = Gcc | Gcc48 ... Gcc62 | Clang | Icc
-export WM_COMPILER=Gcc
+export WM_COMPILER=Fujitsu
 unset WM_COMPILER_ARCH WM_COMPILER_LIB_ARCH
 
 #- Memory addressing:
@@ -86,7 +86,7 @@ export WM_COMPILE_OPTION=Opt
 #- MPI implementation:
 #    WM_MPLIB = SYSTEMOPENMPI | OPENMPI | SYSTEMMPI | MPICH | MPICH-GM | HPMPI
 #               | MPI | FJMPI | QSMPI | SGIMPI | INTELMPI
-export WM_MPLIB=SYSTEMOPENMPI
+export WM_MPLIB=FJMPI
 
 #- Operating System:
 #    WM_OSTYPE = POSIX | ???
@@ -115,7 +115,7 @@ export WM_PROJECT_DIR=$WM_PROJECT_INST_D
 
 if [ -d "$WM_PROJECT_DIR" ]
 then
-    WM_PROJECT_DIR_REAL=$(cd $WM_PROJECT_DIR && pwd -P)
+    WM_PROJECT_DIR_REAL=$(cd $WM_PROJECT_DIR && pwd -L)
     if [ -d "$WM_PROJECT_DIR_REAL" -a -e "$WM_PROJECT_DIR_REAL/etc/bashrc" ]
     then
         export WM_PROJECT_DIR=$WM_PROJECT_DIR_REAL
@@ -129,7 +129,7 @@ export WM_THIRD_PARTY_DIR=$WM_PROJECT_IN
 
 if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
-    WM_THIRD_PARTY_DIR_REAL=$(cd $WM_THIRD_PARTY_DIR && pwd -P)
+    WM_THIRD_PARTY_DIR_REAL=$(cd $WM_THIRD_PARTY_DIR && pwd -L)
     if [ -d "$WM_THIRD_PARTY_DIR_REAL" -a -e "$WM_THIRD_PARTY_DIR_REAL/etc/tools" ]
     then
         export WM_THIRD_PARTY_DIR=$WM_THIRD_PARTY_DIR_REAL
@@ -189,8 +189,8 @@ _foamSource $WM_PROJECT_DIR/etc/config.s
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mpi`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
+#_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
+#_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools`

 
diff -uprN a/OpenFOAM-8/etc/config.csh/mpi b/OpenFOAM-8/etc/config.csh/mpi
--- a/OpenFOAM-8/etc/config.csh/mpi 2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/etc/config.csh/mpi 2020-09-11 14:31:10.000000000 +0900
@@ -177,12 +177,15 @@ case MPI:
 
 case FJMPI:
     setenv FOAM_MPI fjmpi
-    setenv MPI_ARCH_PATH /opt/FJSVmpi2
+#    setenv MPI_ARCH_PATH /opt/FJSVmpi2
 
-    _foamAddPath    $MPI_ARCH_PATH/bin
-    _foamAddLib     $MPI_ARCH_PATH/lib/sparcv9
-    _foamAddLib     /opt/FSUNf90/lib/sparcv9
-    _foamAddLib     /opt/FJSVpnidt/lib
+#    _foamAddPath    $MPI_ARCH_PATH/bin
+#    _foamAddLib     $MPI_ARCH_PATH/lib/sparcv9
+#    _foamAddLib     /opt/FSUNf90/lib/sparcv9
+#    _foamAddLib     /opt/FJSVpnidt/lib
+    setenv PINC "`mpi$WM_CC --showme:compile`"
+    setenv PLIBS "`mpi$WM_CC --showme:link`"
+    setenv PFLAGS "-DOMPI_SKIP_MPICXX"
     breaksw
 
 case QSMPI:
diff -uprN a/OpenFOAM-8/etc/config.csh/settings b/OpenFOAM-8/etc/config.csh/settings
--- a/OpenFOAM-8/etc/config.csh/settings	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/etc/config.csh/settings	2020-09-14 14:30:21.000000000 +0900
@@ -54,6 +54,15 @@ case Linux:
         breaksw
 
     case x86_64:
+        which fccpx &> /dev/null
+        if ( $? == 0 ) then
+            setenv WM_ARCH linuxArm64
+            setenv WM_COMPILER_LIB_ARCH 64
+            setenv WM_CC fccpx
+            setenv WM_CXX FCCpx
+            setenv WM_CFLAGS '-Nclang -fPIC'
+            setenv WM_CXXFLAGS '-Nclang -fPIC -std=c++11'
+        else
         switch ($WM_ARCH_OPTION)
         case 32:
             setenv WM_COMPILER_ARCH 64
@@ -79,9 +88,19 @@ case Linux:
             breaksw
 
         endsw
+        endif
         breaksw
 
     case aarch64:
+        which fcc &> /dev/null
+        if ( $? == 0 ) then
+            setenv WM_ARCH linuxArm64
+            setenv WM_COMPILER_LIB_ARCH 64
+            setenv WM_CC fcc
+            setenv WM_CXX FCC
+            setenv WM_CFLAGS '-Nclang -fPIC'
+            setenv WM_CXXFLAGS '-Nclang -fPIC -std=c++11'
+        else 
         setenv WM_ARCH linuxArm64
         setenv WM_COMPILER_LIB_ARCH 64
         setenv WM_CC 'gcc'
@@ -89,6 +108,7 @@ case Linux:
         setenv WM_CFLAGS '-fPIC'
         setenv WM_CXXFLAGS '-fPIC -std=c++0x'
         setenv WM_LDFLAGS ''
+        endif
         breaksw
 
     case ppc64:
diff -uprN a/OpenFOAM-8/etc/config.sh/mpi b/OpenFOAM-8/etc/config.sh/mpi
--- a/OpenFOAM-8/etc/config.sh/mpi	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/etc/config.sh/mpi	2020-08-04 16:10:52.000000000 +0900
@@ -185,12 +185,15 @@ MPI)
 
 FJMPI)
     export FOAM_MPI=fjmpi
-    export MPI_ARCH_PATH=/opt/FJSVmpi2
+#    export MPI_ARCH_PATH=/opt/FJSVmpi2
 
-    _foamAddPath    $MPI_ARCH_PATH/bin
-    _foamAddLib     $MPI_ARCH_PATH/lib/sparcv9
-    _foamAddLib     /opt/FSUNf90/lib/sparcv9
-    _foamAddLib     /opt/FJSVpnidt/lib
+#    _foamAddPath    $MPI_ARCH_PATH/bin
+#    _foamAddLib     $MPI_ARCH_PATH/lib/sparcv9
+#    _foamAddLib     /opt/FSUNf90/lib/sparcv9
+#    _foamAddLib     /opt/FJSVpnidt/lib
+    export PINC="`mpi$WM_CC --showme:compile`"
+    export PLIBS="`mpi$WM_CC --showme:link`"
+    export PFLAGS="-DOMPI_SKIP_MPICXX"
     ;;
 
 QSMPI)
diff -uprN a/OpenFOAM-8/etc/config.sh/settings b/OpenFOAM-8/etc/config.sh/settings
--- a/OpenFOAM-8/etc/config.sh/settings	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/etc/config.sh/settings	2020-09-14 14:29:21.000000000 +0900
@@ -49,6 +49,15 @@ Linux)
         ;;
 
     x86_64)
+        which fccpx &> /dev/null
+        if [ $? -eq 0 ]; then
+            WM_ARCH=linuxArm64
+            export WM_COMPILER_LIB_ARCH=64
+            export WM_CC=fccpx
+            export WM_CXX=FCCpx
+            export WM_CFLAGS='-Nclang -fPIC'
+            export WM_CXXFLAGS='-Nclang -fPIC -std=c++11'
+        else
         case "$WM_ARCH_OPTION" in
         32)
             export WM_COMPILER_ARCH=64
@@ -72,9 +81,19 @@ Linux)
                  1>&2
             ;;
         esac
+        fi
         ;;
 
     aarch64)
+        which fcc &> /dev/null
+        if [ $? -eq 0 ]; then
+            WM_ARCH=linuxArm64
+            export WM_COMPILER_LIB_ARCH=64
+            export WM_CC=fcc
+            export WM_CXX=FCC
+            export WM_CFLAGS='-Nclang -fPIC'
+            export WM_CXXFLAGS='-Nclang -fPIC -std=c++11'
+        else 
         WM_ARCH=linuxArm64
         export WM_COMPILER_LIB_ARCH=64
         export WM_CC='gcc'
@@ -82,6 +101,7 @@ Linux)
         export WM_CFLAGS='-fPIC'
         export WM_CXXFLAGS='-fPIC -std=c++0x'
         export WM_LDFLAGS=
+        fi
         ;;
 
     armv7l)
diff -uprN a/OpenFOAM-8/wmake/scripts/wmakeFunctions b/OpenFOAM-8/wmake/scripts/wmakeFunctions
--- a/OpenFOAM-8/wmake/scripts/wmakeFunctions	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/wmake/scripts/wmakeFunctions	2020-08-05 09:42:27.000000000 +0900
@@ -53,9 +53,9 @@ expandPath()
 {
     if [ -d "$1" ]
     then
-        exPath=$(cd "$1" && pwd -P)
+        exPath=$(cd "$1" && pwd -L)
     else
-        exPath=$(cd $(dirname "$1") && pwd -P)
+        exPath=$(cd $(dirname "$1") && pwd -L)
     fi
 }
 
diff -uprN a/OpenFOAM-8/wmake/src/Makefile b/OpenFOAM-8/wmake/src/Makefile
--- a/OpenFOAM-8/wmake/src/Makefile	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/wmake/src/Makefile	2020-08-04 16:50:17.000000000 +0900
@@ -34,7 +34,7 @@
 #------------------------------------------------------------------------------
 
 SHELL      = /bin/sh
-
+gccFlags =
 #------------------------------------------------------------------------------
 # Unset suffices list (suffix rules are not used)
 #------------------------------------------------------------------------------
@@ -65,13 +65,13 @@ clean:
 $(WMAKE_BIN)/dirToString: dirToString.c
 	@mkdir -p $(WMAKE_BIN)
 	$(call QUIET_MESSAGE,compile,$<)
-	$E $(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
+	$E gcc $(gccFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
 
 $(WMAKE_BIN)/wmkdep: wmkdep.l
 	@mkdir -p $(WMAKE_BIN)
 	$(call QUIET_MESSAGE,lex,$<)
 	$E flex wmkdep.l; \
-	$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
+	gcc $(gccFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
 	@rm -f lex.yy.c 2>/dev/null
 
 
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c	2020-08-04 16:31:55.000000000 +0900
@@ -0,0 +1,32 @@
+#------------------------------------------------------------------------------
+# Fujitsu compiler - a clang variant
+SUFFIXES += .c
+
+cDBUG       =
+cOPT        = -O2
+cWARN       = -Wall $(FOAM_EXTRA_CFLAGS)
+
+ifeq ($(WM_CC),fccpx)
+cc          = fccpx -Nclang
+else
+cc          = fcc -Nclang
+endif
+
+cARCH       = -m64 -march=armv8.2-a+sve -mcpu=a64fx
+
+# Compile option is non-mandatory, but must be non-empty
+sinclude $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(cARCH) $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+INK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) $(cARCH) -shared
+
+ifeq ($(WM_CC),fccpx)
+LINKEXE     = $(cc) $(cARCH) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs -Wl,-rpath-link=$(LD_LIBRARY_PATH)
+else
+LINKEXE     = $(cc) $(cARCH) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+endif
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++	2020-08-04 16:34:19.000000000 +0900
@@ -0,0 +1,50 @@
+#------------------------------------------------------------------------------
+# Fujitsu compiler - a clang variant
+
+SUFFIXES += .C .cc .cpp .cxx
+
+c++DBUG     =
+c++OPT      = -O2
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+# - Standard warnings
+# - Less restrictive warnings (may be needed for flex++, CGAL, etc.)
+
+c++WARN     = \
+    -Wall -Wextra -Wold-style-cast \
+    -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof \
+    -Wno-undefined-var-template \
+    -Wno-unknown-warning-option \
+    $(FOAM_EXTRA_CXXFLAGS)
+
+c++LESSWARN = \
+    -Wno-old-style-cast -Wno-unused-local-typedefs \
+    -Wno-tautological-undefined-compare -Wno-shift-negative-value \
+    -Wno-null-pointer-arithmetic
+
+ifeq ($(WM_CXX),FCCpx)
+CC          = FCCpx -Nclang -std=c++11
+else
+CC          = FCC -Nclang -std=c++11
+endif
+
+c++ARCH     = -m64 -march=armv8.2-a+sve -mcpu=a64fx
+
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
+
+c++FLAGS    = $(c++ARCH) $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -shared $(FOAM_EXTRA_LDFLAGS)
+
+ifeq ($(WM_CXX),FCCpx)
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Wl,-rpath-link=$(LD_LIBRARY_PATH)
+else
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed
+endif
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cDebug b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cDebug
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cDebug	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cDebug	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Debug b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Debug
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Debug	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Debug	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+c++DBUG     = -g -DFULLDEBUG
+c++OPT      = -O0
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cOpt b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cOpt
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cOpt	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cOpt	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+cDBUG       =
+cOPT        = -ffp-contract=fast -ffast-math -O3
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Opt b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Opt
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Opt	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Opt	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+c++DBUG     =
+c++OPT      = -ffp-contract=fast -ffast-math -O3 -funsafe-math-optimizations
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cProf b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cProf
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cProf	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/cProf	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Prof b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Prof
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Prof	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/c++Prof	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff -uprN a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/general b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/general
--- a/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/general	1970-01-01 09:00:00.000000000 +0900
+++ b/OpenFOAM-8/wmake/rules/linuxArm64Fujitsu/general	2020-07-10 10:54:02.000000000 +0900
@@ -0,0 +1,18 @@
+CPP        = cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+## include $(GENERAL_RULES)/Clang/openmp
+
+# Fujitsu-specific
+# ----
+COMP_OPENMP = -DUSE_OMP -fopenmp
+LINK_OPENMP = -lfjomp
+# ----
+# Or disable
+# include $(GENERAL_RULES)/no-openmp
+# ----
+
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff -uprN a/OpenFOAM-8/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricField.C b/OpenFOAM-8/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricField.C
--- a/OpenFOAM-8/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricField.C	2020-07-22 01:44:44.000000000 +0900
+++ b/OpenFOAM-8/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricField.C	2020-08-18 09:13:35.000000000 +0900
@@ -449,7 +449,7 @@ Foam::GeometricField<Type, PatchField, G
     timeIndex_(gf.timeIndex()),
     field0Ptr_(nullptr),
     fieldPrevIterPtr_(nullptr),
-    boundaryField_(move(gf.boundaryField_))
+    boundaryField_(*this, move(gf.boundaryField_))
 {
     if (debug)
     {
