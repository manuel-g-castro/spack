diff -ruN orig/siesta-MaX-1.0.1/Src/compute_dm.F siesta-MaX-1.0.1/Src/compute_dm.F
--- orig/siesta-MaX-1.0.1/Src/compute_dm.F	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/compute_dm.F	2021-08-25 21:19:15.000000000 +0900
@@ -21,7 +21,7 @@
       use sparse_matrices
       use siesta_geom
       use atomlist, only: qa, lasto, no_u, no_s, indxuo, 
-     &                    qtot, Qtots, no_l
+     &                    qtot, Qtots, no_l, qs => qtots
       use kpoint_scf_m, only: kpoint_scf, gamma_scf
       use m_energies,   only: Ebs, Ecorrec, Entropy
       use m_energies,   only: Ef, Efs
@@ -262,7 +262,7 @@
 #ifdef SIESTA__CHESS
       elseif (isolve .eq. SOLVE_CHESS) then
         ! FOE solver from the CheSS library
-        if (gamma) then
+        if (.not. use_aux_cell) then
           call CheSS_wrapper(.false., PreviousCallDiagon, 
      &         iscf, istp, no_l,
      &         spin%spinor, no_u, maxnh, numh, listhptr, listh, 
diff -ruN orig/siesta-MaX-1.0.1/Src/Makefile siesta-MaX-1.0.1/Src/Makefile
--- orig/siesta-MaX-1.0.1/Src/Makefile	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/Makefile	2021-09-03 11:54:12.000000000 +0900
@@ -57,7 +57,7 @@
 PSOP_INCFLAGS=-I $(MAIN_OBJDIR)/psoplib/src
 INCFLAGS:= $(NETCDF_INCFLAGS)  $(PSML_INCFLAGS) $(NCPS_INCFLAGS) \
            $(PSOP_INCFLAGS) $(XMLF90_INCFLAGS) $(GRIDXC_INCFLAGS) \
-           $(PEXSI_INCFLAGS) $(INCFLAGS)
+           $(PEXSI_INCFLAGS) $(CHESS_INCFLAGS) $(INCFLAGS)
 #
 # For removing any -ipo compilation in sub directories...
 # Later compilers are also having this enabled, and it lets you
diff -ruN orig/siesta-MaX-1.0.1/Src/m_chess.F90 siesta-MaX-1.0.1/Src/m_chess.F90
--- orig/siesta-MaX-1.0.1/Src/m_chess.F90	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/m_chess.F90	2021-08-25 16:06:08.000000000 +0900
@@ -490,7 +490,7 @@
       ! Calling arguments
       integer,intent(in) :: node, nodes, h_dim, BlockSize, nhmax, nvctr
       integer,dimension(h_dim),intent(in) :: numh_global
-      real(dp),dimension(nvctr),intent(out) :: k_global
+      real(dp),dimension(nvctr),intent(in) :: k_global
       real(dp),dimension(nhmax),intent(out) :: k_work
 
       ! Local variables
diff -ruN orig/siesta-MaX-1.0.1/Src/m_transiesta.F90 siesta-MaX-1.0.1/Src/m_transiesta.F90
--- orig/siesta-MaX-1.0.1/Src/m_transiesta.F90	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/m_transiesta.F90	2021-08-23 22:14:04.000000000 +0900
@@ -37,6 +37,8 @@
   use m_ts_mumpsk
 #endif
 
+  use m_ts_electype
+
   implicit none
 
   public :: transiesta
@@ -60,7 +62,7 @@
 
     use ts_kpoint_scf_m, only : ts_kpoint_scf, ts_gamma_scf
 
-    use m_ts_electype
+    !use m_ts_electype
 
     use m_ts_options, only : N_Elec, Elecs
     use m_ts_options, only : IsVolt, Calc_Forces
diff -ruN orig/siesta-MaX-1.0.1/Src/m_ts_method.f90 siesta-MaX-1.0.1/Src/m_ts_method.f90
--- orig/siesta-MaX-1.0.1/Src/m_ts_method.f90	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/m_ts_method.f90	2021-08-23 21:49:03.000000000 +0900
@@ -1,6 +1,7 @@
 module m_ts_method
 
   use m_region
+  use m_ts_electype
 
   implicit none
 
@@ -210,7 +211,7 @@
   end subroutine ts_init_regions
 
   subroutine ts_init_electrodes(na_u,lasto,N_Elec,Elecs)
-    use m_ts_electype
+    !use m_ts_electype
 
     integer,    intent(in) :: na_u, lasto(0:na_u)
     integer,    intent(in) :: N_Elec
diff -ruN orig/siesta-MaX-1.0.1/Src/state_init.F siesta-MaX-1.0.1/Src/state_init.F
--- orig/siesta-MaX-1.0.1/Src/state_init.F	2020-02-07 20:40:31.000000000 +0900
+++ siesta-MaX-1.0.1/Src/state_init.F	2021-08-25 21:05:11.000000000 +0900
@@ -386,7 +386,7 @@
 !         for CheSS
           chess_value = get_chess_parameter('chess_buffer_kernel')
           call hsparse( negl, scell, nsc, na_s, isa, xa, lasto,
-     &              lastkb, iphorb, iphKB, maxnh, gamma, 
+     &              lastkb, iphorb, iphKB, maxnh, .not. use_aux_cell, 
      &              set_xijo=.true., folding=folding1,
      $              diagonal_folding=diag_folding1,
      $              buffer=chess_value)
@@ -399,7 +399,7 @@
     
           chess_value = get_chess_parameter('chess_buffer_mult')
           call hsparse( negl, scell, nsc, na_s, isa, xa, lasto,
-     &                  lastkb, iphorb, iphKB, maxnh, gamma,
+     &                  lastkb, iphorb, iphKB, maxnh,.not. use_aux_cell,
      &                  set_xijo=.true., folding=folding1,
      $                  diagonal_folding=diag_folding1,
      $                  buffer=chess_value)
