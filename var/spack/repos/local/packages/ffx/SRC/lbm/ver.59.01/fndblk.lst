
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:01 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : fndblk.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FNDBLK"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE FNDBLK(IMODE,NG,NC,LLEVEL,LPOSI,D0,
          2                          *                  NPBLK,NUMBLK,CORBLK,
          3                          *                  MPBLK,LCBLK,LPBLK1,LPBLK2,CBLK,IUT6)
          4                           IMPLICIT NONE
          5                           INTEGER*4 IMODE
          6                           INTEGER*4 NG,NC,LLEVEL(NC),LPOSI(3,NC),NPBLK,NUMBLK(3)
          7                           REAL*8    D0,D1,CORBLK(6)
          8                           INTEGER*4 MPBLK,LCBLK(MPBLK),LPBLK1(3,MPBLK),LPBLK2(3,MPBLK)
          9                           REAL*8    CBLK(3,MPBLK)
         10                           INTEGER*4 IUT6
         11                     C
         12                           INTEGER*4 I,J,K,IC,II,JJ,KK,NFOUND,NX,NY,NZ
         13                           REAL*8    X0,Y0,Z0,X1,Y1,Z1,DX,DY,DZ
         14                           REAL*8    X0BLK,Y0BLK,Z0BLK,X1BLK,Y1BLK,Z1BLK,
         15                          *          DXBLK,DYBLK,DZBLK,XX,YY,ZZ
         16                     C
         17                           NX=NUMBLK(1)
         18                           NY=NUMBLK(2)
         19                           NZ=NUMBLK(3)
         20                           X0BLK=CORBLK(1)
         21                           Y0BLK=CORBLK(2)
         22                           Z0BLK=CORBLK(3)
         23                           X1BLK=CORBLK(4)
         24                           Y1BLK=CORBLK(5)
         25                           Z1BLK=CORBLK(6)
         26                           DXBLK=(X1BLK-X0BLK)
         27                           DYBLK=(Y1BLK-Y0BLK)
         28                           DZBLK=(Z1BLK-Z0BLK)
         29                           IF(NX.GT.0) DXBLK=DXBLK/DBLE(NX)
         30                           IF(NY.GT.0) DYBLK=DYBLK/DBLE(NY)
         31                           IF(NZ.GT.0) DZBLK=DZBLK/DBLE(NZ)
         32                     C
         33                           NFOUND=0
         34     1                     DO 1000 K=0,NZ
         35     2                     DO 1100 J=0,NY
         36     3                     DO 1200 I=0,NX
         37     3                          XX=X0BLK+DXBLK*DBLE(I)
         38     3                          YY=Y0BLK+DYBLK*DBLE(J)
         39     3                          ZZ=Z0BLK+DZBLK*DBLE(K)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LLEVEL, LPOSI
                              <<< Loop-information  End >>>
         40     4                          DO 1300 IC=1,NC
         41     4                              D1=D0*2.0**(LLEVEL(IC)-1)
         42     4                              X0=D0*REAL(LPOSI(1,IC))
         43     4                              Y0=D0*REAL(LPOSI(2,IC))
         44     4                              Z0=D0*REAL(LPOSI(3,IC))
         45     4                              X1=X0+D1
         46     4                              Y1=Y0+D1
         47     4                              Z1=Z0+D1
         48     5                              IF(     X0.LE.XX .AND. XX.LE.X1
         49     5                    *           .AND. Y0.LE.YY .AND. YY.LE.Y1
         50     5                    *           .AND. Z0.LE.ZZ .AND. ZZ.LE.Z1 ) THEN
         51     5               C
         52     5                                  NFOUND=NFOUND+1
         53     5               C
         54     5                                  IF(IMODE.EQ.0) GOTO 1200
         55     5               C
         56     5                                  II=INT(REAL(NG)*(XX-X0)/D1)+1
         57     5                                  JJ=INT(REAL(NG)*(YY-Y0)/D1)+1
         58     5                                  KK=INT(REAL(NG)*(ZZ-Z0)/D1)+1
         59     5                                  DX=   (REAL(NG)*(XX-X0)/D1)-REAL(II-1)
         60     5                                  DY=   (REAL(NG)*(YY-Y0)/D1)-REAL(JJ-1)
         61     5                                  DZ=   (REAL(NG)*(ZZ-Z0)/D1)-REAL(KK-1)
         62     5                                  LCBLK (  NFOUND) = IC
         63     5                                  LPBLK1(1,NFOUND) = II
         64     5                                  LPBLK1(2,NFOUND) = JJ
         65     5                                  LPBLK1(3,NFOUND) = KK
         66     5                                  CBLK  (1,NFOUND) = DX
         67     5                                  CBLK  (2,NFOUND) = DY
         68     5                                  CBLK  (3,NFOUND) = DZ
         69     5                                  LPBLK2(1,NFOUND) = I
         70     5                                  LPBLK2(2,NFOUND) = J
         71     5                                  LPBLK2(3,NFOUND) = K
         72     5               C
         73     5                                  GOTO 1200
         74     5                              ENDIF
         75     4                1300      CONTINUE
         76     3                1200 CONTINUE
         77     2                1100 CONTINUE
         78     1                1000 CONTINUE
         79                     C
         80                           NPBLK=NFOUND
         81                     C
         82                           RETURN
         83                           END

 Diagnostic messages: program name(FNDBLK)
   jwd2008i-i  "fndblk.f", line 1: Dummy argument 'IUT6' not used in this subprogram.
   jwd8220o-i  "fndblk.f", line 1: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5202p-i  "fndblk.f", line 34: DO loop is not parallelized: data dependency of variable 'NFOUND' may cause different results from serial execution for loop.
   jwd5208p-i  "fndblk.f", line 34: DO loop is not parallelized: the assign-refer order of 'LCBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 34: DO loop is not parallelized: the assign-refer order of 'CBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 34: DO loop is not parallelized: the assign-refer order of 'LPBLK2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 34: DO loop is not parallelized: the assign-refer order of 'LPBLK1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5133p-i  "fndblk.f", line 34: DO loop is not parallelized: its structure is too complicated.
   jwd5202p-i  "fndblk.f", line 35: DO loop is not parallelized: data dependency of variable 'NFOUND' may cause different results from serial execution for loop.
   jwd5208p-i  "fndblk.f", line 35: DO loop is not parallelized: the assign-refer order of 'LCBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 35: DO loop is not parallelized: the assign-refer order of 'CBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 35: DO loop is not parallelized: the assign-refer order of 'LPBLK2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 35: DO loop is not parallelized: the assign-refer order of 'LPBLK1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5133p-i  "fndblk.f", line 35: DO loop is not parallelized: its structure is too complicated.
   jwd5202p-i  "fndblk.f", line 36: DO loop is not parallelized: data dependency of variable 'NFOUND' may cause different results from serial execution for loop.
   jwd5208p-i  "fndblk.f", line 36: DO loop is not parallelized: the assign-refer order of 'LCBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 36: DO loop is not parallelized: the assign-refer order of 'CBLK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 36: DO loop is not parallelized: the assign-refer order of 'LPBLK2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndblk.f", line 36: DO loop is not parallelized: the assign-refer order of 'LPBLK1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5133p-i  "fndblk.f", line 36: DO loop is not parallelized: its structure is too complicated.
   jwd5131p-i  "fndblk.f", line 40: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "fndblk.f", line 40: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8664o-i  "fndblk.f", line 40: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd8209o-i  "fndblk.f", line 56: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "fndblk.f", line 57: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "fndblk.f", line 58: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 83
   Statements : 69
   Stack(byte): 480
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 83
   Total statements : 69
   Total stack(byte): 480
   Total prefetch num: 0

