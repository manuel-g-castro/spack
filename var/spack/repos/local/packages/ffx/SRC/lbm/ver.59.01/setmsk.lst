
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:05 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : setmsk.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SETMSK"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SETMSK(NG,MASK,MBC,NBC,LBC)
          2                           IMPLICIT NONE
          3                           INTEGER*4 NG,MASK(0:NG+2,0:NG+2,0:NG+2,2)
          4                           INTEGER*4 MBC,NBC,LBC(5,MBC)
          5                     C
          6                     C    LBC(II,IBC)   ATTRIBUTE DATA OF B.C. GROUPS
          7                     C                   II=1 B.C. GROUP ID (1-26) IN AN ADJACENT CUBE
          8                     C                   II=2 SUB-DOMAIN NUMBER OF AN ADJACENT CUBE
          9                     C                   II=3 CUBE NUMBER OF AN ADJACENT CUBE IN A DOMAIN
         10                     C                   II=4 RELATIVE LEVEL OF AN ADJACENT CUBE
         11                     C                    (-1: FINE, 0:SAME, 1:COARSE)
         12                     C                   II=5 POSITION IN COARSER CUBE
         13                     C
         14                           INTEGER*4 I,J,K,ID,ILEVEL,NS,NE,IS,JS,KS,IE,JE,KE,IBC
         15                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1143
                              <<<  [OPTIMIZATION]
                              <<<    COLLAPSED
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      MASK
                              <<< Loop-information  End >>>
         16     1  pp   2v            DO 1000 K =0,NG+2
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    COLLAPSED
                              <<< Loop-information  End >>>
         17     2   p   2             DO 1100 J =0,NG+2
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    COLLAPSED
                              <<< Loop-information  End >>>
         18     3   p   2             DO 1200 I =0,NG+2
         19     3   p   2v                MASK(I,J,K,1)=0
         20     3   p   2v                MASK(I,J,K,2)=0
         21     3   p   2v       1200 CONTINUE
         22     2   p            1100 CONTINUE
         23     1   p            1000 CONTINUE
         24                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         25     1  pp                 DO 2000 K =1,NG+1
         26     2   p                 DO 2100 J =1,NG+1
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      MASK
                              <<< Loop-information  End >>>
         27     3   p   2v            DO 2200 I =1,NG+1
         28     3   p   2v                MASK(I,J,K,1)=1
         29     3   p   2v                MASK(I,J,K,2)=1
         30     3   p   2v       2200 CONTINUE
         31     2   p            2100 CONTINUE
         32     1   p            2000 CONTINUE
         33                     C
         34                           NS=1
         35                           NE=NG+1
         36     1                     DO 3000 IBC=1,NBC
         37     1                         ID    =LBC(1,IBC)
         38     1                         ILEVEL=LBC(4,IBC)
         39     1                         IF(ILEVEL.NE.1) GOTO 3000
         40     1               C
         41     2                         IF(ID.EQ.1) THEN
         42     2                             IS=NS;IE=NS;JS=NS;JE=NE;KS=NS;KE=NE
         43     2                         ELSE IF(ID.EQ.2) THEN
         44     2                             IS=NE;IE=NE;JS=NS;JE=NE;KS=NS;KE=NE
         45     2                         ELSE IF(ID.EQ.3) THEN
         46     2                             IS=NS;IE=NE;JS=NS;JE=NS;KS=NS;KE=NE
         47     2                         ELSE IF(ID.EQ.4) THEN
         48     2                             IS=NS;IE=NE;JS=NE;JE=NE;KS=NS;KE=NE
         49     2                         ELSE IF(ID.EQ.5) THEN
         50     2                             IS=NS;IE=NE;JS=NS;JE=NE;KS=NS;KE=NS
         51     2                         ELSE IF(ID.EQ.6) THEN
         52     2                             IS=NS;IE=NE;JS=NS;JE=NE;KS=NE;KE=NE
         53     2                         ELSE IF(ID.EQ.7) THEN
         54     2                             IS=NS;IE=NE;JS=NS;JE=NS;KS=NS;KE=NS
         55     2                         ELSE IF(ID.EQ.8) THEN
         56     2                             IS=NS;IE=NE;JS=NE;JE=NE;KS=NS;KE=NS
         57     2                         ELSE IF(ID.EQ.9) THEN
         58     2                             IS=NS;IE=NE;JS=NE;JE=NE;KS=NE;KE=NE
         59     2                         ELSE IF(ID.EQ.10) THEN
         60     2                             IS=NS;IE=NE;JS=NS;JE=NS;KS=NE;KE=NE
         61     2                         ELSE IF(ID.EQ.11) THEN
         62     2                             IS=NS;IE=NS;JS=NS;JE=NE;KS=NS;KE=NS
         63     2                         ELSE IF(ID.EQ.12) THEN
         64     2                             IS=NE;IE=NE;JS=NS;JE=NE;KS=NS;KE=NS
         65     2                         ELSE IF(ID.EQ.13) THEN
         66     2                             IS=NE;IE=NE;JS=NS;JE=NE;KS=NE;KE=NE
         67     2                         ELSE IF(ID.EQ.14) THEN
         68     2                             IS=NS;IE=NS;JS=NS;JE=NE;KS=NE;KE=NE
         69     2                         ELSE IF(ID.EQ.15) THEN
         70     2                             IS=NS;IE=NS;JS=NS;JE=NS;KS=NS;KE=NE
         71     2                         ELSE IF(ID.EQ.16) THEN
         72     2                             IS=NE;IE=NE;JS=NS;JE=NS;KS=NS;KE=NE
         73     2                         ELSE IF(ID.EQ.17) THEN
         74     2                             IS=NE;IE=NE;JS=NE;JE=NE;KS=NS;KE=NE
         75     2                         ELSE IF(ID.EQ.18) THEN
         76     2                             IS=NS;IE=NS;JS=NE;JE=NE;KS=NS;KE=NE
         77     2                         ELSE IF(ID.EQ.19) THEN
         78     2                             IS=NS;IE=NS;JS=NS;JE=NS;KS=NS;KE=NS
         79     2                         ELSE IF(ID.EQ.20) THEN
         80     2                             IS=NE;IE=NE;JS=NS;JE=NS;KS=NS;KE=NS
         81     2                         ELSE IF(ID.EQ.21) THEN
         82     2                             IS=NE;IE=NE;JS=NE;JE=NE;KS=NS;KE=NS
         83     2                         ELSE IF(ID.EQ.22) THEN
         84     2                             IS=NS;IE=NS;JS=NE;JE=NE;KS=NS;KE=NS
         85     2                         ELSE IF(ID.EQ.23) THEN
         86     2                             IS=NS;IE=NS;JS=NS;JE=NS;KS=NE;KE=NE
         87     2                         ELSE IF(ID.EQ.24) THEN
         88     2                             IS=NE;IE=NE;JS=NS;JE=NS;KS=NE;KE=NE
         89     2                         ELSE IF(ID.EQ.25) THEN
         90     2                             IS=NE;IE=NE;JS=NE;JE=NE;KS=NE;KE=NE
         91     2                         ELSE IF(ID.EQ.26) THEN
         92     2                             IS=NS;IE=NS;JS=NE;JE=NE;KS=NE;KE=NE
         93     2                         ENDIF
         94     1               
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         95     2  pp                     DO 3100 K =KS,KE
         96     3   p                     DO 3200 J =JS,JE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      MASK
                              <<< Loop-information  End >>>
         97     4   p   4v                DO 3300 I =IS,IE
         98     4   p   4v                    MASK(I,J,K,1)=0
         99     4   p   4v       3300     CONTINUE
        100     3   p            3200     CONTINUE
        101     2   p            3100     CONTINUE
        102     1               C
        103     1                3000 CONTINUE
        104                     C
        105                           RETURN
        106                           END

 Diagnostic messages: program name(SETMSK)
   jwd5019p-i  "setmsk.f", line 16: The parallel regions are expanded.
   jwd6002s-i  "setmsk.f", line 16: SIMD conversion is applied to DO loop.
   jwd8663o-i  "setmsk.f", line 16: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "setmsk.f", line 16: Loop unrolled 2 times.
   jwd5002p-i  "setmsk.f", line 18: DO loop is parallelized.
   jwd8330o-i  "setmsk.f", line 19: Nested DO loops were coalesced into a single loop by DO variables K,...,I.
   jwd5001p-i  "setmsk.f", line 25: DO loop with DO variable 'K' is parallelized.
   jwd5019p-i  "setmsk.f", line 25: The parallel regions are expanded.
   jwd6001s-i  "setmsk.f", line 27: SIMD conversion is applied to DO loop with DO variable 'I'.
   jwd8663o-i  "setmsk.f", line 27: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "setmsk.f", line 27: Loop unrolled 2 times.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'KE' may cause different results from serial execution for loop.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'KS' may cause different results from serial execution for loop.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'JE' may cause different results from serial execution for loop.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'JS' may cause different results from serial execution for loop.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'IE' may cause different results from serial execution for loop.
   jwd5202p-i  "setmsk.f", line 36: DO loop is not parallelized: data dependency of variable 'IS' may cause different results from serial execution for loop.
   jwd5208p-i  "setmsk.f", line 36: DO loop is not parallelized: the assign-refer order of 'MASK' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5001p-i  "setmsk.f", line 95: DO loop with DO variable 'K' is parallelized.
   jwd6001s-i  "setmsk.f", line 97: SIMD conversion is applied to DO loop with DO variable 'I'.
   jwd8663o-i  "setmsk.f", line 97: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "setmsk.f", line 97: Loop unrolled 4 times.

 Procedure information
   Lines      : 106
   Statements : 220
   Stack(byte): 1152
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 106
   Total statements : 220
   Total stack(byte): 1152
   Total prefetch num: 0

