      SUBROUTINE TGTTAU(JDUMP,NP,WF,CVEL,PARDMP,FDUMP)
      IMPLICIT NONE
      INTEGER*4 JDUMP,NP
      REAL*8    WF(NP),CVEL(3,NP),PARDMP(12),FDUMP(NP)
C
C JDUMP       : TYPE OF DUMPING REGION
C             : 0: NO DUMPING REGION
C             : 1: SPHERE
C             : 2: CYLINDER ALONG X-DIRECTION
C             : 3: CYLINDER ALONG X-DIRECTION
C             : 4: CYLINDER ALONG X-DIRECTION
C             :11: ELLIPSOID  
C
C IF JDUMP = 1,2,3 OR 4
C PARDMP( 1)  : X CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 2)  : Y CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 3)  : Z CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 4)  : R1 OF DOUMPING REGION
C PARDMP( 5)  : R2 OF DOUMPING REGION
C PARDMP( 6)  : COEFICIENT OF DUMPING TERM (=ALPHA)
C PARDMP( 7)  : TARGET DENSITY  
C PARDMP( 8)  : TARGET VELOCITY-U
C PARDMP( 9)  : TARGET VELOCITY-V 
C PARDMP(10)  : TARGET VELOCITY-W
C
C IF JDUMP = 11
C PARDMP( 1)  : X CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 2)  : Y CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 3)  : Z CORDINATE OF CENTER OF DUMPING REGION 
C PARDMP( 4)  : RX    OF DOUMPING REGION
C PARDMP( 5)  : RY    OF DOUMPING REGION
C PARDMP( 6)  : RZ    OF DOUMPING REGION
C PARDMP( 7)  : RATIO OF DOUMPING REGION
C PARDMP( 8)  : COEFICIENT OF DUMPING TERM (=ALPHA)
C PARDMP( 9)  : TARGET DENSITY  
C PARDMP(10)  : TARGET VELOCITY-U
C PARDMP(11)  : TARGET VELOCITY-V 
C PARDMP(12)  : TARGET VELOCITY-W
C
C FDUMP (NP)  : EQUIBRIUM DISTRIBUTION FUNCTION  CALCULATED BY TARGET
C
      INTEGER*4 I,J,K,IP
      REAL*8    XC,YC,ZC,R1,R2,ALPHA,RHO,U0,V0,W0
      REAL*8    CU,UU,DCUBE,DD,X0,Y0,Z0,X1,Y1,Z1,DX,DY,DZ,RR
      REAL*8    RX,RY,RZ,RATIO
C
      IF(JDUMP.GE.1 .AND. JDUMP.LE.4) THEN
          XC   =PARDMP(1)
          YC   =PARDMP(2)
          ZC   =PARDMP(3)
          R1   =PARDMP(4)
          R2   =PARDMP(5)
          ALPHA=PARDMP(6)
          RHO  =PARDMP(7)
          U0   =PARDMP(8)
          V0   =PARDMP(9)
          W0   =PARDMP(10)
      ELSE IF(JDUMP.EQ.11) THEN 
          XC   =PARDMP(1)
          YC   =PARDMP(2)
          ZC   =PARDMP(3)
          RX   =PARDMP(4)
          RY   =PARDMP(5)
          RZ   =PARDMP(6)
          RATIO=PARDMP(7)
          ALPHA=PARDMP(8)
          RHO  =PARDMP(9)
          U0   =PARDMP(10)
          V0   =PARDMP(11)
          W0   =PARDMP(12)
      ENDIF
C
C
      DO 1000 IP=1,NP
          CU=U0*CVEL(1,IP)+V0*CVEL(2,IP)+W0*CVEL(3,IP)
          UU=U0*U0+V0*V0+W0*W0
          FDUMP(IP)=WF(IP)*RHO*(1.0D0+3.0D0*CU+4.5D0*CU*CU-1.5D0*UU)
 1000 CONTINUE
C
      RETURN
      END
