
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:02 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : setbc2.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SETBC2"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SETBC2(IPART,NG,NP,NC,MBC,MBC1,MBC2,MBC3,NBC,LBC,
          2                          *                  MDOM,MPB,NDOM,LDOM,F,FBC1,FBC2,FBC3,BUFSND,
          3                          *                  NBPSND,NBPRCV,IUT6)
          4                           IMPLICIT NONE
          5                           INTEGER*4 IPART,MBC,MBC1,MBC2,MBC3,MPB,MDOM,
          6                          *          NC,NG,NP,NBC(NC),LBC(5,MBC,NC)
          7                           INTEGER*4 NDOM,LDOM(MDOM),NBPSND(MDOM),NBPRCV(MDOM)
          8                           REAL*8    F(0:NG+2,0:NG+2,0:NG+2,NP,NC),
          9                          *          FBC1(NP,NG+1,NG+1,MBC1,NC),
         10                          *          FBC2(NP,NG+1,     MBC2,NC),
         11                          *          FBC3(NP,          MBC3,NC)
         12                           REAL*8    BUFSND(MPB,*)
         13                           INTEGER*4 IUT6
         14                     C
         15                           INTEGER*4 IBC1,IBC2,IBC3,IBC,IC,JJ,
         16                          *          ID,JC,JPART,ILEVEL,IPOSI,IDOM,IERR
         17                           INTEGER*4 I,J,K,IP
         18                           INTEGER*4 II(MDOM)
         19                     C
         20                     C     ====FUNCTION====
         21                     C     SET CUBE-B.C. DATA FROM THE SELF-CUBE
         22                     C
         23                     C     ====VARIABLES LIST====
         24                     C[IN]
         25                     C     IPART          :DOMAIN NUMBER THAT THIS TASK SHOULD COMPUTE/IS COMPUTING.
         26                     C                     IPART BEING SET ZERO MEANS THAT THE PROGRAM SHOULD RUN/IS
         27                     C                     RUNNING IN SERIAL MODE.
         28                     C     NG             :CUBE SIZE (=2^N)
         29                     C     NP             :NUMBER OF PARTICLES (=15)
         30                     C     NC             :NUMBER OF CUBES IN SUB-DOMAIN
         31                     C     MBC            :MAX. NUMBER OF B.C GROUPS IN CUBES (=152)
         32                     C     MBC1           :MAX. NUMBER OF FACE-TYPE  B.C. GROUPS (=24)
         33                     C     MBC2           :MAX. NUMBER OF EDGE-TYPE  B.C. GROUPS (=24)
         34                     C     MBC3           :MAX. NUMBER OF POINT-TYPE B.C. GROUPS (= 8)
         35                     C     NBC(IC)        :NUMBER OF B.C. GROUPS IN CUBES
         36                     C     LLEVEL(IC)     :LEVEL OF CUBES, WHICH INDICATE THE GRID RESOLUTION.
         37                     C                     LEVEL=1 CORRESPONTDS THE FINEST GRID SIZE. A GRID SIZE
         38                     C                     WILL BE TWICE WITH ONE INCREMENT OF THE LEVEL.
         39                     C     LBC(II,IBC,IC) :ATTRIBUTE DATA OF B.C. GROUPS
         40                     C                      II=1 B.C. GROUP ID (1-26) IN AN ADJACENT CUBE
         41                     C                      II=2 SUB-DOMAIN NUMBER OF AN ADJACENT CUBE
         42                     C                      II=3 CUBE NUMBER OF AN ADJACENT CUBE IN A DOMAIN
         43                     C                      II=4 RELATIVE LEVEL OF AN ADJACENT CUBE
         44                     C                       (-1: FINE, 0:SAME, 1:COARSE)
         45                     C                      II=5 POSITION IN COARSER CUBE
         46                     C     MDOM           :MAX. NUMBER OF THE NEIGHBORING SUB-DOMAINS
         47                     C     MPB             NUMBER OF DATA TO BE RECEIVED FROM THE NEIGHBORING
         48                     C                     SUB-DOMAINS
         49                     C     NDOM           :NUMBER OF THE NEIGHBORING SUB-DOMAINS
         50                     C     LDOM(IDOM)     :NEIGHBORING SUB-DOMAIN NUMBER
         51                     C     FBC1 (IP,I,J,IB,IC) :WORK REGION FOR FACE-TYPE  B.C. GROUPS
         52                     C     FBC2 (IP,I,  IB,IC) :WORK REGION FOR EDGE-TYPE  B.C. GROUPS
         53                     C     FBC3 (IP,    IB,IC) :WORK REGION FOR POINT-TYPE B.C. GROUPS
         54                     C     FBC1W(IP,I,J,IB,IC) :WORK REGION FOR FACE-TYPE  B.C. GROUPS
         55                     C     FBC2W(IP,I,J IB,IC) :WORK REGION FOR EDGE-TYPE  B.C. GROUPS
         56                     C     FBC3W(IP,    IB,IC) :WORK REGION FOR POINT-TYPE B.C. GROUPS
         57                     C
         58                     C[OUT]
         59                     C     F(I,J,K,IP)      :PARTICLE DISTRIBUTION FUNCTION
         60                     C     WRKSND(IPB,IDOM) :WORK REGION FOR RECEIVING THE PARTICLE DISTRIBUTION FUNCTION
         61                     C
         62                           IERR=0
         63                     C
         64     1                     IF(IPART.NE.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1334
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.75, ITR: 48, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      II
                              <<< Loop-information  End >>>
         65     2  pp   2v            DO 100 IDOM=1,NDOM
         66     2   p   2v                II    (  IDOM)=1
         67     2   p   2v                BUFSND(1,IDOM)=0
         68     2   p   2v        100 CONTINUE
         69     1                     ENDIF
         70                     C
         71                     C
         72     1                     DO 1000 IC=1,NC
         73     1                     IBC1=0
         74     1                     IBC2=0
         75     1                     IBC3=0
         76     2                     DO 1100 IBC=1,NBC(IC)
         77     2                         ID    =LBC(1,IBC,IC)
         78     2                         JPART =LBC(2,IBC,IC)
         79     2                         JC    =LBC(3,IBC,IC)
         80     2                         ILEVEL=LBC(4,IBC,IC)
         81     2                         IPOSI =LBC(5,IBC,IC)
         82     2               C
         83     3                         IF(ID.LE.6) THEN
         84     3                             IBC1=IBC1+1
         85     3                         ELSE IF (ID.GE.7 .AND. ID.LE.18) THEN
         86     3                             IBC2=IBC2+1
         87     3                         ELSE
         88     3                             IBC3=IBC3+1
         89     3                         ENDIF
         90     2               C
         91     3                         IF(IPART.EQ.0 .OR. IPART.EQ.JPART) THEN
         92     3               CC[SELF DOMAIN]
         93     3               C         FACE-CONNECTION
         94     3                            IF(ID.EQ.01)
         95     3                    *       CALL CBC101(NG,NP,ILEVEL,IPOSI,
         96     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
         97     3                            IF(ID.EQ.02)
         98     3                    *       CALL CBC102(NG,NP,ILEVEL,IPOSI,
         99     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
        100     3                            IF(ID.EQ.03)
        101     3                    *       CALL CBC103(NG,NP,ILEVEL,IPOSI,
        102     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
        103     3                            IF(ID.EQ.04)
        104     3                    *       CALL CBC104(NG,NP,ILEVEL,IPOSI,
        105     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
        106     3                            IF(ID.EQ.05)
        107     3                    *       CALL CBC105(NG,NP,ILEVEL,IPOSI,
        108     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
        109     3                            IF(ID.EQ.06)
        110     3                    *       CALL CBC106(NG,NP,ILEVEL,IPOSI,
        111     3                    *                   F(0,0,0,1,JC),FBC1(1,1,1,IBC1,IC))
        112     3               C
        113     3               C         EDGE-CONNECTION
        114     3                            IF(ID.EQ.07)
        115     3                    *       CALL CBC107(NG,NP,ILEVEL,IPOSI,
        116     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        117     3                            IF(ID.EQ.08)
        118     3                    *       CALL CBC108(NG,NP,ILEVEL,IPOSI,
        119     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        120     3                            IF(ID.EQ.09)
        121     3                    *       CALL CBC109(NG,NP,ILEVEL,IPOSI,
        122     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        123     3                            IF(ID.EQ.10)
        124     3                    *       CALL CBC110(NG,NP,ILEVEL,IPOSI,
        125     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        126     3                            IF(ID.EQ.11)
        127     3                    *       CALL CBC111(NG,NP,ILEVEL,IPOSI,
        128     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        129     3                            IF(ID.EQ.12)
        130     3                    *       CALL CBC112(NG,NP,ILEVEL,IPOSI,
        131     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        132     3                            IF(ID.EQ.13)
        133     3                    *       CALL CBC113(NG,NP,ILEVEL,IPOSI,
        134     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        135     3                            IF(ID.EQ.14)
        136     3                    *       CALL CBC114(NG,NP,ILEVEL,IPOSI,
        137     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        138     3                            IF(ID.EQ.15)
        139     3                    *       CALL CBC115(NG,NP,ILEVEL,IPOSI,
        140     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        141     3                            IF(ID.EQ.16)
        142     3                    *       CALL CBC116(NG,NP,ILEVEL,IPOSI,
        143     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        144     3                            IF(ID.EQ.17)
        145     3                    *       CALL CBC117(NG,NP,ILEVEL,IPOSI,
        146     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        147     3                            IF(ID.EQ.18)
        148     3                    *       CALL CBC118(NG,NP,ILEVEL,IPOSI,
        149     3                    *                   F(0,0,0,1,JC),FBC2(1,1,IBC2,IC))
        150     3               C
        151     3               C         POINT-CONNECTION
        152     3                            IF(ID.EQ.19)
        153     3                    *       CALL CBC119(NG,NP,ILEVEL,IPOSI,
        154     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        155     3                            IF(ID.EQ.20)
        156     3                    *       CALL CBC120(NG,NP,ILEVEL,IPOSI,
        157     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        158     3                            IF(ID.EQ.21)
        159     3                    *       CALL CBC121(NG,NP,ILEVEL,IPOSI,
        160     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        161     3                            IF(ID.EQ.22)
        162     3                    *       CALL CBC122(NG,NP,ILEVEL,IPOSI,
        163     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        164     3                            IF(ID.EQ.23)
        165     3                    *       CALL CBC123(NG,NP,ILEVEL,IPOSI,
        166     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        167     3                            IF(ID.EQ.24)
        168     3                    *       CALL CBC124(NG,NP,ILEVEL,IPOSI,
        169     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        170     3                            IF(ID.EQ.25)
        171     3                    *       CALL CBC125(NG,NP,ILEVEL,IPOSI,
        172     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        173     3                            IF(ID.EQ.26)
        174     3                    *       CALL CBC126(NG,NP,ILEVEL,IPOSI,
        175     3                    *                   F(0,0,0,1,JC),FBC3(1,IBC3,IC))
        176     3               C
        177     3                         ELSE
        178     3               C
        179     3               CC[OTHER DOMAIN]
        180     3               C
        181     3                          IF(IPART.EQ.0) GOTO 1000
        182     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LDOM
                              <<< Loop-information  End >>>
        183     4                          DO 1200 IDOM=1,NDOM
        184     4                              IF(LDOM(IDOM).EQ.JPART) GOTO 1300
        185     4                1200      CONTINUE
        186     3                1300      CONTINUE
        187     3               C
        188     3                             BUFSND(         1,IDOM)=INT(BUFSND(1,IDOM))+1
        189     3                             BUFSND(II(IDOM)+1,IDOM)=JC
        190     3                             BUFSND(II(IDOM)+2,IDOM)=ID
        191     3                             BUFSND(II(IDOM)+3,IDOM)=ILEVEL
        192     3                             BUFSND(II(IDOM)+4,IDOM)=IPOSI
        193     3                             II(IDOM)=II(IDOM)+4
        194     3               C
        195     3                              JJ=II(IDOM)+1
        196     4                             IF(ID.LE.6) THEN
        197     4               C             FACE-CONNECTION
        198     4                                 CALL CBC201(NG,NP,BUFSND(JJ,IDOM),FBC1(1,1,1,IBC1,IC))
        199     4                                 II(IDOM)=II(IDOM)+NP*(NG+1)*(NG+1)
        200     4                             ELSE IF (ID.GE.7 .AND. ID.LE.18) THEN
        201     4               C             EDGE-CONNECTION
        202     4                                 CALL CBC207(NG,NP,BUFSND(JJ,IDOM),FBC2(1,1,IBC2,IC))
        203     4                                 II(IDOM)=II(IDOM)+NP*(NG+1)
        204     4                             ELSE
        205     4               C             POINT-CONNECTION
        206     4                                 CALL CBC219(NG,NP,BUFSND(JJ,IDOM),FBC3(1,IBC3,IC))
        207     4                                 II(IDOM)=II(IDOM)+NP
        208     4                             ENDIF
        209     3               C
        210     3                          ENDIF
        211     2               C
        212     2                1100      CONTINUE
        213     1                1000  CONTINUE
        214                     C
        215                           RETURN
        216                           END

 Diagnostic messages: program name(SETBC2)
   jwd2008i-i  "setbc2.f", line 1: Dummy argument 'IUT6' not used in this subprogram.
   jwd2008i-i  "setbc2.f", line 7: Dummy argument 'NBPRCV' not used in this subprogram.
   jwd2008i-i  "setbc2.f", line 7: Dummy argument 'NBPSND' not used in this subprogram.
   jwd2006i-i  "setbc2.f", line 17: 'IP' is declared but never referenced.
   jwd2006i-i  "setbc2.f", line 17: 'K' is declared but never referenced.
   jwd2006i-i  "setbc2.f", line 17: 'J' is declared but never referenced.
   jwd2006i-i  "setbc2.f", line 17: 'I' is declared but never referenced.
   jwd5001p-i  "setbc2.f", line 65: DO loop with DO variable 'IDOM' is parallelized.
   jwd6001s-i  "setbc2.f", line 65: SIMD conversion is applied to DO loop with DO variable 'IDOM'.
   jwd8204o-i  "setbc2.f", line 65: This loop is software pipelined.
   jwd8205o-i  "setbc2.f", line 65: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 48.
   jwd5122p-i  "setbc2.f", line 72: DO loop is not parallelized: a procedure reference was found in the loop.
   jwd5133p-i  "setbc2.f", line 72: DO loop is not parallelized: its structure is too complicated.
   jwd5122p-i  "setbc2.f", line 76: DO loop is not parallelized: a procedure reference was found in the loop.
   jwd5131p-i  "setbc2.f", line 183: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "setbc2.f", line 183: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "setbc2.f", line 183: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.

 Procedure information
   Lines      : 216
   Statements : 89
   Stack(byte): 1008
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 216
   Total statements : 89
   Total stack(byte): 1008
   Total prefetch num: 0

