
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:22 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : cbc009.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "CBC009"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE CBC009(ITIME,NG,NP,ILVL1,ILVL2,IPOSI,F,FEQ,
          2                          *                  TAU3,LVEL,FBC2,FBC2W)
          3                           IMPLICIT NONE
          4                           INTEGER*4 ITIME,NG,NP,ILVL1,ILVL2,IPOSI,LVEL(3,NP)
          5                           REAL*8    F  (0:NG+2,0:NG+2,0:NG+2,NP),
          6                          *          FEQ(0:NG+2,0:NG+2,0:NG+2,NP),
          7                          *          FBC2(NP,NG+1),FBC2W(NP,NG+1),TAU3(3)
          8                           INTEGER*4 I,J,K,I1,J1,K1,I2,J2,K2,I3,J3,K3,
          9                          *          IMODE,IOFFST,JOFFST,KOFFST,N1,IP,JP
         10                           REAL*8    BUF(NP),COEF,FBUF,FBUF2
         11                     C
         12                     C     ====FUNCTION====
         13                     C     SET B.C. DATA TO EDGE-TYPE B.C. WITH B.C. FLAG-TYPE OF 009
         14                     C
         15                     C     ====VARIABLES LIST====
         16                     C[IN]
         17                     C     ITIME         :TIME STEP
         18                     C     NG            :GRID SIZE (2^N)
         19                     C     NP            :NUMBER OF PARTICLES (=15)
         20                     C     ILVL1         :LEVEL (RESOLUTION) OF SELF-CUBE
         21                     C     ILVL2         :RELATIVE LEVEL (RESOLUTION) OF ADJACENT CUBE
         22                     C     IPOSI         :RELATIVE POSITION OF  ADJACENT CUBE
         23                     C     F  (I,J,K,IP) :PARTICLE DISTRIBUTION FUNCTION
         24                     C     FEQ(I,J,K,IP) :PARTICLE EQUILIBRIUM DISTRIBUTION FUNCTION
         25                     C     TAU3(1)       :RELAXTATION TIME OF A FINER   CUBE
         26                     C     TAU3(2)       :RELAXTATION TIME OF A SELF    CUBE
         27                     C     TAU3(3)       :RELAXTATION TIME OF A COARSER CUBE
         28                     C
         29                     C[OUT]
         30                     C     FBC2 (IP,I)   :WORK REGION FOR FACE-TYPE  B.C. GROUPS
         31                     C     FBC2W(IP,I)   :WORK REGION FOR FACE-TYPE  B.C. GROUPS, TIME INTERPOLATION
         32                     C
         33                     C
         34     1                     IF(ILVL2.EQ.0) THEN
         35     1                         J=NG
         36     1                         K=NG
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 7
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FBC2
                              <<< Loop-information  End >>>
         37     2  pp                     DO 1000 I=1,NG+1
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.37, ITR: 256, MVE: 4, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FBC2
                              <<< Loop-information  End >>>
         38     2   p   4v                    FBC2(1:NP,I) = F(I,J,K,1:NP)
         39     2   p            1000     CONTINUE
         40     1                     ELSE IF(ILVL2.EQ. 1) THEN
         41     1                         J=NG-1
         42     1                         K=NG-1
         43     1                         COEF=2.0D0*(TAU3(3)/TAU3(2))/DBLE(NP)
         44     2                         DO 2000 I=1,NG+1,2
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LVEL
                              <<< Loop-information  End >>>
         45     3  pp                     DO 2100 IP=1,NP
         46     3   p                         FBUF=0.0D0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.07, ITR: 80, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LVEL
                              <<< Loop-information  End >>>
         47     4   p    v                    DO 2200 JP=1,NP
         48     4   p    v                        I2=MIN( MAX(I+LVEL(1,JP),1),NG+1 )
         49     4   p    v                        J2=MIN( MAX(J+LVEL(2,JP),1),NG+1 )
         50     4   p    v                        K2=MIN( MAX(K+LVEL(3,JP),1),NG+1 )
         51     4   p    v                        FBUF2=F(I2,J2,K2,IP)-FEQ(I2,J2,K2,IP)
         52     4   p    v                        FBUF=FBUF+FBUF2
         53     4   p    v       2200         CONTINUE
         54     3   p                         FBC2(IP,(I+1)/2) = FEQ(I,J,K,IP)+COEF*FBUF
         55     3   p            2100     CONTINUE
         56     2                2000     CONTINUE
         57     1                     ELSE IF(ILVL2.EQ.-1) THEN
         58     1                         N1=2**(ILVL1-1)
         59     1                         IMODE=0
         60     2                         IF(MOD(ITIME+1,N1).EQ.1) THEN
         61     2                             IMODE=1
         62     2                         ELSE IF(MOD(ITIME,N1).EQ.1) THEN
         63     2                             IMODE=2
         64     2                         ENDIF
         65     1               C
         66     2                         IF(IPOSI.EQ.1) THEN
         67     2                             IOFFST=0
         68     2                             J1=NG+1
         69     2                             K1=NG+1
         70     2                         ELSE IF (IPOSI.EQ.2) THEN
         71     2                             IOFFST=NG/2
         72     2                             J1=NG+1
         73     2                             K1=NG+1
         74     2                         ELSE IF (IPOSI.EQ.3) THEN
         75     2                             IOFFST=0
         76     2                             J1=NG/2+1
         77     2                             K1=NG+1
         78     2                         ELSE IF (IPOSI.EQ.4) THEN
         79     2                             IOFFST=NG/2
         80     2                             J1=NG+1
         81     2                             K1=NG/2+1
         82     2                         ELSE IF (IPOSI.EQ.5) THEN
         83     2                             IOFFST=0
         84     2                             J1=NG+1
         85     2                             K1=NG/2+1
         86     2                         ELSE IF (IPOSI.EQ.6) THEN
         87     2                             IOFFST=NG/2
         88     2                             J1=NG+1
         89     2                             K1=NG/2+1
         90     2                         ENDIF
         91     1               C
         92     1                         J2=J1-1
         93     1                         J3=J2-1
         94     1                         K2=K1-1
         95     1                         K3=K2-1
         96     1                         COEF=0.5D0*(TAU3(1)/TAU3(2))
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      BUF, FBC2W, FBC2
                              <<< Loop-information  End >>>
         97     2                         DO 3100 I=1,NG+1
         98     3                             IF(MOD(I,2).EQ.1) THEN
         99     3                                 I1=IOFFST+(I+1)/2
        100     3                                 I2=I1
        101     3                             ELSE
        102     3                                 I1=IOFFST+(I+0)/2
        103     3                                 I2=I1+1
        104     3                             ENDIF
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 517
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 112, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      BUF
                              <<< Loop-information  End >>>
        105     3  pp   2v                    DO 3400 IP=1,NP
        106     3   p   2v                        FBUF
        107     3                    *            = 0.5E0*(FEQ(I1,J1,K1,IP)+FEQ(I2,J1,K1,IP))
        108     3   p   2v                        FBUF2
        109     3                    *            = 0.5E0*(F(I1,J1,K1,IP)+F(I2,J1,K1,IP))
        110     3   p   2v                        BUF(IP)=FBUF+COEF*(FBUF2-FBUF)
        111     3   p   2v       3400         CONTINUE
        112     3                             IF(IMODE.EQ.1) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1067
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.40, ITR: 96, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FBC2W, FBC2, BUF
                              <<< Loop-information  End >>>
        113     3  pp   2v                        FBC2 (1:NP,I) = BUF(1:NP)
        114     3   p   2v                        FBC2W(1:NP,I) = BUF(1:NP)
        115     3                             ELSE IF(IMODE.EQ.2) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 4.00, ITR: 176, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FBC2, FBC2W, BUF
                              <<< Loop-information  End >>>
        116     3  pp   2v                        FBC2 (1:NP,I) = 0.5D0*(BUF+FBC2W(1:NP,I))
        117     3                             ENDIF
        118     2                3100     CONTINUE
        119     1                     ENDIF
        120                     C
        121                      4000 CONTINUE
        122                     C
        123                           RETURN
        124                           END

 Diagnostic messages: program name(CBC009)
   jwd8220o-i  "cbc009.f", line 1: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd2006i-i  "cbc009.f", line 8: 'KOFFST' is declared but never referenced.
   jwd2006i-i  "cbc009.f", line 8: 'JOFFST' is declared but never referenced.
   jwd2006i-i  "cbc009.f", line 8: 'I3' is declared but never referenced.
   jwd5001p-i  "cbc009.f", line 37: DO loop with DO variable 'I' is parallelized.
   jwd6003s-i  "cbc009.f", line 38: SIMD conversion is applied to array description.
   jwd8204o-i  "cbc009.f", line 38: This loop is software pipelined.
   jwd8205o-i  "cbc009.f", line 38: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 256.
   jwd8209o-i  "cbc009.f", line 43: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5208p-i  "cbc009.f", line 44: DO loop is not parallelized: the assign-refer order of 'FBC2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5001p-i  "cbc009.f", line 45: DO loop with DO variable 'IP' is parallelized.
   jwd6004s-i  "cbc009.f", line 47: SIMD conversion is applied to DO loop with DO variable 'JP'. The DO loop contains a reduction operation.
   jwd8204o-i  "cbc009.f", line 47: This loop is software pipelined.
   jwd8205o-i  "cbc009.f", line 47: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 80.
   jwd8209o-i  "cbc009.f", line 96: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5208p-i  "cbc009.f", line 97: DO loop is not parallelized: the assign-refer order of 'BUF' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5001p-i  "cbc009.f", line 105: DO loop with DO variable 'IP' is parallelized.
   jwd6001s-i  "cbc009.f", line 105: SIMD conversion is applied to DO loop with DO variable 'IP'.
   jwd8204o-i  "cbc009.f", line 105: This loop is software pipelined.
   jwd8205o-i  "cbc009.f", line 105: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 112.
   jwd5003p-i  "cbc009.f", line 113: Array description is parallelized.
   jwd6003s-i  "cbc009.f", line 113: SIMD conversion is applied to array description.
   jwd8204o-i  "cbc009.f", line 113: This loop is software pipelined.
   jwd8205o-i  "cbc009.f", line 113: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 96.
   jwd5003p-i  "cbc009.f", line 116: Array description is parallelized.
   jwd6003s-i  "cbc009.f", line 116: SIMD conversion is applied to array description.
   jwd8204o-i  "cbc009.f", line 116: This loop is software pipelined.
   jwd8205o-i  "cbc009.f", line 116: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 176.

 Procedure information
   Lines      : 124
   Statements : 91
   Stack(byte): 2416
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 124
   Total statements : 91
   Total stack(byte): 2416
   Total prefetch num: 0

