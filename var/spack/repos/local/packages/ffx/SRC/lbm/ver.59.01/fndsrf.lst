
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:01 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : fndsrf.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FNDSRF"
  (line-no.)(nest)(optimize)
          1                     C
          2                           SUBROUTINE FNDSRF(NG,NC,LLEVEL,LPOSI,D0,
          3                          *                  NP,XX,YY,ZZ,
          4                          *                  MPG,NPSURF,LSURF,LPSURF,
          5                          *                  CSURF,IUT6)
          6                           IMPLICIT NONE
          7                           INTEGER*4 NG,NC,LLEVEL(NC),LPOSI(3,NC),NP
          8                           REAL*8    D0,D1
          9                           REAL*4    XX(NP),YY(NP),ZZ(NP)
         10                           INTEGER*4 MPG,NPSURF,LSURF(4,MPG),LPSURF(MPG)
         11                           REAL*8    CSURF(3,MPG)
         12                           INTEGER*4 IUT6
         13                     C
         14                           INTEGER*4 I,IC,II,JJ,KK,NFOUND
         15                           REAL*8    X0,Y0,Z0,X1,Y1,Z1,DX,DY,DZ
         16                     C
         17                           NFOUND=0
         18     1                     DO 1000 I=1,NP
         19     1                          LSURF(1,I) = 0
         20     1                          LSURF(2,I) = 0
         21     1                          LSURF(3,I) = 0
         22     1                          LSURF(4,I) = 0
         23     1                          CSURF(1,I) = 99.0
         24     1                          CSURF(2,I) = 99.0
         25     1                          CSURF(3,I) = 99.0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LLEVEL, LPOSI
                              <<< Loop-information  End >>>
         26     2                          DO 1100 IC=1,NC
         27     2                              D1=D0*2.0**(LLEVEL(IC)-1)
         28     2                              X0=D0*REAL(LPOSI(1,IC))
         29     2                              Y0=D0*REAL(LPOSI(2,IC))
         30     2                              Z0=D0*REAL(LPOSI(3,IC))
         31     2                              X1=X0+D1
         32     2                              Y1=Y0+D1
         33     2                              Z1=Z0+D1
         34     3                              IF(     X0.LE.XX(I) .AND. XX(I).LT.X1
         35     3                    *           .AND. Y0.LE.YY(I) .AND. YY(I).LT.Y1
         36     3                    *           .AND. Z0.LE.ZZ(I) .AND. ZZ(I).LT.Z1 ) THEN
         37     3               C
         38     3                                  NFOUND=NFOUND+1
         39     3               C
         40     3                                  II=INT(REAL(NG)*(XX(I)-X0)/D1)+1
         41     3                                  JJ=INT(REAL(NG)*(YY(I)-Y0)/D1)+1
         42     3                                  KK=INT(REAL(NG)*(ZZ(I)-Z0)/D1)+1
         43     3                                  DX=   (REAL(NG)*(XX(I)-X0)/D1)-REAL(II-1)
         44     3                                  DY=   (REAL(NG)*(YY(I)-Y0)/D1)-REAL(JJ-1)
         45     3                                  DZ=   (REAL(NG)*(ZZ(I)-Z0)/D1)-REAL(KK-1)
         46     3                                  LSURF (1,NFOUND) = IC
         47     3                                  LSURF (2,NFOUND) = II
         48     3                                  LSURF (3,NFOUND) = JJ
         49     3                                  LSURF (4,NFOUND) = KK
         50     3                                  LPSURF(  NFOUND) = I
         51     3                                  CSURF (1,NFOUND) = DX
         52     3                                  CSURF (2,NFOUND) = DY
         53     3                                  CSURF (3,NFOUND) = DZ
         54     3               C
         55     3                                  GOTO 1000
         56     3                              ENDIF
         57     2                1100      CONTINUE
         58     1                1000 CONTINUE
         59                     C
         60                           NPSURF=NFOUND
         61                     C
         62                           RETURN
         63                           END

 Diagnostic messages: program name(FNDSRF)
   jwd2008i-i  "fndsrf.f", line 2: Dummy argument 'IUT6' not used in this subprogram.
   jwd8220o-i  "fndsrf.f", line 2: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5202p-i  "fndsrf.f", line 18: DO loop is not parallelized: data dependency of variable 'NFOUND' may cause different results from serial execution for loop.
   jwd5208p-i  "fndsrf.f", line 18: DO loop is not parallelized: the assign-refer order of 'LPSURF' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndsrf.f", line 18: DO loop is not parallelized: the assign-refer order of 'CSURF' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "fndsrf.f", line 18: DO loop is not parallelized: the assign-refer order of 'LSURF' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5133p-i  "fndsrf.f", line 18: DO loop is not parallelized: its structure is too complicated.
   jwd5131p-i  "fndsrf.f", line 26: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "fndsrf.f", line 26: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8664o-i  "fndsrf.f", line 26: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd8209o-i  "fndsrf.f", line 40: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "fndsrf.f", line 41: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "fndsrf.f", line 42: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 63
   Statements : 50
   Stack(byte): 432
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 63
   Total statements : 50
   Total stack(byte): 432
   Total prefetch num: 0

