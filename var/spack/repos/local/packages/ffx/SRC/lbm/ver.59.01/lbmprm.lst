
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:45:44 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : lbmprm.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "LBMPRM"
  (line-no.)(nest)(optimize)
          1                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          2                     C                                                                        C
          3                     C     LBMPRM                                                             C
          4                     C                                                                        C
          5                     C            2016.11.29 WRITTEN BY Y.YAMADE                              C
          6                     C                                                                        C
          7                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          8                           SUBROUTINE LBMPRM(IUTIN,IUT6,IPART,ISTART,NTIME,
          9                          *                  DSCALE,VSCALE,VISCM,RHO0,IOUT,INTFSV,
         10                          *                  MSAMPL,NSAMPL,LSAMPL,
         11                          *                  XSAMPL,YSAMPL,ZSAMPL,
         12                          *                  FILECB,FILEBC,FILEIF,FILEFF,FILEVF,
         13                          *                  FILEAV,FILERM,FILEFS,FILEHT,IUT0,IERR)
         14                           IMPLICIT NONE
         15                           INTEGER*4    IUTIN,IUT6,IPART,ISTART,NTIME,IOUT,INTFSV
         16                           REAL*8       DSCALE,VSCALE,VISCM,RHO0
         17                           INTEGER*4    MSAMPL,NSAMPL,LSAMPL(5,MSAMPL)
         18                           REAL*8       XSAMPL(MSAMPL),YSAMPL(MSAMPL),ZSAMPL(MSAMPL)
         19                           CHARACTER*60 FILECB,FILEBC,FILEIF,FILEVF,
         20                          *             FILEFF,FILEHT,FILEAV,FILERM,FILEFS
         21                           INTEGER*4    IUT0,IERR
         22                     C
         23                           CHARACTER*60 FILE
         24                     C
         25                     C[IN]
         26                     C     IUTIN    :UNIT NUMBER OF PARAMETER FILE
         27                     C     IUT6     :UNIT NUMBER OF STANDARD OUTPUT
         28                     C
         29                     C[OUT]
         30                     C     ISTART   :RESTART FLAG (0:OFF, 1:ON)
         31                     C     NTIME    :NUMBER OF TIME STEPS
         32                     C     DSCALE LENGTH OF MINIMUMU CUBE
         33                     C     VSCALE VELOCITY RATIO BETWEEN CHARACTEERICTIC AND PARTICLE VELOCITY
         34                     C     VISCM  NORMALIZED VISCOCITY BY DSCALE AND VSCALE
         35                     C     RHO0   INITIAL DENSITY
         36                     C     UINLT  U-VELOCITY AT INLET B.C.       (NORMALIZED BY VSCALE)
         37                     C     VINLT  V-VELOCITY AT INLET B.C.       (NORMALIZED BY VSCALE)
         38                     C     WINLT  W-VELOCITY AT INLET B.C.       (NORMALIZED BY VSCALE)
         39                     C     UWALL  U-VELOCITY AT MOVING WALL B.C. (NORMALIZED BY VSCALE)
         40                     C     VWALL  V-VELOCITY AT MOVING WALL B.C. (NORMALIZED BY VSCALE)
         41                     C     WWALL  W-VELOCITY AT MOVING WALL B.C. (NORMALIZED BY VSCALE)
         42                     C     FILEIN   :FILE NAME OF PARAMETER        FILE ( INPUT) (=PARAMLBM3D)
         43                     C     FILECB   :FILE NAME OF GF-CUBE          FILE ( INPUT)
         44                     C     FILEBC   :FILE NAME OF GF-BOUNDARY      FILE ( INPUT)
         45                     C     FILEIF   :FILE NAME OF GF-FLOW          FILE ( INPUT)
         46                     C     FILEVF   :FILE NAME OF GF-FUNC          FILE (OUTPUT)
         47                     C     FILEFF   :FILE NAME OF GF-FLOW          FILE (OUTPUT)
         48                     C     FILEHT   :FILE NAME OF GF-HIST          FILE (OUTPUT)
         49                     C     FILEAV   :FILE NAME OF GF-FLOW AVE.     FILE (OUTPUT)
         50                     C     FILERM   :FILE NAME OF GF-FLOW RMS      FILE (OUTPUT)
         51                     C     FILEFS   :FILE NAME OF GF-FLOW UNSTEADY FILE (OUTPUT)
         52                     C
         53                           CHARACTER*60 ERRMSG,EREXP1
         54                           DATA ERRMSG
         55                          * / ' ## SUBROUTINE LBMPRM: FATAL      ERROR OCCURENCE; RETURNED' /
         56                           DATA EREXP1
         57                          * / ' FILE FORMAT OF THE  FILE IS NOT FOR FFX   ' /
         58                     C
         59                           CHARACTER*15 COMDAT(4)
         60                           DATA COMDAT(1) / ' DEBSITY      ;' /
         61                           DATA COMDAT(2) / ' VELOCITY-U   ;' /
         62                           DATA COMDAT(3) / ' VELOCITY-V   ;' /
         63                           DATA COMDAT(4) / ' VELOCITY-W   ;' /
         64                     C
         65                           INTEGER*4 ISAMPL
         66                     C
         67                           IERR = 0
         68                     C
         69                           READ(IUTIN,*)
         70                           READ(IUTIN,*)
         71                           READ(IUTIN,*)
         72                           READ(IUTIN,*) ISTART,NTIME,IOUT,INTFSV
         73                           READ(IUTIN,*)
         74                           READ(IUTIN,*) DSCALE,VSCALE,VISCM,RHO0
         75                           READ(IUTIN,*)
         76                           READ(IUTIN,*) NSAMPL
         77     1                     IF(NSAMPL.GT.MSAMPL) THEN
         78     1                          WRITE(IUT6,*) 'INSUFFICIENT MEMORY SPACE FOR HIST'
         79     1                          IERR=1
         80     1                          RETURN
         81     1                     ENDIF
         82                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 1
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
         83     1   s    s            DO 1000 ISAMPL=1,NSAMPL
         84     1   m    s                READ(IUTIN,*) LSAMPL(1,ISAMPL),
         85     1                    *                  XSAMPL(ISAMPL),YSAMPL(ISAMPL),ZSAMPL(ISAMPL)
         86     1   p    s       1000 CONTINUE
         87                     C
         88                           READ(IUTIN,*)
         89                           READ(IUTIN,'(A60)') FILECB
         90                           READ(IUTIN,*)
         91                           READ(IUTIN,'(A60)') FILEBC
         92                           READ(IUTIN,*)
         93                           READ(IUTIN,'(A60)') FILEIF
         94                           READ(IUTIN,*)
         95                           READ(IUTIN,'(A60)') FILEVF
         96                           READ(IUTIN,*)
         97                           READ(IUTIN,'(A60)') FILEFF
         98                           READ(IUTIN,*)
         99                           READ(IUTIN,'(A60)') FILEHT
        100                           READ(IUTIN,*)
        101                           READ(IUTIN,'(A60)') FILEAV
        102                           READ(IUTIN,*)
        103                           READ(IUTIN,'(A60)') FILERM
        104                           READ(IUTIN,*)
        105                           READ(IUTIN,'(A60)') FILEFS
        106                     C
        107     1                     IF(IPART.GE.1) THEN
        108     1                         CALL MFNAME(FILECB,FILE,IPART,IUT6,IERR)
        109     1                         FILECB = FILE
        110     1               C
        111     1                         CALL MFNAME(FILEBC,FILE,IPART,IUT6,IERR)
        112     1                         FILEBC = FILE
        113     1               C
        114     1                         CALL MFNAME(FILEIF,FILE,IPART,IUT6,IERR)
        115     1                         FILEIF = FILE
        116     1               C
        117     1                         CALL MFNAME(FILEVF,FILE,IPART,IUT6,IERR)
        118     1                         FILEVF = FILE
        119     1               C
        120     1                         CALL MFNAME(FILEFF,FILE,IPART,IUT6,IERR)
        121     1                         FILEFF = FILE
        122     1               C
        123     1                         CALL MFNAME(FILEHT,FILE,IPART,IUT6,IERR)
        124     1                         FILEHT = FILE
        125     1               C
        126     1                         CALL MFNAME(FILEAV,FILE,IPART,IUT6,IERR)
        127     1                         FILEAV = FILE
        128     1               C
        129     1                         CALL MFNAME(FILERM,FILE,IPART,IUT6,IERR)
        130     1                         FILERM = FILE
        131     1               C
        132     1                         CALL MFNAME(FILEFS,FILE,IPART,IUT6,IERR)
        133     1                         FILEFS = FILE
        134     1                     ENDIF
        135                     C
        136                     CCYYTMP---
        137     1                     IF(IOUT.NE.0) THEN
        138     1                         WRITE(IUT6,*) 'IOUT OF 1,2 IS NOT SUPPORTED IN THIS VERSION'
        139     1                         IERR=1
        140     1                         RETURN
        141     1                     ENDIF
        142                     CCYYTMP---
        143                     C
        144                           WRITE(IUT6,'(A32,I8 )')   'ISTART                      : ',ISTART
        145                           WRITE(IUT6,'(A32,I8 )')   'NTIME                       : ',NTIME
        146                           WRITE(IUT6,'(A32,I8 )')   'IOUT                        : ',IOUT
        147                           WRITE(IUT6,'(A32,I8 )')   'INTFSV                      : ',INTFSV
        148                           WRITE(IUT6,'(A32,1PE13.5 )') 'DSCALE                   : ',DSCALE
        149                           WRITE(IUT6,'(A32,1PE13.5 )') 'VSCALE                   : ',VSCALE
        150                           WRITE(IUT6,'(A32,1PE13.5 )') 'VISCM                    : ',VISCM
        151                           WRITE(IUT6,'(A32,1PE13.5 )') 'RHO0                     : ',RHO0
        152                           WRITE(IUT6,'(A32,I8   )') 'NSAMPL                      : ',NSAMPL
        153                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LSAMPL
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 3
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        154     1                     DO 1100 ISAMPL=1,NSAMPL
        155     2                         IF(LSAMPL(1,ISAMPL).LT.1 .OR. LSAMPL(1,ISAMPL).GT.4) THEN
        156     2                             WRITE(IUT0,*) ERRMSG
        157     2                             WRITE(IUT0,*) EREXP1
        158     2                             IERR = 1
        159     2                             RETURN
        160     2                         ENDIF
        161     1               C
        162     1                         WRITE(IUT6,600) COMDAT(LSAMPL(1,ISAMPL)) ,
        163     1                    *                     XSAMPL(ISAMPL),YSAMPL(ISAMPL),ZSAMPL(ISAMPL)
        164     1                1100 CONTINUE
        165                     C
        166                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF CUBE       FILE: ',FILECB
        167                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF B.C.       FILE: ',FILEBC
        168                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF INI. FUNC  FILE: ',FILEIF
        169                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF VEL. FUNC  FILE: ',FILEVF
        170                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF HISTORY    FILE: ',FILEHT
        171                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF FINAL FLOW FILE: ',FILEFF
        172                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF AVE FLOW   FILE: ',FILEAV
        173                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF RMS FLOW   FILE: ',FILERM
        174                           WRITE(IUT6,'(A32,A60)')   'FILE NAME OF UNSTEADY   FILE: ',FILEFS
        175                     C
        176                           RETURN
        177                      600  FORMAT(  A15 , ' XSMPL =' ,1PE12.5,
        178                          *               ' YSMPL =', 1PE12.5, ' ZSMPL =' ,1PE12.5  )
        179                     C
        180                           END

 Diagnostic messages: program name(LBMPRM)
   jwd5302p-i  "lbmprm.f", line 83: This loop is not parallelized: the performance of a partial parallelization execution may not be improved.
   jwd8664o-i  "lbmprm.f", line 83: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd5208p-i  "lbmprm.f", line 84: DO loop is not parallelized: the assign-refer order of 'ZSAMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "lbmprm.f", line 84: DO loop is not parallelized: the assign-refer order of 'YSAMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "lbmprm.f", line 84: DO loop is not parallelized: the assign-refer order of 'XSAMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "lbmprm.f", line 84: DO loop is not parallelized: the assign-refer order of 'LSAMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5121p-i  "lbmprm.f", line 84: DO loop is not parallelized: an input/output statement was found in the loop.
   jwd6121s-i  "lbmprm.f", line 84: SIMD conversion cannot be applied to DO loop: an input/output statement was found in the loop.
   jwd5131p-i  "lbmprm.f", line 154: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "lbmprm.f", line 154: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8664o-i  "lbmprm.f", line 154: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.

 Procedure information
   Lines      : 180
   Statements : 108
   Stack(byte): 6000
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 180
   Total statements : 108
   Total stack(byte): 6000
   Total prefetch num: 0

