
 Fujitsu Fortran Version 4.8.1  Thu Nov 24 16:46:02 2022

 Compilation information
   Current directory : /vol0005/mdt2/home/u10588/SRC/lbm/ver.59.01
   Source file       : setbnd.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Knointentopt
   Cpp options          : -I/vol0005/mdt2/home/u10588/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI028/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI028/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=8 -D__FRT_patchlevel__=1 -D__FRT_version__="4.8.1" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SETBND"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SETBND(ITIME,IPART,NP,LVEL,NG,NC,MBC,MBC1,MBC2,MBC3,
          2                          *                  NBC,LLEVEL,LBC,MPBOUN,NPBOUN,LPBOUN,F,FEQ,
          3                          *                  VISCM,DSCALE,VSCALE,CVEL,WF,
          4                          *                  MDOM,MPB,NDOM,LDOM,NBPSND,NBPRCV,
          5                          *                  BUFSND,BUFRCV,
          6                          *                  FBC1,FBC1W,FBC2,FBC2W,FBC3,FBC3W,
          7                          *                  IUT6,IUT0,IERR)
          8                           IMPLICIT NONE
          9                     C
         10                           INTEGER*4 ITIME,IPART,NP,LVEL(3,NP),
         11                          *          NG,NC,MBC,MBC1,MBC2,MBC3,MPB,MDOM,NDOM
         12                           INTEGER*4 NBC(NC),LLEVEL(NC),LBC(5,MBC,NC)
         13                           INTEGER*4 MPBOUN,NPBOUN(NC),LPBOUN(5,MPBOUN,NC)
         14                           INTEGER*4 LDOM(NDOM),NBPSND(NDOM),NBPRCV(NDOM)
         15                           REAL*8    F  (0:NG+2,0:NG+2,0:NG+2,NP,NC)
         16                           REAL*8    FEQ(0:NG+2,0:NG+2,0:NG+2,NP)
         17                           REAL*8    VISCM,DSCALE,VSCALE,CVEL(3,NP),WF(NP)
         18                           REAL*8    FBC1 (NP,NG+1,NG+1,MBC1,NC),
         19                          *          FBC1W(NP,NG+1,NG+1,MBC1,NC),
         20                          *          FBC2 (NP,NG+1,     MBC2,NC),
         21                          *          FBC2W(NP,NG+1,     MBC2,NC),
         22                          *          FBC3 (NP,          MBC3,NC),
         23                          *          FBC3W(NP,          MBC3,NC)
         24                           REAL*8    BUFSND(MPB,*),BUFRCV(MPB,*)
         25                           INTEGER*4 IUT6,IUT0,IERR
         26                     C
         27                           REAL*8    RHO,U0,V0,W0,UU,CU,FBUF,TAU0,TAU3(3),VIS1,VIS2,VIS3
         28                           INTEGER*4 IC,ICB,NBC1,NBC2,NBC3,II,I,J,K,IP,ID,
         29                          *          MPBDOM,IDOM,ILVL1,ILVL2,ILVL3
         30                     C
         31                     C     ====FUNCTION====
         32                     C     MAIN ROUTINE FOR SETTING BOUNDARY CONDITIONS
         33                     C
         34                     C     ====VARIABLES LIST====
         35                     C[IN]
         36                     C     ITIME          :TIME STEP
         37                     C     IPART          :DOMAIN NUMBER THAT THIS TASK SHOULD COMPUTE/IS COMPUTING.
         38                     C                     IPART BEING SET ZERO MEANS THAT THE PROGRAM SHOULD RUN/IS
         39                     C                     RUNNING IN SERIAL MODE.
         40                     C     NG             :CUBE SIZE (=2^N)
         41                     C     NC             :NUMBER OF CUBES IN SUB-DOMAIN
         42                     C     MBC            :MAX. NUMBER OF B.C GROUPS IN CUBES (=152)
         43                     C     MBC1           :MAX. NUMBER OF FACE-TYPE  B.C. GROUPS (=24)
         44                     C     MBC2           :MAX. NUMBER OF EDGE-TYPE  B.C. GROUPS (=24)
         45                     C     MBC3           :MAX. NUMBER OF POINT-TYPE B.C. GROUPS (= 8)
         46                     C     NBC(IC)        :NUMBER OF B.C. GROUPS IN CUBES
         47                     C     LLEVEL(IC)     :LEVEL OF CUBES, WHICH INDICATE THE GRID RESOLUTION.
         48                     C                     LEVEL=1 CORRESPONTDS THE FINEST GRID SIZE. A GRID SIZE
         49                     C                     WILL BE TWICE WITH ONE INCREMENT OF THE LEVEL.
         50                     C     LBC(II,IBC,IC) :ATTRIBUTE DATA OF B.C. GROUPS
         51                     C                      II=1 B.C. GROUP ID (1-26) IN AN ADJACENT CUBE
         52                     C                      II=2 SUB-DOMAIN NUMBER OF AN ADJACENT CUBE
         53                     C                      II=3 CUBE NUMBER OF AN ADJACENT CUBE IN A DOMAIN
         54                     C                      II=4 RELATIVE LEVEL OF AN ADJACENT CUBE
         55                     C                       (-1: FINE, 0:SAME, 1:COARSE)
         56                     C                      II=5 POSITION IN COARSER CUBE
         57                     C     VISCM          : NORMALIZED VISCOCITY BY DSCALE AND VSCALE
         58                     C     DSCALE         :LENGTH OF MINIMUMU CUBE
         59                     C     VSCALE         :VELOCITY RATIO BETWEEN CHARACTEERICTIC AND PARTICLE VELOCITY
         60                     C     MDOM           :MAX. NUMBER OF THE NEIGHBORING SUB-DOMAINS
         61                     C     MPB             NUMBER OF DATA TO BE RECEIVED FROM THE NEIGHBORING
         62                     C                     SUB-DOMAINS
         63                     C    NDOM            :NUMBER OF THE NEIGHBORING SUB-DOMAINS
         64                     C    LDOM(IDOM)      :NEIGHBORING SUB-DOMAIN NUMBER
         65                     C    NBPRCV(IDOM)    :NUMBER OF DATA TO BE RECEIVED FROM THE NEIGHBORING SUB-DOMAINS
         66                     C    NBPSND(IDOM)    :NUMBER OF DATA TO SEND TO THE NEIGHBORING SUB-DOMAINS
         67                     C
         68                     C[IN-OUT]
         69                     C     F(I,J,K,IP,IC) :PARTICLE DISTRIBUTION FUNCTION
         70                     C
         71                     C
         72                     C[WORK]
         73                     C     F(I,J,K,IP,IC)   :PARTICLE EQUILIBRIUM DISTRIBUTION FUNCTION
         74                     C     WRKRCV(IPB,IDOM) :WORK REGION FOR RECEIVING THE PARTICLE DISTRIBUTION FUNCTION
         75                     C     WRKSND(IPB,IDOM) :WORK REGION FOR RECEIVING THE PARTICLE DISTRIBUTION FUNCTION
         76                     C     FBC1 (IP,I,J,IB,IC) :WORK REGION FOR FACE-TYPE  B.C. GROUPS
         77                     C     FBC2 (IP,I,  IB,IC) :WORK REGION FOR EDGE-TYPE  B.C. GROUPS
         78                     C     FBC3 (IP,    IB,IC) :WORK REGION FOR POINT-TYPE B.C. GROUPS
         79                     C     FBC1W(IP,I,J,IB,IC) :WORK REGION FOR FACE-TYPE  B.C. GROUPS
         80                     C     FBC2W(IP,I,J IB,IC) :WORK REGION FOR EDGE-TYPE  B.C. GROUPS
         81                     C     FBC3W(IP,    IB,IC) :WORK REGION FOR POINT-TYPE B.C. GROUPS
         82                     C
         83                           CALL USTSTA(11)
         84                     C
         85                     C[1] SET CUBE-B.C. DATA TO WORK REIGION FBC[1,2,3]
         86                     C
         87                           CALL USTSTA(12)
         88     1                     DO 1000 IC=1,NC
         89     1                         ILVL2=LLEVEL(IC)
         90     1                         ILVL1=MIN(1,ILVL2-1)
         91     1                         ILVL3=      ILVL2+1
         92     1                         VIS1= VISCM*(VSCALE/DSCALE)*DBLE(NG)/(2.0E0**ILVL1)
         93     1                         VIS2= VISCM*(VSCALE/DSCALE)*DBLE(NG)/(2.0E0**ILVL2)
         94     1                         VIS3= VISCM*(VSCALE/DSCALE)*DBLE(NG)/(2.0E0**ILVL3)
         95     1                         TAU3(1)= 0.5D0+3.0D0*VIS1
         96     1                         TAU3(2)= 0.5D0+3.0D0*VIS2
         97     1                         TAU3(3)= 0.5D0+3.0D0*VIS3
         98     1               C
         99     1               C
        100     1               C NOTE THAT EQUILIBRIUM DISTRIBUTION FUNCTION IS NOT NECESSARY
        101     1               C IF ALL THE NEIBERING CUBES HAVE SAME LEVEL
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LBC
                              <<< Loop-information  End >>>
        102     2                         DO 1001 ICB=1,NBC(IC)
        103     2                             IF(LBC(4,ICB,IC).NE.0) GOTO 1002
        104     2                1001     CONTINUE
        105     1                         GOTO 1003
        106     1               C
        107     1                1002     CONTINUE
        108     1               C
        109     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
        110     2  pp                     DO 1101 K =0,NG+2
        111     3   p                     DO 1102 J =0,NG+2
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      CVEL, WF
                              <<< Loop-information  End >>>
        112     4   p                     DO 1103 I =0,NG+2
        113     4   p                         RHO=0.0D0
        114     4   p                         U0 =0.0D0
        115     4   p                         V0 =0.0D0
        116     4   p                         W0 =0.0D0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 1.72, ITR: 80, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      CVEL
                              <<< Loop-information  End >>>
        117     5   p   2v                    DO 1104 IP=1,NP
        118     5   p   2v                        FBUF=F(I,J,K,IP,IC)
        119     5   p   2v                        RHO=RHO+FBUF
        120     5   p   2v                        U0 =U0 +FBUF*CVEL(1,IP)
        121     5   p   2v                        V0 =V0 +FBUF*CVEL(2,IP)
        122     5   p   2v                        W0 =W0 +FBUF*CVEL(3,IP)
        123     5   p   2v       1104         CONTINUE
        124     4   p                         U0=U0/RHO
        125     4   p                         V0=V0/RHO
        126     4   p                         W0=W0/RHO
        127     4   p                         UU =U0*U0+V0*V0+W0*W0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 1.33, ITR: 72, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WF, CVEL
                              <<< Loop-information  End >>>
        128     5   p    v                    DO 1105 IP=1,NP
        129     5   p    v                        CU= U0*CVEL(1,IP)+V0*CVEL(2,IP)+W0*CVEL(3,IP)
        130     5   p    v                        FBUF=WF(IP)*RHO*(1.0D0+3.0D0*CU+4.5D0*CU*CU-1.5D0*UU)
        131     5   p    v                        FEQ(I,J,K,IP)= FBUF
        132     5   p    v       1105         CONTINUE
        133     4   p            1103     CONTINUE
        134     3   p            1102     CONTINUE
        135     2   p            1101     CONTINUE
        136     1               C
        137     1                1003     CONTINUE
        138     1                         NBC1=0
        139     1                         NBC2=0
        140     1                         NBC3=0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 9
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        141     2   s    s                DO 1200 ICB=1,NBC(IC)
        142     2   s    s                    CALL SETBC1(ITIME,NG,NP,MBC,MBC1,MBC2,MBC3,
        143     2                    *                    LLEVEL(IC),LBC(1,ICB,IC),TAU3,LVEL,
        144     2                    *                    F(0,0,0,1,IC),FEQ,NBC1,NBC2,NBC3,
        145     2                    *                    FBC1(1,1,1,1,IC),FBC1W(1,1,1,1,IC),
        146     2                    *                    FBC2(1,1,1,  IC),FBC2W(1,1,1  ,IC),
        147     2                    *                    FBC3(1,1,    IC),FBC3W(1,1    ,IC),
        148     2                    *                    IUT6)
        149     2   s    s       1200     CONTINUE
        150     1                1000 CONTINUE
        151                           CALL USTEND(12)
        152                     C
        153                     C[2] SET CUBE-B.C. DATA FROM THE SELF-CUBE
        154                     C
        155                     C
        156                     C
        157                           CALL USTSTA(13)
        158                           CALL SETBC2(IPART,NG,NP,NC,MBC,MBC1,MBC2,MBC3,NBC,LBC,
        159                          *            MDOM,MPB,NDOM,LDOM,F,FBC1,FBC2,FBC3,BUFSND,
        160                          *            NBPSND,NBPRCV,IUT6)
        161                           CALL USTEND(13)
        162                     C
        163                     C[3] COMMUNICATE CUBE-B.C. IN THE NEIBERING-CUBE
        164                     C
        165                           CALL USTSTA(14)
        166                           CALL DDCOM2(NDOM,LDOM,MPB,NBPSND,NBPRCV,BUFSND,BUFRCV,IERR)
        167                           CALL USTEND(14)
        168                     C
        169                     C[4] SET CUBE-B.C. FROM THE NEIBERING-CUBE
        170                     C
        171                           CALL USTSTA(15)
        172     1   s    s            DO 2000 IDOM=1,NDOM
        173     1   s    s                CALL SETBC3(NG,NP,NC,MPB,F,BUFRCV(1,IDOM),IUT6)
        174     1   s    s       2000 CONTINUE
        175                           CALL USTEND(15)
        176                     C
        177                           CALL USTEND(11)
        178                     C
        179                           RETURN
        180                           END

 Diagnostic messages: program name(SETBND)
   jwd2008i-i  "setbnd.f", line 1: Dummy argument 'IUT0' not used in this subprogram.
   jwd8220o-i  "setbnd.f", line 1: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd2008i-i  "setbnd.f", line 13: Dummy argument 'LPBOUN' not used in this subprogram.
   jwd2008i-i  "setbnd.f", line 13: Dummy argument 'NPBOUN' not used in this subprogram.
   jwd2006i-i  "setbnd.f", line 27: 'TAU0' is declared but never referenced.
   jwd2006i-i  "setbnd.f", line 28: 'MPBDOM' is declared but never referenced.
   jwd2006i-i  "setbnd.f", line 28: 'ID' is declared but never referenced.
   jwd2006i-i  "setbnd.f", line 28: 'II' is declared but never referenced.
   jwd5122p-i  "setbnd.f", line 88: DO loop is not parallelized: a procedure reference was found in the loop.
   jwd8209o-i  "setbnd.f", line 92: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "setbnd.f", line 95: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5131p-i  "setbnd.f", line 102: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "setbnd.f", line 102: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "setbnd.f", line 102: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
   jwd5001p-i  "setbnd.f", line 110: DO loop with DO variable 'K' is parallelized.
   jwd6004s-i  "setbnd.f", line 117: SIMD conversion is applied to DO loop with DO variable 'IP'. The DO loop contains a reduction operation.
   jwd8204o-i  "setbnd.f", line 117: This loop is software pipelined.
   jwd8205o-i  "setbnd.f", line 117: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 80.
   jwd8209o-i  "setbnd.f", line 118: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8208o-i  "setbnd.f", line 120: Method of calculating sum or product is changed.
   jwd8208o-i  "setbnd.f", line 121: Method of calculating sum or product is changed.
   jwd8209o-i  "setbnd.f", line 127: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd6001s-i  "setbnd.f", line 128: SIMD conversion is applied to DO loop with DO variable 'IP'.
   jwd8204o-i  "setbnd.f", line 128: This loop is software pipelined.
   jwd8205o-i  "setbnd.f", line 128: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 72.
   jwd8209o-i  "setbnd.f", line 129: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "setbnd.f", line 130: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8664o-i  "setbnd.f", line 141: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC1W' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC2W' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC3W' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'ITIME' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'LVEL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC3' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FBC1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'NBC3' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'NBC2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'NBC1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'LLEVEL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'MBC3' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'MBC2' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'MBC1' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'MBC' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'IUT6' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'LBC' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'TAU3' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'NG' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'FEQ' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'F' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 142: DO loop is not parallelized: the assign-refer order of 'NP' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5122p-i  "setbnd.f", line 142: DO loop is not parallelized: a procedure reference was found in the loop.
   jwd6122s-i  "setbnd.f", line 142: SIMD conversion cannot be applied to DO loop: a procedure reference was found in the loop.
   jwd8664o-i  "setbnd.f", line 172: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'BUFRCV' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'NC' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'MPB' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'IUT6' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'NG' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'F' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "setbnd.f", line 173: DO loop is not parallelized: the assign-refer order of 'NP' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5122p-i  "setbnd.f", line 173: DO loop is not parallelized: a procedure reference was found in the loop.
   jwd6122s-i  "setbnd.f", line 173: SIMD conversion cannot be applied to DO loop: a procedure reference was found in the loop.

 Procedure information
   Lines      : 180
   Statements : 80
   Stack(byte): 1392
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 180
   Total statements : 80
   Total stack(byte): 1392
   Total prefetch num: 0

