
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:53:47 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : cosin3.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "COSIN3"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    COSIN3                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE COSIN3(LOCAL,X,Y,Z,NODE,NE,NP,N,LEB,NB,
         14                          *                  XNB,YNB,ZNB,A,AOUT)
         15                           IMPLICIT REAL*4(A-H,O-Z)
         16                           DIMENSION X(NP),Y(NP),Z(NP),NODE(N,NE),
         17                          1          LEB(2,NB),XNB(NB),YNB(NB),ZNB(NB),A(NB),AOUT(NB)
         18                     C
         19                           DIMENSION LOCAL(4,6)
         20                     C
         21                     C
         22                     C      CALCULATE ELEMENT'S SURFACE INWARD NORMAL VECTOR WITH UNIT LENGTH
         23                     C     AND SURFACE AREA
         24                     C         ( 3-D ; SINGLE PRECISION, REFERING ELEMENT BY TYPE LIST )
         25                     C
         26                     C
         27                     C     ARGUMENT LISTINGS
         28                     C       (1) INPUT
         29                     C          LOCAL (I,IS); NODE NUMBER TABLE  DEFINING ELEMENT'S SURFACES
         30                     C          X      (IP) ; X-DIR. COORDINATE         OF NODE
         31                     C          Y      (IP) ; Y-DIR. COORDINATE         OF NODE
         32                     C          Z      (IP) ; Y-DIR. COORDINATE         OF NODE
         33                     C          NODE (I,IE) ; NODE TABLE
         34                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         35                     C          NP          ; NUMBER OF TOTAL    NODES
         36                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         37                     C          LEB  (I,IB) ; ELEMENT(1, & SURFACE(2, NUMBER SPECIFYING LIST
         38                     C          NB          ; NUMBER OF SURFACES
         39                     C
         40                     C       (2) OUTPUT
         41                     C          XNB    (IB) ; X COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         42                     C          YNB    (IB) ; Y COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         43                     C          ZNB    (IB) ; X COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         44                     C          A      (IB) ; AREA                             OF SURFACE IB
         45                     C
         46                     C       (4) WORK
         47                     C          AOUT   (IB) ; ABSOLUTE OF NORMAL VECTOR ( AVOID VECTOR AREA )
         48                     C
         49                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      A, ZNB, YNB, XNB
                              <<< Loop-information  End >>>
         50     1  pp   2v            DO 100 IB = 1 , NB
         51     1   p   2v                XNB(IB) = 0.E0
         52     1   p   2v                YNB(IB) = 0.E0
         53     1   p   2v                ZNB(IB) = 0.E0
         54     1   p   2v                A  (IB) = 0.E0
         55     1   p   2v        100 CONTINUE
         56                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 2)
                              <<< Loop-information  End >>>
         57     1   p    v            DO 210 IMEAN = 1 , 3 , 2
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 45
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    SOFTWARE PIPELINING(IPC: 2.02, ITR: 22, MVE: 5, POL: L)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEB, XNB, ZNB, AOUT, A, YNB
                              <<< Loop-information  End >>>
         58     2  pp                     DO 200 IB = 1 , NB
         59     2   p    v                    IE = LEB(1,IB)
         60     2   p    v                    IS = LEB(2,IB)
         61     2               C
         62     2   p    v                    AX  = X(NODE(LOCAL(IMEAN+1,IS),IE))
         63     2                    &             -X(NODE(LOCAL(IMEAN  ,IS),IE))
         64     2   p    v                    AY  = Y(NODE(LOCAL(IMEAN+1,IS),IE))
         65     2                    &             -Y(NODE(LOCAL(IMEAN  ,IS),IE))
         66     2   p    v                    AZ  = Z(NODE(LOCAL(IMEAN+1,IS),IE))
         67     2                    &             -Z(NODE(LOCAL(IMEAN  ,IS),IE))
         68     2               C
         69     2   p    v                    BX  = X(NODE(LOCAL(MOD(IMEAN+2,4),IS),IE))
         70     2                    &             -X(NODE(LOCAL(IMEAN+1,       IS),IE))
         71     2   p    v                    BY  = Y(NODE(LOCAL(MOD(IMEAN+2,4),IS),IE))
         72     2                    &             -Y(NODE(LOCAL(IMEAN+1,       IS),IE))
         73     2   p    v                    BZ  = Z(NODE(LOCAL(MOD(IMEAN+2,4),IS),IE))
         74     2                    &             -Z(NODE(LOCAL(IMEAN+1,       IS),IE))
         75     2               C
         76     2   p    v                    XNB (IB) = XNB(IB)+AY*BZ-AZ*BY
         77     2   p    v                    YNB (IB) = YNB(IB)+AZ*BX-AX*BZ
         78     2   p    v                    ZNB (IB) = ZNB(IB)+AX*BY-AY*BX
         79     2   p    v                    AOUT(IB) = (AY*BZ-AZ*BY)**2+(AZ*BX-AX*BZ)**2
         80     2                    &                  +(AX*BY-AY*BX)**2
         81     2   p    v                    A   (IB) = A  (IB)+0.5E0*SQRT(AOUT(IB))
         82     2   p             200     CONTINUE
         83     1   p    v        210 CONTINUE
         84                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 297
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.26, ITR: 144, MVE: 5, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      YNB, XNB, ZNB, AOUT
                              <<< Loop-information  End >>>
         85     1  pp    v            DO 300 IB = 1 , NB
         86     1   p    v                AOUT(IB) = XNB(IB)*XNB(IB)+YNB(IB)*YNB(IB)+ZNB(IB)*ZNB(IB)
         87     1   p    v                XNB(IB) = XNB(IB)/SQRT(AOUT(IB))
         88     1   p    v                YNB(IB) = YNB(IB)/SQRT(AOUT(IB))
         89     1   p    v                ZNB(IB) = ZNB(IB)/SQRT(AOUT(IB))
         90     1   p    v        300 CONTINUE
         91                     C
         92                     C
         93                           RETURN
         94                           END

 Diagnostic messages: program name(COSIN3)
   jwd8220o-i  "cosin3.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5001p-i  "cosin3.f", line 50: DO loop with DO variable 'IB' is parallelized.
   jwd6001s-i  "cosin3.f", line 50: SIMD conversion is applied to DO loop with DO variable 'IB'.
   jwd8663o-i  "cosin3.f", line 50: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "cosin3.f", line 50: Loop unrolled 2 times.
   jwd8211o-i  "cosin3.f", line 57: Loops interchanged at line 58.
   jwd6004s-i  "cosin3.f", line 57: SIMD conversion is applied to DO loop with DO variable 'IMEAN'. The DO loop contains a reduction operation.
   jwd8211o-i  "cosin3.f", line 58: Loops interchanged at line 57.
   jwd5001p-i  "cosin3.f", line 58: DO loop with DO variable 'IB' is parallelized.
   jwd8204o-i  "cosin3.f", line 58: This loop is software pipelined.
   jwd8205o-i  "cosin3.f", line 58: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 22.
   jwd8209o-i  "cosin3.f", line 79: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5001p-i  "cosin3.f", line 85: DO loop with DO variable 'IB' is parallelized.
   jwd6001s-i  "cosin3.f", line 85: SIMD conversion is applied to DO loop with DO variable 'IB'.
   jwd8204o-i  "cosin3.f", line 85: This loop is software pipelined.
   jwd8205o-i  "cosin3.f", line 85: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 144.
   jwd8209o-i  "cosin3.f", line 86: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8206o-i  "cosin3.f", line 87: Division is changed to multiplication by reciprocal.
   jwd8206o-i  "cosin3.f", line 88: Division is changed to multiplication by reciprocal.
   jwd8206o-i  "cosin3.f", line 89: Division is changed to multiplication by reciprocal.

 Procedure information
   Lines      : 94
   Statements : 35
   Stack(byte): 864
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 94
   Total statements : 35
   Total stack(byte): 864
   Total prefetch num: 0

