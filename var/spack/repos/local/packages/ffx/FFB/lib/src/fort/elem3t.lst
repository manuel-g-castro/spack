
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:53:56 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : elem3t.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "ELEM3T"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    ELEM3T                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE ELEM3T(X,Y,Z,NODE,NES,NE,N,LAPEX,NAPEX,NPOLY,
         14                          *                  E,NDIM)
         15                           IMPLICIT REAL*4(A-H,O-Z)
         16                           DIMENSION X(*),Y(*),Z(*),NODE(N,*),LAPEX(NAPEX,*),
         17                          1          E(NDIM,NDIM,NPOLY,*)
         18                     C
         19                           DATA EPS / 1.0E-30 /
         20                     C
         21                     C
         22                     C      CALCULATE INVERSE MATRICES
         23                     C     OF ELEMENT BASE VECTOR      ; MARKER TRACING IN 3-D FIELD 0
         24                     C         ( 3-D CALCULATION )
         25                     C
         26                     C
         27                     C     ARGUMENT LISTINGS
         28                     C       (1) INPUT
         29                     C          X       (IP); X-DIR. COORDINATE OF NODE
         30                     C          Y       (IP); Y-DIR. COORDINATE OF NODE
         31                     C          Z       (IP); Z-DIR. COORDINATE OF NODE
         32                     C          NODE  (I,IE); NODE TABLE
         33                     C          NES         ; FIRST ELEMENT NUMBER
         34                     C          NE          ; NUMBER OF TOTAL NODES
         35                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         36                     C          LAPEX(IA,IG); APEX NO. OF POLYGONS CONSTITUTING AN ELEMENT
         37                     C          NAPEX       ; NUMBER OF APEXES CONSTITUTING A POLYGON
         38                     C          NPOLY       ; NUMBER OF POLYGONS CONSTITUTING AN ELEMENT
         39                     C          NDIM        ; THE FIRST AND SECOND DIMENSION OF ARRAY E
         40                     C
         41                     C       (2) OUTPUT
         42                     C          E(J,I,IG,IE); INVERSE MATRICES OF ELEMENT BASE VECTOR
         43                     C
         44                     C
         45                     C*$* ASSERT DO PREFER(SERIAL)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         46     1   p    v            DO 110 IPOLY = 1 , NPOLY
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<< Loop-information  End >>>
         47     2  pp                     DO 100 IE = NES , NE
         48     2   p    v                    AX = X(NODE(LAPEX(2,IPOLY),IE))-X(NODE(LAPEX(1,IPOLY),IE))
         49     2   p    v                    BX = X(NODE(LAPEX(3,IPOLY),IE))-X(NODE(LAPEX(1,IPOLY),IE))
         50     2   p    v                    CX = X(NODE(LAPEX(4,IPOLY),IE))-X(NODE(LAPEX(1,IPOLY),IE))
         51     2   p    v                    AY = Y(NODE(LAPEX(2,IPOLY),IE))-Y(NODE(LAPEX(1,IPOLY),IE))
         52     2   p    v                    BY = Y(NODE(LAPEX(3,IPOLY),IE))-Y(NODE(LAPEX(1,IPOLY),IE))
         53     2   p    v                    CY = Y(NODE(LAPEX(4,IPOLY),IE))-Y(NODE(LAPEX(1,IPOLY),IE))
         54     2   p    v                    AZ = Z(NODE(LAPEX(2,IPOLY),IE))-Z(NODE(LAPEX(1,IPOLY),IE))
         55     2   p    v                    BZ = Z(NODE(LAPEX(3,IPOLY),IE))-Z(NODE(LAPEX(1,IPOLY),IE))
         56     2   p    v                    CZ = Z(NODE(LAPEX(4,IPOLY),IE))-Z(NODE(LAPEX(1,IPOLY),IE))
         57     2               C
         58     2   p    v                    DETI = 1.E0/(AX*(BY*CZ-BZ*CY)+AY*(BZ*CX-BX*CZ)
         59     2                    &                    +AZ*(BX*CY-BY*CX)+EPS)
         60     2               C
         61     2   p    v                    E(1,1,IPOLY,IE) = DETI*(BY*CZ-BZ*CY)
         62     2   p    v                    E(2,1,IPOLY,IE) = DETI*(BZ*CX-BX*CZ)
         63     2   p    v                    E(3,1,IPOLY,IE) = DETI*(BX*CY-BY*CX)
         64     2   p    v                    E(1,2,IPOLY,IE) = DETI*(CY*AZ-CZ*AY)
         65     2   p    v                    E(2,2,IPOLY,IE) = DETI*(CZ*AX-CX*AZ)
         66     2   p    v                    E(3,2,IPOLY,IE) = DETI*(CX*AY-CY*AX)
         67     2   p    v                    E(1,3,IPOLY,IE) = DETI*(AY*BZ-AZ*BY)
         68     2   p    v                    E(2,3,IPOLY,IE) = DETI*(AZ*BX-AX*BZ)
         69     2   p    v                    E(3,3,IPOLY,IE) = DETI*(AX*BY-AY*BX)
         70     2   p             100     CONTINUE
         71     1   p             110 CONTINUE
         72                     C
         73                     C
         74                           RETURN
         75                           END

 Diagnostic messages: program name(ELEM3T)
   jwd8220o-i  "elem3t.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8211o-i  "elem3t.f", line 46: Loops interchanged at line 47.
   jwd6001s-i  "elem3t.f", line 46: SIMD conversion is applied to DO loop with DO variable 'IPOLY'.
   jwd8666o-i  "elem3t.f", line 46: This loop cannot be software pipelined because of shortage of floating-point registers.
   jwd8211o-i  "elem3t.f", line 47: Loops interchanged at line 46.
   jwd5001p-i  "elem3t.f", line 47: DO loop with DO variable 'IE' is parallelized.
   jwd8209o-i  "elem3t.f", line 58: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "elem3t.f", line 61: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "elem3t.f", line 64: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "elem3t.f", line 67: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 75
   Statements : 29
   Stack(byte): 848
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 75
   Total statements : 29
   Total stack(byte): 848
   Total prefetch num: 0

