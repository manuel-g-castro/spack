
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:23 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : relax2.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "RELAX2"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    RELAX2                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE RELAX2(DT,ALF,EPS,NMAX,U,V,P,DNXI,DNYI,DELTA,
         14                          *                  DNX,DNY,CM,LBU,LBV,NBU,NBV,
         15                          *                  NODE,IENP,JENP,NEP,MAXE,MAXEP,NE,NP,N,
         16                          *                  IRN,NRN,DIVMAX,DIVAR,
         17                          *                  DIV,DP,FX,FY,IUT0,IERR)
         18                           IMPLICIT REAL*8(A-H,O-Z)
         19                           REAL*4   DNX,DNY,CM
         20                           DIMENSION U(NP),V(NP),P(NE),DNXI(N,NE),DNYI(N,NE),DELTA(NE),
         21                          1          DNX(N,NE),DNY(N,NE),CM(NP),LBU(NBU),LBV(NBV),
         22                          2          NODE(N,NE),IENP(MAXEP,NP),JENP(MAXEP,NP),NEP(NP),
         23                          3          DIV(NE),DP(NE),FX(NP),FY(NP)
         24                     C
         25                           CHARACTER*72 ERMSG
         26                          & /' FATAL ERROR REPORTED !! RELAX2 TERMINATES ALL THE PROCESS '/
         27                     C
         28                           IDIM  = 2
         29                           IMODE = 1
         30                     C
         31                     C
         32                     C      CORRECT PRESSURE FIELD AND VELOCITY FIELD
         33                     C     BY A SIMULTANEOUS PENALTY RELAXATION METHOD
         34                     C         ( 2-D CALCULATION )
         35                     C
         36                     C
         37                     C     ARGUMENT LISTINGS
         38                     C       (1) INPUT
         39                     C          DT          ; TIME INCREMENT
         40                     C          ALF         ; RELAXATION COEFFICIENT
         41                     C          EPS         ; CONVERGENCE JUDGING VALUE
         42                     C          NMAX        ; MAXIMUN ITERATION NUMBER
         43                     C          DNXI  (I,IE); ELEMENT CENTER VALUE OF NX
         44                     C          DNYI  (I,IE); ELEMENT CENTER VALUE OF NY
         45                     C          DELTA   (IE); ELEMENT CHARACTERISTIC DIMENSION
         46                     C
         47                     C          DNX   (I,IE); INTEGRATED ELEMENT VECTOR OF NX
         48                     C          DNY   (I,IE); INTEGRATED ELEMENT VECTOR OF NY
         49                     C          CM      (IP); LUMPED    MASS MATRIX
         50                     C          LBU     (IB); U-PRESCRIBED NODE SPECIFYING LIST VECTOR
         51                     C          LBV     (IB); V-PRESCRIBED NODE SPECIFYING LIST VECTOR
         52                     C          NBU         ; NUMBER OF U-PRESCRIBED NODES
         53                     C          NBV         ; NUMBER OF V-PRESCRIBED NODES
         54                     C
         55                     C          NODE  (I,IE); NODE TABLE
         56                     C          IENP(IEP,IP); ADJACENT ELEMENT NUMBER TO NODE IP
         57                     C                      ( IF NEP(IP).LT.MAXEP , THEN IENP(NEP(IP)+1,IP),
         58                     C                       IENP(MAXEP,IP) MUST BE SET TO AN IMAGINARY
         59                     C                       ELEMENT NO. BETWEEN NE+1,MAXE.)
         60                     C          JENP(IEP,IP); LOCAL NODE NUMBER OF IP IN ELEMENT IENP(IEP,IP)
         61                     C          NEP     (IP); NUMBER OF ADJACENT ELEMENTS TO NODE IP
         62                     C          MAXE        ; THE MAXIMUM NUMBER  OF ELEMETS
         63                     C          MAXEP       ; THE FIRST DIMENSION OF ARRAY IENP,JENP
         64                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         65                     C          NP          ; NUMBER OF TOTAL    NODES
         66                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         67                     C          IUT0        ; DEVICE NO. TO REPORT ERROR OCCURENCE
         68                     C
         69                     C       (2) OUTPUT
         70                     C          IRN         ; RETURN CODE TO REPORT CONVERGENCE
         71                     C                   0 --- NOT CONVERGED
         72                     C                   1 ---     CONVERGED
         73                     C          NRN         ; CALCULATION ITERATED NUMBER
         74                     C          DIVMAX      ; MAXIMUN ABSOLUTE DIVERGENT
         75                     C          DIVAR       ; SPATIAL AVERAGED ABSOLUTE DIVERGENT
         76                     C          IERR        ; RETURN CODE TO REPORT ERROR OCCURENCE
         77                     C                   0 --- NORMAL TERMINATION
         78                     C                   1 --- A FATAL ERROR HAS OCCURED
         79                     C
         80                     C
         81                     C       (3) INPUT-OUTPUT
         82                     C          U       (IP); X-DIR. VELOCITY COMPONENT
         83                     C          V       (IP); Y-DIR. VELOCITY COMPONENT
         84                     C          P       (IE); ELEMENT PRESSURE
         85                     C
         86                     C       (4) WORK
         87                     C          DIV     (IE); ELEMENT DIVERGENT
         88                     C          DP      (IE); PRESSURE CORRECTOR
         89                     C          FX      (IE); X-DIR. RESIDUAL FORCE VECTOR
         90                     C          FY      (IE); Y-DIR. RESIDUAL FORCE VECTOR
         91                     C
         92                     C
         93                     C
         94                           IRN = 0
         95                           NRN = 0
         96                     C
         97                        10 CONTINUE
         98                           NRN = NRN+1
         99                     C
        100                     C      CALCULATION ELEMENT DIVERGENT
        101                     C
        102                           CALL FIELD2(IMODE,U,V,DNXI,DNYI,NODE,NE,N,DIV)
        103                     C
        104                           DIVMAX = 0.D0
        105                           DIVAR = 0.D0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 534
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        106     1  pp    v            DO 100 IE = 1 , NE
        107     1   p    v                ABSDIV = DABS(DIV(IE))
        108     1   p    v                DIVAR  = DIVAR+ABSDIV
        109     1   p    v                DIVMAX = DMAX1(ABSDIV,DIVMAX)
        110     1   p    v        100 CONTINUE
        111                           DIVAR = DIVAR/NE
        112                           IF(NRN.GT.NMAX) GO TO 1000
        113     1                     IF(DIVMAX.LE.EPS) THEN
        114     1                         IRN = 1
        115     1                         GO TO 1000
        116     1                         ENDIF
        117                     C
        118                     C      PRESSURE CORRECTION
        119                     C
        120                     CT    COEFF = -ALF/(3.D0*DT)
        121                           COEFF = -ALF/      DT
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.42, ITR: 96, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DIV, DELTA, DP
                              <<< Loop-information  End >>>
        122     1  pp   2v            DO 200 IE = 1 , NE
        123     1   p   2v                DP(IE) = COEFF*DIV(IE)*DELTA(IE)*DELTA(IE)
        124     1   p   2v        200 CONTINUE
        125                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1067
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 3.00, ITR: 192, MVE: 7, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DP, P
                              <<< Loop-information  End >>>
        126     1  pp   2v            DO 300 IE = 1 , NE
        127     1   p   2v                P(IE) = P(IE)+DP(IE)
        128     1   p   2v        300 CONTINUE
        129                     C
        130                     C      VELOCITY CORRECTION
        131                     C
        132                           CALL SUPER1(IDIM,DP,DNX,IENP,JENP,NEP,MAXE,MAXEP,NE,NP,N,
        133                          *            FX,IUT0,IERR)
        134                           CALL SUPER1(IDIM,DP,DNY,IENP,JENP,NEP,MAXE,MAXEP,NE,NP,N,
        135                          *            FY,IUT0,IERR)
        136                     C
        137     1                     IF(IERR.EQ.1) THEN
        138     1                         WRITE(IUT0,6300) ERMSG
        139     1                         RETURN
        140     1                     ENDIF
        141                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 144, MVE: 5, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LBU
                              <<< Loop-information  End >>>
        142     1   s   2v            DO 400 IB = 1 , NBU
        143     1   m   2v                FX(LBU(IB)) = 0.D0
        144     1   p   2v        400 CONTINUE
        145                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 144, MVE: 5, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LBV
                              <<< Loop-information  End >>>
        146     1   s   2v            DO 500 IB = 1 , NBV
        147     1   m   2v                FY(LBV(IB)) = 0.D0
        148     1   p   2v        500 CONTINUE
        149                     C
        150                     CT    COEFF = DT/ALF
        151                           COEFF = DT
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 458
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 3.60, ITR: 104, MVE: 5, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FX, FY, V, CM, U
                              <<< Loop-information  End >>>
        152     1  pp    v            DO 600 IP = 1 , NP
        153     1   p    v                U(IP) = U(IP)+COEFF*CM(IP)*FX(IP)
        154     1   p    v                V(IP) = V(IP)+COEFF*CM(IP)*FY(IP)
        155     1   p    v        600 CONTINUE
        156                     C
        157                     C      ITERATION
        158                     C
        159                           GO TO 10
        160                     C
        161                     C
        162                      1000 CONTINUE
        163                           NRN = NRN-1
        164                     C
        165                     C
        166                           RETURN
        167                      6300 FORMAT(A72)
        168                           END

 Diagnostic messages: program name(RELAX2)
   jwd8220o-i  "relax2.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5132p-i  "relax2.f", line 97: Loop is not parallelized: cannot parallelize DO WHILE constructs, DO UNTIL constructs, or loops by IF/GO TO statements.
   jwd5004p-i  "relax2.f", line 106: DO loop with DO variable 'IE' is parallelized. The DO loop contains the reduction operation.
   jwd6004s-i  "relax2.f", line 106: SIMD conversion is applied to DO loop with DO variable 'IE'. The DO loop contains a reduction operation.
   jwd5001p-i  "relax2.f", line 122: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "relax2.f", line 122: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "relax2.f", line 122: This loop is software pipelined.
   jwd8205o-i  "relax2.f", line 122: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 96.
   jwd8209o-i  "relax2.f", line 123: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5001p-i  "relax2.f", line 126: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "relax2.f", line 126: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "relax2.f", line 126: This loop is software pipelined.
   jwd8205o-i  "relax2.f", line 126: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 192.
   jwd6001s-i  "relax2.f", line 142: SIMD conversion is applied to DO loop with DO variable 'IB'.
   jwd8204o-i  "relax2.f", line 142: This loop is software pipelined.
   jwd8205o-i  "relax2.f", line 142: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 144.
   jwd5228p-i  "relax2.f", line 143: DO loop is not parallelized: data dependency of variable may cause different results from serial execution for loop.
   jwd6001s-i  "relax2.f", line 146: SIMD conversion is applied to DO loop with DO variable 'IB'.
   jwd8204o-i  "relax2.f", line 146: This loop is software pipelined.
   jwd8205o-i  "relax2.f", line 146: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 144.
   jwd5228p-i  "relax2.f", line 147: DO loop is not parallelized: data dependency of variable may cause different results from serial execution for loop.
   jwd5001p-i  "relax2.f", line 152: DO loop with DO variable 'IP' is parallelized.
   jwd6001s-i  "relax2.f", line 152: SIMD conversion is applied to DO loop with DO variable 'IP'.
   jwd8204o-i  "relax2.f", line 152: This loop is software pipelined.
   jwd8205o-i  "relax2.f", line 152: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 104.
   jwd8209o-i  "relax2.f", line 153: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "relax2.f", line 154: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 168
   Statements : 55
   Stack(byte): 28496
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 168
   Total statements : 55
   Total stack(byte): 28496
   Total prefetch num: 0

