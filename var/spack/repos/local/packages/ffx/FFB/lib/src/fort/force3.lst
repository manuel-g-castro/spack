
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:03 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : force3.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FORCE3"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    FORCE3                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE FORCE3(IMODE,U,V,W,P,VISC,NODE,NE,NP,N,
         14                          *                  A,XNB,YNB,ZNB,DNXB,DNYB,DNZB,LEB,NB,
         15                          *                  FX,FY,FZ)
         16                           IMPLICIT REAL*4(A-H,O-Z)
         17                           DIMENSION U(NP),V(NP),W(NP),P(NE),VISC(NE),NODE(N,NE),
         18                          1          A(NB),XNB(NB),YNB(NB),ZNB(NB),
         19                          2          DNXB(N,NB),DNYB(N,NB),DNZB(N,NB),LEB(2,NB)
         20                     C
         21                     C
         22                     C      CALCULATE FLUID FORCE ACTING ON A SPECIFIED BODY
         23                     C         ( 3-D CALCULATION : SINGLE WORD & SAME ELEMENT VERSION )
         24                     C
         25                     C
         26                     C     NOTES ; CALL SUBROUTINES 'ELEM3B' AND 'COSIN3' FIRST
         27                     C
         28                     C     ARGUMENT LISTINGS
         29                     C       (1) INPUT
         30                     C          IMODE       ; SPECIFIES THE TYPE OF CALCULATION AS FOLLOWS
         31                     C                   1 --- CALCULATE PRESSURE FORCE
         32                     C                   2 --- CALCULATE VISCOUS  FORCE
         33                     C                   3 --- CALCULATE TOTAL    FORCE
         34                     C          U       (IP); X-DIR. VELOCITY COMPONENT
         35                     C          V       (IP); Y-DIR. VELOCITY COMPONENT
         36                     C          W       (IP); Z-DIR. VELOCITY COMPONENT
         37                     C          P       (IE); ELEMENT PRESSURE
         38                     C          VISC    (IE); ELEMENT VISCOSITY
         39                     C          NODE  (I,IE); NODE NO. TABLE BASED ON ELEMENT
         40                     C          NE          ; NUMBER OF TOTAL     ELEMENTS
         41                     C          NP          ; NUMBER OF TOTAL     NODES
         42                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         43                     C          A       (IB); AREA                             OF SURFACE IB
         44                     C          XNB     (IB); X COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         45                     C          YNB     (IB); Y COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         46                     C          ZNB     (IB); X COMPONENT OF THE NORMAL VECTOR OF SURFACE IB
         47                     C          DNXB (I,IB) ; INTEGRATED X DERIVATIVE OF SHAPE FUNCTION
         48                     C          DNYB (I,IB) ; INTEGRATED Y DERIVATIVE OF SHAPE FUNCTION
         49                     C          DNZB (I,IB) ; INTEGRATED Z DERIVATIVE OF SHAPE FUNCTION
         50                     C          LEB  (I,IB) ; ELEMENT(1, & SURFACE(2, NUMBER SPECIFYING LIST
         51                     C          NB          ; NUMBER OF SURFACES
         52                     C
         53                     C       (2) OUTPUT
         54                     C          FX           ; X COMPONENT OF FLUID FORCE ACTING ON THE BODY
         55                     C          FY           ; Y COMPONENT OF FLUID FORCE ACTING ON THE BODY
         56                     C          FZ           ; Z COMPONENT OF FLUID FORCE ACTING ON THE BODY
         57                     C
         58                     C
         59                           FX = 0.E0
         60                           FY = 0.E0
         61                           FZ = 0.E0
         62                     C
         63                     C      CALCULATE PRESSURE FORCE
         64                     C
         65     1                     IF(IMODE.EQ.1 .OR. IMODE.EQ.3) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 297
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         66     2  pp    v            DO 100 IB = 1 , NB
         67     2   p    v                FX = FX-XNB(IB)*A(IB)*P(LEB(1,IB))
         68     2   p    v                FY = FY-YNB(IB)*A(IB)*P(LEB(1,IB))
         69     2   p    v                FZ = FZ-ZNB(IB)*A(IB)*P(LEB(1,IB))
         70     2   p    v        100 CONTINUE
         71     1                     ENDIF
         72                     C
         73                     C      CALCULATE VISCOUS  FORCE
         74                     C
         75     1                     IF(IMODE.EQ.2 .OR. IMODE.EQ.3) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 173
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         76     2  pp    v            DO 210 I = 1 , N
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<< Loop-information  End >>>
         77     3                         DO 200 IB = 1 , NB
         78     3   p    v                    IE = LEB(1,IB)
         79     3   p    v                    IP = NODE(I,IE)
         80     3   p    v                    FX = FX+VISC(IE)
         81     3                    &            *(XNB(IB)*U(IP)*DNXB(I,IB)+XNB(IB)*U(IP)*DNXB(I,IB)
         82     3                    &             +YNB(IB)*U(IP)*DNYB(I,IB)+YNB(IB)*V(IP)*DNXB(I,IB)
         83     3                    &             +ZNB(IB)*U(IP)*DNZB(I,IB)+ZNB(IB)*W(IP)*DNXB(I,IB))
         84     3   p    v                    FY = FY+VISC(IE)
         85     3                    &            *(XNB(IB)*V(IP)*DNXB(I,IB)+XNB(IB)*U(IP)*DNYB(I,IB)
         86     3                    &             +YNB(IB)*V(IP)*DNYB(I,IB)+YNB(IB)*V(IP)*DNYB(I,IB)
         87     3                    &             +ZNB(IB)*V(IP)*DNZB(I,IB)+ZNB(IB)*W(IP)*DNYB(I,IB))
         88     3   p    v                    FZ = FZ+VISC(IE)
         89     3                    &            *(XNB(IB)*W(IP)*DNXB(I,IB)+XNB(IB)*U(IP)*DNZB(I,IB)
         90     3                    &             +YNB(IB)*W(IP)*DNYB(I,IB)+YNB(IB)*V(IP)*DNZB(I,IB)
         91     3                    &             +ZNB(IB)*W(IP)*DNZB(I,IB)+ZNB(IB)*W(IP)*DNZB(I,IB))
         92     3                 200     CONTINUE
         93     2   p    v        210 CONTINUE
         94     1                     ENDIF
         95                     C
         96                     C
         97                           RETURN
         98                           END

 Diagnostic messages: program name(FORCE3)
   jwd8220o-i  "force3.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5004p-i  "force3.f", line 66: DO loop with DO variable 'IB' is parallelized. The DO loop contains the reduction operation.
   jwd6004s-i  "force3.f", line 66: SIMD conversion is applied to DO loop with DO variable 'IB'. The DO loop contains a reduction operation.
   jwd8211o-i  "force3.f", line 76: Loops interchanged at line 77.
   jwd5004p-i  "force3.f", line 76: DO loop with DO variable 'I' is parallelized. The DO loop contains the reduction operation.
   jwd6004s-i  "force3.f", line 76: SIMD conversion is applied to DO loop with DO variable 'I'. The DO loop contains a reduction operation.
   jwd8211o-i  "force3.f", line 77: Loops interchanged at line 76.
   jwd5202p-i  "force3.f", line 77: DO loop is not parallelized: data dependency of variable 'FZ' may cause different results from serial execution for loop.
   jwd5202p-i  "force3.f", line 77: DO loop is not parallelized: data dependency of variable 'FY' may cause different results from serial execution for loop.
   jwd5202p-i  "force3.f", line 77: DO loop is not parallelized: data dependency of variable 'FX' may cause different results from serial execution for loop.
   jwd8209o-i  "force3.f", line 80: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "force3.f", line 84: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "force3.f", line 88: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 98
   Statements : 26
   Stack(byte): 81200
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 98
   Total statements : 26
   Total stack(byte): 81200
   Total prefetch num: 0

