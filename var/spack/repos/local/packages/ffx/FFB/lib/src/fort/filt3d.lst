
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:38 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : filt3d.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FILT3D"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    FILT3D                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE FILT3D(IFILTR,X,Y,Z,NODE,NE,NP,N,FILTER)
         14                           IMPLICIT REAL*4(A-H,O-Z)
         15                           DIMENSION X(NP),Y(NP),Z(NP),NODE(N,NE),FILTER(NE)
         16                     C
         17                           INTEGER*4 LSIDE(2,12)
         18                          & / 1 , 5 , 2 , 6 , 3 , 7 , 4 , 8 ,
         19                          &   1 , 4 , 2 , 3 , 6 , 7 , 5 , 8 ,
         20                          &   1 , 2 , 4 , 3 , 8 , 7 , 5 , 6 /
         21                     C
         22                     C
         23                     C
         24                     C      COMPUTE ELEMENT (GRID) FILTER WIDTH
         25                     C         ( 3-D CALCULATION : SINGLE WORD & SAME ELEMENT VERSION )
         26                     C
         27                     C
         28                     C     ARGUMENT LISTINGS
         29                     C       (1) INPUT
         30                     C          IFILTR      ; CONTROLS GRID-FILTER WIDTH COMPUTATIONS AS:
         31                     C                   1 --- THE MINIMUM SIDE LENGTH
         32                     C                   2 --- INVERSE SQUARE AVERAGE OF SIDE LENGTH
         33                     C          X      (IP) ; X-DIR. COORDINATE         OF NODE
         34                     C          Y      (IP) ; Y-DIR. COORDINATE         OF NODE
         35                     C          Z      (IP) ; Y-DIR. COORDINATE         OF NODE
         36                     C          NODE (I,IE) ; NODE TABLE
         37                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         38                     C          NP          ; NUMBER OF TOTAL    NODES
         39                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         40                     C
         41                     C       (2) OUTPUT
         42                     C          FILTER (IE) ; ELEMENT FILTER WIDTH
         43                     C
         44                     C
         45     1                     IF(IFILTR.EQ.2) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         46     2  pp   4v                DO 100 IE = 1 , NE
         47     2   p   4v                    FILTER(IE) = 0.E0
         48     2   p   4v        100     CONTINUE
         49     1               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         50     2                         DO 210 I = 1 , 12
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 259
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.85, ITR: 176, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         51     3  pp    v                    DO 200 IE = 1 , NE
         52     3   p    v                        I1 = NODE(LSIDE(1, I),IE)
         53     3   p    v                        I2 = NODE(LSIDE(2, I),IE)
         54     3   p    v                        FILTER(IE) = FILTER(IE)
         55     3                    &        +1.E0/((X(I2)-X(I1))**2+(Y(I2)-Y(I1))**2+(Z(I2)-Z(I1))**2)
         56     3   p    v        200         CONTINUE
         57     2                 210     CONTINUE
         58     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 517
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.73, ITR: 352, MVE: 6, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         59     2  pp   2v                DO 300 IE = 1 , NE
         60     2   p   2v                    FILTER(IE) = SQRT(12.E0/FILTER(IE))
         61     2   p   2v        300     CONTINUE
         62     1                     ELSE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         63     2                         DO 410 I = 1 , 12
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 247
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.47, ITR: 144, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FILTER
                              <<< Loop-information  End >>>
         64     3  pp    v                    DO 400 IE = 1 , NE
         65     3   p    v                        I1 = NODE(LSIDE(1, I),IE)
         66     3   p    v                        I2 = NODE(LSIDE(2, I),IE)
         67     3   p    v                        DIST = SQRT((X(I2)-X(I1))**2+(Y(I2)-Y(I1))**2
         68     3                    &                       +(Z(I2)-Z(I1))**2)
         69     3   p    v                        IF(I.EQ.1 .OR. DIST.LE.FILTER(IE)) FILTER(IE) = DIST
         70     3   p    v        400         CONTINUE
         71     2                 410     CONTINUE
         72     1                     ENDIF
         73                     C
         74                     C
         75                           RETURN
         76                           END

 Diagnostic messages: program name(FILT3D)
   jwd8220o-i  "filt3d.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5001p-i  "filt3d.f", line 46: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "filt3d.f", line 46: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8663o-i  "filt3d.f", line 46: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "filt3d.f", line 46: Loop unrolled 4 times.
   jwd5208p-i  "filt3d.f", line 50: DO loop is not parallelized: the assign-refer order of 'FILTER' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5001p-i  "filt3d.f", line 51: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "filt3d.f", line 51: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "filt3d.f", line 51: This loop is software pipelined.
   jwd8205o-i  "filt3d.f", line 51: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 176.
   jwd8209o-i  "filt3d.f", line 54: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5001p-i  "filt3d.f", line 59: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "filt3d.f", line 59: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "filt3d.f", line 59: This loop is software pipelined.
   jwd8205o-i  "filt3d.f", line 59: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 352.
   jwd5208p-i  "filt3d.f", line 63: DO loop is not parallelized: the assign-refer order of 'FILTER' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5001p-i  "filt3d.f", line 64: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "filt3d.f", line 64: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "filt3d.f", line 64: This loop is software pipelined.
   jwd8205o-i  "filt3d.f", line 64: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 144.
   jwd8209o-i  "filt3d.f", line 67: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 76
   Statements : 30
   Stack(byte): 1952
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 76
   Total statements : 30
   Total stack(byte): 1952
   Total prefetch num: 0

