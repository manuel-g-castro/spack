
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:31 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : super1.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SUPER1"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    SUPER1                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE SUPER1(IDIM,VELM,SN,IENP,JENP,NEP,MAXE,MAXEP,NE,NP,N,
         14                          *                  F,IUT0,IERR)
         15                           IMPLICIT REAL*8(A-H,O-Z)
         16                           REAL*4 SN
         17                           DIMENSION VELM(NE),SN(N,NE),
         18                          1          IENP(MAXEP,NP),JENP(MAXEP,NP),NEP(NP),F(NP)
         19                     C
         20                           CHARACTER*72 ERMSG
         21                          & /' *** SUBROUTINE SUPER1 REPORTS A FATAL ERROR OCCURENCE ***' /
         22                           CHARACTER*72 EREXP1
         23                          & /' NO ROOM LEFT IN VELM(MAXE) FOR CONDUCTING SUPER1 OPERATIONS' /
         24                           CHARACTER*72 EREXP2
         25                          & /' MAXEP IS TOO SMALL TO CONDUCT SUPER1 OPERATIONS' /
         26                     C
         27                     C
         28                     C      SUPERPOSE ELEMENT'S ASSIGNED VALUES TO THE GLOBAL FORCE VECTOR
         29                     C         ( 2-D , 3-D CALCULATION )
         30                     C
         31                     C
         32                     C     ARGUMENT LISTINGS
         33                     C       (1) INPUT
         34                     C          IDIM        ; SPECIFIES THE SPACE DIMENSION AS FOLLOWS
         35                     C                   2 --- TWO   DIMENSIONAL PROBLEM
         36                     C                   3 --- THREE DIMENSIONAL PROBLEM
         37                     C          VELM    (IE); ELEMENT ASSIGNED VARIABLE
         38                     C          SN    (I,IE); INTEGRATED ELEMENT VECTOR
         39                     C          IENP(IEP,IP); ADJACENT ELEMENT NUMBER TO NODE IP
         40                     C                      ( IF NEP(IP).LT.MINEP , THEN IENP(NEP(IP)+1,IP),
         41                     C                       IENP(MINEP,IP) MUST BE SET TO AN IMAGINARY
         42                     C                       ELEMENT NO. BETWEEN NE+1,MAXE.)
         43                     C          JENP(IEP,IP); LOCAL NODE NUMBER OF IP IN ELEMENT IENP(IEP,IP)
         44                     C          NEP     (IP); NUMBER OF ADJACENT ELEMENTS TO NODE IP
         45                     C          MAXE        ; THE       DIMENSION OF ARRAY VELM
         46                     C          MAXEP       ; THE FIRST DIMENSION OF ARRAY IENP,JENP
         47                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         48                     C          NP          ; NUMBER OF TOTAL    NODES
         49                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         50                     C          IUT0        ; DEVICE NO. TO REPORT ERROR OCCURENCE
         51                     C
         52                     C       (2) OUTPUT
         53                     C          F       (IP); GLOBAL FORCE VECTOR
         54                     C          IERR        ; RETURN CODE TO REPORT ERROR OCCURENCE
         55                     C                   0 --- NORMAL TERMINATION
         56                     C                   1 --- A FATAL ERROR HAS OCCURED
         57                     C
         58                     C
         59     1                     IF(IDIM.EQ.2) THEN
         60     1                         MINEP = 4
         61     1                     ELSE
         62     1                         MINEP = 8
         63     1                     ENDIF
         64                     C
         65                           IERR = 0
         66                     C
         67     1                     IF(MAXE.LE.NE) THEN
         68     1                         WRITE(IUT0,6300) ERMSG
         69     1                         WRITE(IUT0,6300) EREXP1
         70     1                         IERR = 1
         71     1                         RETURN
         72     1                     ENDIF
         73                     C
         74     1                     IF(MAXEP.LT.MINEP) THEN
         75     1                         WRITE(IUT0,6300) ERMSG
         76     1                         WRITE(IUT0,6300) EREXP2
         77     1                         IERR = 1
         78     1                         RETURN
         79     1                     ENDIF
         80                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      VELM
                              <<< Loop-information  End >>>
         81     1  pp   4v            DO 100 IE = NE+1 , MAXE
         82     1   p   4v                VELM(IE) = 0.D0
         83     1   p   4v        100 CONTINUE
         84                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 138
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 1.88, ITR: 48, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      F
                              <<< Loop-information  End >>>
         85     1  pp    v            DO 200 IP = 1 , NP
         86     1   p    v                F(IP) = VELM(IENP(1,IP))*SN(JENP(1,IP),IENP(1,IP))
         87     1                    &           +VELM(IENP(2,IP))*SN(JENP(2,IP),IENP(2,IP))
         88     1                    &           +VELM(IENP(3,IP))*SN(JENP(3,IP),IENP(3,IP))
         89     1                    &           +VELM(IENP(4,IP))*SN(JENP(4,IP),IENP(4,IP))
         90     1   p    v        200 CONTINUE
         91                     C
         92     1                     IF(IDIM.EQ.3) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 134
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 1.77, ITR: 48, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      F
                              <<< Loop-information  End >>>
         93     2  pp    v                DO 300 IP = 1 , NP
         94     2   p    v                    F(IP) = F(IP)
         95     2                    &               +VELM(IENP(5,IP))*SN(JENP(5,IP),IENP(5,IP))
         96     2                    &               +VELM(IENP(6,IP))*SN(JENP(6,IP),IENP(6,IP))
         97     2                    &               +VELM(IENP(7,IP))*SN(JENP(7,IP),IENP(7,IP))
         98     2                    &               +VELM(IENP(8,IP))*SN(JENP(8,IP),IENP(8,IP))
         99     2   p    v        300     CONTINUE
        100     1                     ENDIF
        101                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<< Loop-information  End >>>
        102     1   p    s            DO 410 IEP = MINEP+1 , MAXEP
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<< Loop-information  End >>>
        103     2  pp                     DO 400 IP = 1 , NP
        104     3   p    m                    IF(NEP(IP).GE.IEP) THEN
        105     3   p    s                        F(IP) = F(IP)
        106     3                    &                 +VELM(IENP(IEP,IP))*SN(JENP(IEP,IP),IENP(IEP,IP))
        107     3   p    v                    ENDIF
        108     2   p             400     CONTINUE
        109     1   p             410 CONTINUE
        110                     C
        111                     C
        112                           RETURN
        113                      6300 FORMAT(A72)
        114                           END

 Diagnostic messages: program name(SUPER1)
   jwd5001p-i  "super1.f", line 81: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "super1.f", line 81: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8663o-i  "super1.f", line 81: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "super1.f", line 81: Loop unrolled 4 times.
   jwd5001p-i  "super1.f", line 85: DO loop with DO variable 'IP' is parallelized.
   jwd6001s-i  "super1.f", line 85: SIMD conversion is applied to DO loop with DO variable 'IP'.
   jwd8204o-i  "super1.f", line 85: This loop is software pipelined.
   jwd8205o-i  "super1.f", line 85: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 48.
   jwd5001p-i  "super1.f", line 93: DO loop with DO variable 'IP' is parallelized.
   jwd6001s-i  "super1.f", line 93: SIMD conversion is applied to DO loop with DO variable 'IP'.
   jwd8204o-i  "super1.f", line 93: This loop is software pipelined.
   jwd8205o-i  "super1.f", line 93: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 48.
   jwd8211o-i  "super1.f", line 102: Loops interchanged at line 103.
   jwd6229s-i  "super1.f", line 102: SIMD conversion is not applied to DO loop: there are IF statements in the loop.
   jwd8670o-i  "super1.f", line 102: This loop cannot be software pipelined because the loop contains a branch instruction.
   jwd8211o-i  "super1.f", line 103: Loops interchanged at line 102.
   jwd5001p-i  "super1.f", line 103: DO loop with DO variable 'IP' is parallelized.

 Procedure information
   Lines      : 114
   Statements : 46
   Stack(byte): 1968
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 114
   Total statements : 46
   Total stack(byte): 1968
   Total prefetch num: 0

