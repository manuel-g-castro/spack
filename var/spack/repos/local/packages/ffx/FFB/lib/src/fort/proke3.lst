
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:22 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : proke3.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "PROKE3"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    PROKE3                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE PROKE3(IPRDWL,VISC,VISCM,U,V,W,PD,NEWALL,LEWALL,
         14                          *                  DNXI,DNYI,DNZI,NODE,NE,NP,N,
         15                          *                  DUX,DUY,DUZ,DVX,DVY,DVZ,DWX,DWY,DWZ)
         16                           IMPLICIT REAL*4(A-H,O-Z)
         17                           DIMENSION VISC(NE),U(NP),V(NP),W(NP),PD(NE),LEWALL(2,NEWALL),
         18                          1          DNXI(N,NE),DNYI(N,NE),DNZI(N,NE),NODE(N,NE),
         19                          2          DUX(NE),DUY(NE),DUZ(NE),DVX(NE),DVY(NE),DVZ(NE),
         20                          3          DWX(NE),DWY(NE),DWZ(NE)
         21                     C
         22                           DATA EPS / 1.0E-30 /
         23                     C
         24                     C
         25                     C      CALCULATE PRODUCTION TERM OF K-EQUATION
         26                     C         ( 3-D CALCULATION )
         27                     C
         28                     C
         29                     C     ARGUMENT LISTINGS
         30                     C       (1) INPUT
         31                     C          IPRDWL      ; CONTROLS PRODUCTION IN WALL-ADJACENT ELEMENTS
         32                     C                   0 --- CLEAR     PRODUCTION
         33                     C                   1 --- CALCULATE PRODUCTION AS IT IS
         34                     C          VISC    (IE); ELEMENT VISCOSITY ( MOLECULAR+TURBULENT )
         35                     C          VISCM       ; MOLECULAR VISCOSITY
         36                     C          U       (IP); X-DIR. VELOCITY COMPONENT
         37                     C          V       (IP); Y-DIR. VELOCITY COMPONENT
         38                     C          W       (IP); Z-DIR. VELOCITY COMPONENT
         39                     C          NEWALL      ; NUMBER OF WALL BOUNDARY SURFACES
         40                     C          LEWALL(I,IBE); WALL BOUNDARY ELEMENT AND ITS SURFACE
         41                     C          DNXI  (I,IE); ELEMENT CENTER VALUE OF NX
         42                     C          DNYI  (I,IE); ELEMENT CENTER VALUE OF NY
         43                     C          DNZI  (I,IE); ELEMENT CENTER VALUE OF NZ
         44                     C          NODE  (I,IE); NODE NO. TABLE BASED ON ELEMENT
         45                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         46                     C          NP          ; NUMBER OF TOTAL     NODES
         47                     C          N           ; NUMBER OF NODE ASSIGNED TO ONE ELEMENT
         48                     C
         49                     C       (2) OUTPUT
         50                     C          PD      (IE); PRODUCTION TERM FOR K-EQUATION
         51                     C
         52                     C       (3) WORK
         53                     C           NOTES ; PREPARE THE FOLLOWING ARRAYS FOR MAX(IE) = NE.
         54                     C          DUX     (IE); DU/DX
         55                     C          DUX     (IE); DU/DY
         56                     C          DUX     (IE); DU/DZ
         57                     C          DVX     (IE); DV/DX
         58                     C          DVY     (IE); DV/DY
         59                     C          DVZ     (IE); DV/DZ
         60                     C          DWX     (IE); DW/DX
         61                     C          DWY     (IE); DW/DY
         62                     C          DWZ     (IE); DW/DZ
         63                     C
         64                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FUSED(lines: 65,80)
                              <<< Loop-information  End >>>
         65     1                     DO 100 IE = 1 , NE
         66     1   p                     DUX(IE) = 0.E0
         67     1   p                     DUY(IE) = 0.E0
         68     1   p                     DUZ(IE) = 0.E0
         69     1               C
         70     1   p                     DVX(IE) = 0.E0
         71     1   p                     DVY(IE) = 0.E0
         72     1   p                     DVZ(IE) = 0.E0
         73     1               C
         74     1   p                     DWX(IE) = 0.E0
         75     1   p                     DWY(IE) = 0.E0
         76     1   p                     DWZ(IE) = 0.E0
         77     1                 100 CONTINUE
         78                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 96, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, DNXI, DNZI, DNYI
                              <<< Loop-information  End >>>
         79     1   p    v            DO 210 I = 1 , N
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    FUSED
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, DNXI, DNZI, DNYI
                              <<< Loop-information  End >>>
         80     2  pp                     DO 200 IE = 1 , NE
         81     2   p    v                    DUX(IE) = DUX(IE)+DNXI(I,IE)*U(NODE(I,IE))
         82     2   p    v                    DUY(IE) = DUY(IE)+DNYI(I,IE)*U(NODE(I,IE))
         83     2   p    v                    DUZ(IE) = DUZ(IE)+DNZI(I,IE)*U(NODE(I,IE))
         84     2               C
         85     2   p    v                    DVX(IE) = DVX(IE)+DNXI(I,IE)*V(NODE(I,IE))
         86     2   p    v                    DVY(IE) = DVY(IE)+DNYI(I,IE)*V(NODE(I,IE))
         87     2   p    v                    DVZ(IE) = DVZ(IE)+DNZI(I,IE)*V(NODE(I,IE))
         88     2               C
         89     2   p    v                    DWX(IE) = DWX(IE)+DNXI(I,IE)*W(NODE(I,IE))
         90     2   p    v                    DWY(IE) = DWY(IE)+DNYI(I,IE)*W(NODE(I,IE))
         91     2   p    v                    DWZ(IE) = DWZ(IE)+DNZI(I,IE)*W(NODE(I,IE))
         92     2   p             200     CONTINUE
         93     1   p             210 CONTINUE
         94                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 243
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.15, ITR: 112, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DUZ, DUY, DWZ, DWY, DVZ, DVX, DWX, VISC
                              <<<      DUX, DVY, PD
                              <<< Loop-information  End >>>
         95     1  pp    v            DO 300 IE = 1 , NE
         96     1   p    v                VISCT = VISC(IE)-VISCM
         97     1   p    v                IF(VISCT.LT.EPS) VISCT = EPS
         98     1   p    v                PD(IE) = VISCT
         99     1                    &          *(2.E0*(DUX(IE)*DUX(IE)+DVY(IE)*DVY(IE)+DWZ(IE)*DWZ(IE))
        100     1                    &           +2.E0*(DWY(IE)*DVZ(IE)+DUZ(IE)*DWX(IE)+DVX(IE)*DUY(IE))
        101     1                    &                 +DWY(IE)*DWY(IE)+DVZ(IE)*DVZ(IE)+DUZ(IE)*DUZ(IE)
        102     1                    &                 +DWX(IE)*DWX(IE)+DVX(IE)*DVX(IE)+DUY(IE)*DUY(IE))
        103     1   p    v        300 CONTINUE
        104                     C
        105     1                     IF(IPRDWL.EQ.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.25, ITR: 512, MVE: 4, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEWALL
                              <<< Loop-information  End >>>
        106     2   s   4v                DO 400 IEWALL = 1 , NEWALL
        107     2   m   4v                    PD(LEWALL(1,IEWALL)) = 0.E0
        108     2   p   4v        400     CONTINUE
        109     1                     ENDIF
        110                     C
        111                     C
        112                           RETURN
        113                           END

 Diagnostic messages: program name(PROKE3)
   jwd8220o-i  "proke3.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8210o-i  "proke3.f", line 65: Loops fused at line 80.
   jwd8211o-i  "proke3.f", line 79: Loops interchanged at line 80.
   jwd6004s-i  "proke3.f", line 79: SIMD conversion is applied to DO loop with DO variable 'I'. The DO loop contains a reduction operation.
   jwd8204o-i  "proke3.f", line 79: This loop is software pipelined.
   jwd8205o-i  "proke3.f", line 79: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 96.
   jwd8211o-i  "proke3.f", line 80: Loops interchanged at line 79.
   jwd5001p-i  "proke3.f", line 80: DO loop with DO variable 'IE' is parallelized.
   jwd5001p-i  "proke3.f", line 95: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "proke3.f", line 95: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "proke3.f", line 95: This loop is software pipelined.
   jwd8205o-i  "proke3.f", line 95: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 112.
   jwd8209o-i  "proke3.f", line 98: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd6001s-i  "proke3.f", line 106: SIMD conversion is applied to DO loop with DO variable 'IEWALL'.
   jwd8204o-i  "proke3.f", line 106: This loop is software pipelined.
   jwd8205o-i  "proke3.f", line 106: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 512.
   jwd5228p-i  "proke3.f", line 107: DO loop is not parallelized: data dependency of variable may cause different results from serial execution for loop.

 Procedure information
   Lines      : 113
   Statements : 40
   Stack(byte): 1040
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 113
   Total statements : 40
   Total stack(byte): 1040
   Total prefetch num: 0

