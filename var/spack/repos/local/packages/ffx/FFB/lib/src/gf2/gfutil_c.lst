Fujitsu C/C++ Version 4.4.0a   Thu Feb 18 12:40:05 2021
Compilation information
  Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/gf2
  Source file       : gfutil_c.c
(line-no.)(optimize)
        1             #include <stdio.h>
        2             #include <string.h>
        3             
        4             void  prtstd_(int *,char *);
        5             void  print_std(int *,char *);
        6             void  conv(char *,int );
        7             int   strcmp_n(int ,char * ,char *);
        8             
        9             #include "gfc.h"
       10             
       11             void print_std(int *IOUT,char *p){
       12             #if F2C001
       13             #define prtstd_ PRTSTD
       14             #endif
       15               int i;
                       <<< Loop-information Start >>>
                       <<<  [PARALLELIZATION]
                       <<<    Standard iteration count: 2000
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 64)
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
       16  pp     4v    for(i=strlen(p);i<=LOGLENGTH;i++)p[i]= ' ';
       17               prtstd_(IOUT,p);
                       <<< Loop-information Start >>>
                       <<<  [PARALLELIZATION]
                       <<<    Standard iteration count: 2000
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 64)
                       <<< Loop-information  End >>>
       18   s      v    for(i=0        ;i<=LOGLENGTH;i++)p[i]= ' ';
       19             }
       20             
       21             
       22             /***************************************************/
       23             /* program to convert endian                       */
       24             /* *a1 (in) : pointer to the date to be converted  */
       25             /* num (in) : byte number                          */  
       26             /*            4 for int and float                  */
       27             /*            8 for double                         */
       28             /* a2 (tmp) : buffer                               */
       29             /***************************************************/       
       30             void conv(char *a1,int num)
       31             {
       32             /*#define DEBUG_conv*/
       33             
       34               int n,n1,n2;
       35               char a2[8];
       36             
                       <<< Loop-information Start >>>
                       <<<  [PARALLELIZATION]
                       <<<    Standard iteration count: 1455
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 64)
                       <<< Loop-information  End >>>
       37   s      v    for(n=0;n<num;n++){
       38   p      v     *(a2+n)=*(a1+n);
       39   p      v    }
       40             
                       <<< Loop-information Start >>>
                       <<<  [PARALLELIZATION]
                       <<<    Standard iteration count: 1231
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 8)
                       <<< Loop-information  End >>>
       41  pp      v    for(n=0;n<num;n++){
       42   p      v      n1=n;
       43   p      v      n2=num-1-n;
       44   p      v      *(a1+n2) = *(a2+n1);
       45   p      v    }
       46             
       47             #ifdef DEBUG_conv
       48               printf("Before:");
       49               for(n=0;n<num;n++){printf("%x|",*(a2+n));} printf("\n");
       50               printf("After :");
       51               for(n=0;n<num;n++){printf("%x|",*(a1+n));} printf("\n");
       52             #endif
       53             
       54             }
       55             
       56             int strcmp_n(int num,char *c1 ,char *c2){
       57              int i;
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
       58              for(i=0;i<num;i++){
       59              if(*(c1+i)!=*(c2+i)) {return(-1);}
       60              }
       61              return(0);
       62             }
Total prefetch num: 0
Statistics information
  Option information
    Command line options : -Kident_mpi -Kvisimpact,ocl,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI023/include/mpi/fujitsu -pthread
    Effective options    : -g0 -mt -Qy -std=gnu11 -x- -O3 -Knoalias_const -Kalign_loops
                           -Karray_declaration_opt -Knoarray_private -Kassume=noshortloop
                           -Kassume=nomemory_bandwidth -Kassume=notime_saving_compilation
                           -Kcmodel=small -Kconst -Knodynamic_iteration -Keval
                           -Keval_noconcurrent -Knoextract_stride_store -Kfast_matmul
                           -Knofconst -Knofenv_access -Kfp_contract -Kfp_relaxed -Kfsimple
                           -Kfz -Khpctag -Kilfunc=procedure -Klargepage -Klib
                           -Kloop_blocking -Kloop_fission -Kloop_nofission_stripmining
                           -Kloop_fission_threshold=50 -Kloop_fusion -Kloop_interchange
                           -Kloop_part_parallel -Kloop_part_simd -Kloop_perfect_nest
                           -Kloop_noversioning -Klooptype=f -Knomemalias -Kmfunc=1 -Kocl
                           -Komitfp -Kopenmp -Kopenmp_noassume_norecurrence
                           -Kopenmp_nocollapse_except_innermost -Kopenmp_noordered_reduction
                           -Knoopenmp_simd -Knooptlib_string -Knooptmsg
                           -Knopc_relative_literal_loads -Kparallel
                           -Kparallel_nofp_precision -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_noconditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride -Kprefetch_strong
                           -Kprefetch_strong_L2 -Knopreload -Krdconv=1 -Kreduction
                           -Kregion_extension -Krestp=restrict -Ksch_post_ra -Ksch_pre_ra
                           -Ksibling_calls -Ksimd=auto -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512
                           -Ksimd_nouncounted_loop -Ksimd_use_multiple_structures
                           -Knostrict_aliasing -Knostriping -KA64FX -KARMV8_3_A -KSVE -Kswp
                           -Kswp_freg_rate=100 -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                           -Kswp_policy=auto -Kunroll -Knounroll_and_jam -Knozfill
                           -Ncancel_overtime_compilation -Nnocoverage -Nnoexceptions
                           -Nnofjcex -Nfjprof -Nnohook_func -Nnohook_time -Nfjomplib -Nline
                           -Nlst=p -Nlst=t -Nquickdbg=noheapchk -Nquickdbg=nosubchk
                           -NRnotrap -Nnoreordered_variable_stack -Nrt_notune
                           -Nsetvalue=noheap -Nsetvalue=nostack -Nsetvalue=noscalar
                           -Nsetvalue=noarray -Nsetvalue=nostruct -Nsrc -Nsta
