
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:14 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : orderg.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "ORDERG"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    ORDERG                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE ORDERG(Z,N,NORDER)
         14                           IMPLICIT REAL*4(A-H,O-Z)
         15                           DIMENSION Z(N),NORDER(N)
         16                     C
         17                     C
         18                     C      MAKE RE-ORDERING TABLE
         19                     C         ( 2-D GRAPHICS )
         20                     C
         21                     C
         22                     C     ARGUMENT LISTINGS
         23                     C       (1) INPUT
         24                     C          Z(I)        ; CONSIDERED VARIABLE
         25                     C          N           ; LENGTH OF DIMENSION Z(I)
         26                     C
         27                     C       (2) OUTPUT
         28                     C          NORDER(I)   ; RE-ORDERING TABLE
         29                     C
         30                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.75, ITR: 192, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NORDER
                              <<< Loop-information  End >>>
         31     1  pp   2v            DO 100 I = 1 , N
         32     1   p   2v                NORDER(I) = I
         33     1   p   2v        100 CONTINUE
         34                      1000 CONTINUE
         35                               JUG = 0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NORDER
                              <<< Loop-information  End >>>
         36     1   s   2s                DO 1010 I = 1 , N-1
         37     1   m   2m                    I1 = NORDER(I)
         38     1   p   2v                    I2 = NORDER(I+1)
         39     2   m   2m                    IF(Z(I2).LT.Z(I1)) THEN
         40     2   s   2v                        NORDER(I)   = I2
         41     2   s   2s                        NORDER(I+1) = I1
         42     2   p   2v                        JUG = 1
         43     2   p   2v                    ENDIF
         44     1   p   2v       1010     CONTINUE
         45                           IF(JUG.EQ.1) GO TO 1000
         46                     C
         47                     C
         48                           RETURN
         49                           END

 Diagnostic messages: program name(ORDERG)
   jwd5001p-i  "orderg.f", line 31: DO loop with DO variable 'I' is parallelized.
   jwd6001s-i  "orderg.f", line 31: SIMD conversion is applied to DO loop with DO variable 'I'.
   jwd8204o-i  "orderg.f", line 31: This loop is software pipelined.
   jwd8205o-i  "orderg.f", line 31: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 192.
   jwd5132p-i  "orderg.f", line 34: Loop is not parallelized: cannot parallelize DO WHILE constructs, DO UNTIL constructs, or loops by IF/GO TO statements.
   jwd6229s-i  "orderg.f", line 36: SIMD conversion is not applied to DO loop: there are IF statements in the loop.
   jwd8670o-i  "orderg.f", line 36: This loop cannot be software pipelined because the loop contains a branch instruction.
   jwd8202o-i  "orderg.f", line 36: Loop unrolled 2 times.
   jwd5202p-i  "orderg.f", line 37: DO loop is not parallelized: data dependency of variable 'NORDER' may cause different results from serial execution for loop.
   jwd6202s-i  "orderg.f", line 37: SIMD conversion cannot be applied to DO loop: data dependency of variable 'NORDER' may cause different results from serial execution for loop.

 Procedure information
   Lines      : 49
   Statements : 20
   Stack(byte): 736
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 49
   Total statements : 20
   Total stack(byte): 736
   Total prefetch num: 0

