CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     SET UP NEIGHBORING DOMAIN LISTS OF FACE DATA FOR DOMAIN-DECOMPOSITION
C     PROGRAMMING MODEL
C 
C     WRITTEN BY H.YOSHIMURA 2013.03.06
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE DDFAC0(IPART,NFACE,LFACE,MDOM,MBFDOM,
     *                  NDOM,LDOM,NBFDOM,IFSLF,IFSND,IUT0,IERR)
C
      IMPLICIT NONE
C
C     [INPUT]
      INTEGER*4 IPART,NFACE,LFACE(5,NFACE),MDOM,MBFDOM
C
C     [IN-OUTPUT]
      INTEGER*4 NDOM,LDOM(MDOM),NBFDOM(MDOM)
      INTEGER*4 IFSLF(MBFDOM,MDOM),IFSND(MBFDOM,MDOM),IUT0,IERR
C
C     [LOCAL]
      INTEGER*4 IDOM,IFACE,IFNEW,ICHK
C
      CHARACTER*60 ERMSGB
     & / ' ## SUBROUTINE DDFAC0: FATAL     ERROR OCCURRENCE; RETURNED' /
      CHARACTER*60 EREXP1
     & / ' DIMENSION SIZE OF PASSED LIST ARRAYS IS NOT SUFFICIENT    ' /
C
      IERR = 0
C
C
C
C SET INITIAL VALUES
C
C
C
      NDOM = 0
      DO 1000 IDOM = 1 , MDOM
          NBFDOM(IDOM) = 0
 1000 CONTINUE
C
C
C
C SET NEIGHBORING DOMAIN LISTS FOR FACE
C
C
C
      DO 2000 IFACE = 1 , NFACE
          IF (LFACE(5,IFACE).EQ.0) GOTO 2000
C
          IFNEW = LFACE(5,IFACE)
          DO 2100 ICHK = 1 , NDOM
              IF(LDOM(ICHK).EQ.IFNEW) THEN
                  IDOM = ICHK
                  GO TO 2200
              ENDIF
 2100     CONTINUE
          NDOM = NDOM+1
          IDOM = NDOM
C
          IF(NDOM.GT.MDOM) THEN
              WRITE(IUT0,*) ERMSGB
              WRITE(IUT0,*) EREXP1
              IERR = 1
              RETURN
          ENDIF
C
          LDOM(NDOM) = IFNEW
C
 2200     CONTINUE
          NBFDOM(IDOM) = NBFDOM(IDOM)+1
C
          IF(NBFDOM(IDOM).GT.MBFDOM) THEN
              WRITE(IUT0,*) ERMSGB
              WRITE(IUT0,*) EREXP1
              IERR = 1
              RETURN
          ENDIF
C
          IFSLF(NBFDOM(IDOM),IDOM) =  IFACE
          IFSND(NBFDOM(IDOM),IDOM) = -LFACE(2,IFACE)
 2000 CONTINUE
C
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     COMMUNICATE FACE DATA (MPI VERSION)
C
C     WRITTEN BY H.YOSHIMURA 2013.03.06
C 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE DDFAC1(IDIM,MBFDOM,NDOM,LDOM,NBFDOM,IFSLF,IFSND,NFACE,
     *                  FX,FY,FZ,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
C
      IMPLICIT NONE
C
C     [INPUT]
      INTEGER*4 IDIM
      INTEGER*4 MBFDOM,NDOM,LDOM(NDOM),NBFDOM(NDOM),
     *          IFSLF(MBFDOM,NDOM),IFSND(MBFDOM,NDOM)
      INTEGER*4 NFACE
C
C     [IN-OUTPUT]
      INTEGER*4 IUT0,IERR
      REAL*4    FX(NFACE),FY(NFACE),FZ(NFACE)
C
C     [WORK]
      INTEGER*4 MAXBUF
      REAL*4    BUFSND(MAXBUF),BUFRCV(MAXBUF)
C
C     [LOCAL]
      INTEGER*4 NSTART,IFACE,IFACES,IBF,IDOM
C
      CHARACTER*60 ERMSGB
     & / ' ## SUBROUTINE DDFAC1: FATAL     ERROR OCCURRENCE; RETURNED' /
      CHARACTER*60 EREXP1
     & / ' DIMENSION SIZE OF INTERNAL      ARRAYS IS NOT SUFFICIENT  ' /
      CHARACTER*60 EREXP2
     & / ' DIMENSION SIZE OF PASSED BUFFER ARRAYS IS NOT SUFFICIENT  ' /
      CHARACTER*60 EREXP3
     & / ' RECEIVED NODE NUMBER IS OUT OF THE GLOBAL NODE NUMBER     ' /
C
      IERR = 0
C
C
C
C CHECK THE NUMBER OF NEIBERING DOMAINS
C
C
C
      IF(NDOM.EQ.0) RETURN
C
      IF(NDOM.NE.1) THEN
          IERR=1
          WRITE(IUT0,*) ERMSGB
          WRITE(IUT0,*) EREXP1
          RETURN
      ENDIF
C
C
C
C SET UP THE SEND BUFFER
C
C
C
      IDOM   = 1
      NSTART = 0
      DO 100 IBF = 1 , NBFDOM(IDOM)
          IFACE  = IFSLF(IBF,IDOM)
          IFACES = IFSND(IBF,IDOM)
          BUFSND(NSTART+1) = IFACES
          BUFSND(NSTART+2) = FX(IFACE)
          BUFSND(NSTART+3) = FY(IFACE)
          BUFSND(NSTART+4) = FZ(IFACE)
          NSTART = NSTART+4
  100 CONTINUE
C
C
C
C POST ALL THE EXPECTED RECEIVES
C
C
C
      IDOM   = 1
      NSTART = 0
      DO 200 IBF = 1 , NBFDOM(IDOM)
C
          IF(NSTART+3.GT.MAXBUF) THEN
              WRITE(IUT0,*) ERMSGB
              WRITE(IUT0,*) EREXP2
              IERR = 1
              RETURN
          ENDIF
C
          BUFRCV(NSTART+1)=BUFSND(NSTART+1)
          BUFRCV(NSTART+2)=BUFSND(NSTART+2)
          BUFRCV(NSTART+3)=BUFSND(NSTART+3)
          BUFRCV(NSTART+4)=BUFSND(NSTART+4)
C
          NSTART = NSTART+4
  200 CONTINUE
C
C
C
C SUPERIMPOSE THE RECEIVED RESIDUALS
C
C
C
      IDOM   = 1
      NSTART = 0
      DO 300 IBF = 1 , NBFDOM(IDOM)
          IFACE = BUFRCV(NSTART+1)+0.1
C
          IF(IFACE.LT.1 .OR. IFACE.GT.NFACE) THEN
              WRITE(IUT0,*) ERMSGB
              WRITE(IUT0,*) EREXP3
              IERR = 1
              RETURN
          ENDIF
C
                        FX(IFACE) = BUFRCV(NSTART+2)
          IF(IDIM.GE.2) FY(IFACE) = BUFRCV(NSTART+3)
          IF(IDIM.GE.3) FZ(IFACE) = BUFRCV(NSTART+4)
          NSTART = NSTART+4
  300 CONTINUE
C
      RETURN
      END
