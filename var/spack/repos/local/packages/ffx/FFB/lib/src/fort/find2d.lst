
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:53:58 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : find2d.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FIND2D"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    FIND2D                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE FIND2D(X,Y,EX1,EX2,EX3,EY1,EY2,EY3,DET1,DET2,
         14                          *                  NODE,NE,N,XM,YM,NM,IEM,IUT0,IWRN)
         15                           IMPLICIT REAL*8(A-H,O-Z)
         16                           DIMENSION X(*),Y(*),
         17                          1          EX1 (NE),EX2 (NE),EX3   (NE),EY1(NE),EY2(NE),EY3(NE),
         18                          1          DET1(NE),DET2(NE),NODE(N,NE),XM (NM),YM (NM),IEM(NM)
         19                     C
         20                           CHARACTER*72 WRMSG1
         21                          & /' *** SUBROUTINE FIND2D ISSUES A WARNING                ***  ' /
         22                           CHARACTER*72 WREXP1
         23                          & /' SPECIFIED POINT IS OUT OF THE COMPUTAION DOMAIN            ' /
         24                     C
         25                           D = 1.D-1
         26                     C
         27                     C
         28                     C      FIND ELEMENTS WHICH INCLUDE SPECIFIED POINTS
         29                     C         ( 2-D CALCULATION )
         30                     C
         31                     C
         32                     C     NOTE ; 1. IF A SPECIFIED POINT DOES NOT BELONG TO ANY ELEMENT,
         33                     C              SUBROUTINE FIND2D WILL ISSUE A WARNING AND CONTINUE
         34                     C              THE NORMAL PROCESS.
         35                     C
         36                     C
         37                     C     ARGUMENT LISTINGS
         38                     C       (1) INPUT
         39                     C          X (IP)      ; X-DIR. COORDINATES OF NODES
         40                     C          Y (IP)      ; Y-DIR. COORDINATES OF NODES
         41                     C          EX1 (IE)    ; ELEMENT VECTORS X(NODE(2,IE))-X(NODE(1,IE))
         42                     C          EX2 (IE)    ; ELEMENT VECTORS X(NODE(3,IE))-X(NODE(1,IE))
         43                     C          EX3 (IE)    ; ELEMENT VECTORS X(NODE(4,IE))-X(NODE(1,IE))
         44                     C          EY1 (IE)    ; ELEMENT VECTORS Y(NODE(2,IE))-Y(NODE(1,IE))
         45                     C          EY2 (IE)    ; ELEMENT VECTORS Y(NODE(3,IE))-Y(NODE(1,IE))
         46                     C          EY3 (IE)    ; ELEMENT VECTORS Y(NODE(4,IE))-Y(NODE(1,IE))
         47                     C          DET1(IE)    ; DETERMINANTS ( EX1 , EY1 , EX2 , EY2 )
         48                     C          DET2(IE)    ; DETERMINANTS ( EX2 , EY2 , EX3 , EY3 )
         49                     C
         50                     C          NODE(I,IE)  ; NODE TABLE
         51                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         52                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         53                     C
         54                     C          XM (IM)     ; X-COORDINATES OF THE SPECIFIED POINTS
         55                     C          YM (IM)     ; Y-COORDINATES OF THE SPECIFIED POINTS
         56                     C          NM          ; NUMBER OF THE SPECIFIED POINTS
         57                     C          IUT0        ; DEVICE NUMBER TO ISSUE A WARNING
         58                     C
         59                     C       (2) OUTPUT
         60                     C          IEM(IM)     ; ELEMENT NO.'S FOUND
         61                     C                       IF NO ELEMENT FOUND FOR A POINT, THEN IEM WILL
         62                     C                      BE SET TO ZERO FOR THAT POINT.
         63                     C          IWRN        ; RETURN CODE TO REPORT A WARNING
         64                     C                   0 --- NORMAL TERMINATION
         65                     C                   1 --- A WARNING ISSUED
         66                     C
         67                     C
         68                           IWRN = 0
         69                     C
         70     1                     DO 110 IM = 1 , NM
         71     1                         IFOUND = 0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 114
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
         72     2  pp    v                DO 100 IE = 1 , NE
         73     2   p    v                    XF = XM(IM)-X(NODE(1,IE))
         74     2   p    v                    YF = YM(IM)-Y(NODE(1,IE))
         75     2   p    v                    A1 = ( EY2(IE)*XF-EX2(IE)*YF)/DET1(IE)
         76     2   p    v                    B1 = (-EY1(IE)*XF+EX1(IE)*YF)/DET1(IE)
         77     2   p    v                    A2 = ( EY3(IE)*XF-EX3(IE)*YF)/DET2(IE)
         78     2   p    v                    B2 = (-EY2(IE)*XF+EX2(IE)*YF)/DET2(IE)
         79     2               C
         80     3   p    v                    IF(A1.GE.-D .AND. B1.GE.-D .AND. A1+B1.LE.1.D0+D  .OR.
         81     3                    &           A2.GE.-D .AND. B2.GE.-D .AND. A2+B2.LE.1.D0+D) THEN
         82     3   p    v                        IFOUND = IE
         83     3   p    v                    ENDIF
         84     2   p    v        100     CONTINUE
         85     2                         IF(IFOUND.EQ.0) THEN
         86     2                             WRITE(IUT0,6300) WRMSG1
         87     2                             WRITE(IUT0,6300) WREXP1
         88     2                             IWRN = 1
         89     2                             WRITE(IUT0,6000) IM
         90     2                         ENDIF
         91     1                         IEM(IM) = IFOUND
         92     1                 110 CONTINUE
         93                     C
         94                     C
         95                           RETURN
         96                      6000 FORMAT(20H   *** POINT NO. ***, I5/)
         97                      6300 FORMAT(A72)
         98                           END

 Diagnostic messages: program name(FIND2D)
   jwd8220o-i  "find2d.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5121p-i  "find2d.f", line 70: DO loop is not parallelized: an input/output statement was found in the loop.
   jwd5001p-i  "find2d.f", line 72: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "find2d.f", line 72: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8206o-i  "find2d.f", line 75: Division is changed to multiplication by reciprocal.
   jwd8209o-i  "find2d.f", line 76: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8206o-i  "find2d.f", line 76: Division is changed to multiplication by reciprocal.
   jwd8206o-i  "find2d.f", line 77: Division is changed to multiplication by reciprocal.
   jwd8209o-i  "find2d.f", line 78: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8206o-i  "find2d.f", line 78: Division is changed to multiplication by reciprocal.

 Procedure information
   Lines      : 98
   Statements : 32
   Stack(byte): 27872
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 98
   Total statements : 32
   Total stack(byte): 27872
   Total prefetch num: 0

