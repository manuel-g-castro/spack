
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:35 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : throw1.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "THROW1"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    THROW1                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE THROW1(INTRAN,XMIN,YMIN,XMAX,YMAX,NMARK,
         14                          *                  X,Y,NODE,NE,NP,N,
         15                          *                  EX1,EX2,EX3,EY1,EY2,EY3,DET1,DET2,
         16                          *                  XM,YM,IEM,IUT0,IERR)
         17                           IMPLICIT REAL*8(A-H,O-Z)
         18                           REAL*4   RAN
         19                           DIMENSION X(NP),Y(NP),NODE(N,NE),
         20                          1          EX1 (NE),EX2 (NE),EX3(NE),EY1(NE),EY2(NE),EY3(NE),
         21                          2          DET1(NE),DET2(NE),XM(NMARK),YM(NMARK),IEM(NMARK)
         22                     C
         23                           DIMENSION RAN(2)
         24                     C
         25                           CHARACTER*72 ERMSG
         26                          & /' *** SUBROUTINE THROW1 REPORTS A FATAL ERROR OCCURENCE ***  '/
         27                           CHARACTER*72 EREXP1
         28                          & /' THROWING IMPOSSIBLE ; NO ELEMENT FOUND IN THE SPECIFID ZONE'/
         29                     C
         30                           DATA D / 1.D-1 /
         31                           NRAN = 2
         32                     C
         33                     C
         34                     C      THROW MARKER PARTICLES AT RANDOM INTO THE SPECIFIED ZONE
         35                     C         ( 2-D CALCULATION )
         36                     C
         37                     C
         38                     C     ARGUMENT LISTINGS
         39                     C       (1) INPUT
         40                     C          XMIN        ; MIN. X-COOR. OF THE THROWING ZONE
         41                     C          YMIN        ; MIN. Y-COOR. OF THE THROWING ZONE
         42                     C          XMAX        ; MAX. X-COOR. OF THE THROWING ZONE
         43                     C          YMAX        ; MAX. Y-COOR. OF THE THROWING ZONE
         44                     C          NMARK       ; NUMBER OF MARKERS TO BE THROWN
         45                     C
         46                     C          X (IP)      ; X-DIR. COORDINATE         OF NODE
         47                     C          Y (IP)      ; Y-DIR. COORDINATE         OF NODE
         48                     C          NODE(I,IE)  ; NODE TABLE
         49                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         50                     C          NP          ; NUMBER OF TOTAL NODES
         51                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         52                     C          EX1 (IE)    ; ELEMENT VECTOR  X(NODE(2,IE))-X(NODE(1,IE))
         53                     C          EX2 (IE)    ; ELEMENT VECTOR  X(NODE(3,IE))-X(NODE(1,IE))
         54                     C          EX3 (IE)    ; ELEMENT VECTOR  X(NODE(4,IE))-X(NODE(1,IE))
         55                     C          EY1 (IE)    ; ELEMENT VECTOR  Y(NODE(2,IE))-Y(NODE(1,IE))
         56                     C          EY2 (IE)    ; ELEMENT VECTOR  Y(NODE(3,IE))-Y(NODE(1,IE))
         57                     C          EY3 (IE)    ; ELEMENT VECTOR  Y(NODE(4,IE))-Y(NODE(1,IE))
         58                     C          DET1(IE)    ; DETERMINANT ( EX1 , EY1 , EX2 , EY2 )
         59                     C          DET2(IE)    ; DETERMINANT ( EX2 , EY2 , EX3 , EY3 )
         60                     C
         61                     C          IUT0        ; DEVICE NO. TO REPORT ERROR OCCURENCE
         62                     C
         63                     C       (2) OUTPUT
         64                     C          XM      (IM); X-DIR. POSITIONS OF MARKERS
         65                     C          YM      (IM); Y-DIR. POSITIONS OF MARKERS
         66                     C          IEM     (IM); ELEMENT NUMBER   OF MARKERS
         67                     C          IERR        ; RETURN CODE TO REPORT ERROR OCCURENCE
         68                     C                   0 --- NORMAL TERMINATION
         69                     C                   1 --- A FATAL ERROR HAS OCCURED
         70                     C
         71                     C       (3) INPUT-OUTPUT
         72                     C          INTRAN      ; INITIAL AND FINAL RANDAM NUMBER
         73                     C
         74                     C
         75                           IERR = 0
         76                     C
         77                     C      (1) CHECK IF THE THROWING IS POSSIBLE
         78                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      X
                              <<< Loop-information  End >>>
         79     1                     DO 10 IP = 1 , NP
         80     1                         IF(X(IP).GE.XMIN .AND. X(IP).LE.XMAX .AND.
         81     1                    &       Y(IP).GE.YMIN .AND. Y(IP).LE.YMAX) GO TO 20
         82     1                  10 CONTINUE
         83                               WRITE(IUT0,6300) ERMSG
         84                               WRITE(IUT0,6300) EREXP1
         85                               IERR = 1
         86                               RETURN
         87                        20 CONTINUE
         88                     C
         89                     C      (2) CONTINUE THROWING UNTILL MEETING THE REQUIRED NUMBER
         90                     C
         91                           NM = 0
         92                        30 CONTINUE
         93                     C
         94                     #ifdef VOS
         95                               CALL HSRU1M(NRAN,INTRAN,RAN,IERRDM)
         96                     #else
         97                               CALL LSGU1M(NRAN,INTRAN,RAN,IERRDM)
         98                     #endif
         99                               XP = XMIN+RAN(1)*(XMAX-XMIN)
        100                               YP = YMIN+RAN(2)*(YMAX-YMIN)
        101                               IFOUND = 0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 114
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        102     1  pp    v                DO 100 IE = 1 , NE
        103     1   p    v                    XF = XP-X(NODE(1,IE))
        104     1   p    v                    YF = YP-Y(NODE(1,IE))
        105     1   p    v                    A1 = ( EY2(IE)*XF-EX2(IE)*YF)/DET1(IE)
        106     1   p    v                    B1 = (-EY1(IE)*XF+EX1(IE)*YF)/DET1(IE)
        107     1   p    v                    A2 = ( EY3(IE)*XF-EX3(IE)*YF)/DET2(IE)
        108     1   p    v                    B2 = (-EY2(IE)*XF+EX2(IE)*YF)/DET2(IE)
        109     1               C
        110     2   p    v                    IF(A1.GE.-D .AND. B1.GE.-D .AND. A1+B1.LE.1.D0+D  .OR.
        111     2                    &           A2.GE.-D .AND. B2.GE.-D .AND. A2+B2.LE.1.D0+D) THEN
        112     2   p    v                        IFOUND = IE
        113     2   p    v                    ENDIF
        114     1   p    v        100     CONTINUE
        115                     C
        116     1                         IF(IFOUND.NE.0) THEN
        117     1                             NM = NM+1
        118     1                             XM (NM) = XP
        119     1                             YM (NM) = YP
        120     1                             IEM(NM) = IFOUND
        121     1                             IF(NM.EQ.NMARK) RETURN
        122     1                         ENDIF
        123                           GO TO 30
        124                     C
        125                     C
        126                      6300 FORMAT(A72)
        127                           END

 Diagnostic messages: program name(THROW1)
   jwd8220o-i  "throw1.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5131p-i  "throw1.f", line 79: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "throw1.f", line 79: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "throw1.f", line 79: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
   jwd5132p-i  "throw1.f", line 91: Loop is not parallelized: cannot parallelize DO WHILE constructs, DO UNTIL constructs, or loops by IF/GO TO statements.
   jwd5132p-i  "throw1.f", line 92: Loop is not parallelized: cannot parallelize DO WHILE constructs, DO UNTIL constructs, or loops by IF/GO TO statements.
   jwd5001p-i  "throw1.f", line 102: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "throw1.f", line 102: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8206o-i  "throw1.f", line 105: Division is changed to multiplication by reciprocal.
   jwd8209o-i  "throw1.f", line 106: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8206o-i  "throw1.f", line 106: Division is changed to multiplication by reciprocal.
   jwd8206o-i  "throw1.f", line 107: Division is changed to multiplication by reciprocal.
   jwd8209o-i  "throw1.f", line 108: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8206o-i  "throw1.f", line 108: Division is changed to multiplication by reciprocal.

 Procedure information
   Lines      : 127
   Statements : 45
   Stack(byte): 27744
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 127
   Total statements : 45
   Total stack(byte): 27744
   Total prefetch num: 0

