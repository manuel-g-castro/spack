
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:13 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : nst2di.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "NST2DI"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    NST2DI                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE NST2DI(IUT0 , IUT5  , IERR  , MAXB  , MTIME , MRK ,MRL,
         14                          *         MDAMP , MSMPL , MRESV , COMGEN, FILEMS, FILEIF,
         15                          *         FILEFF, FILEIM, FILEFM, FILEGF, FILEGM, FILEHS,
         16                          *         ITYPE , IMODEL, IFORM , IPRESS, IMASS , IGAUSS,
         17                          *         VISCM , VKAPM , PRT   , DT    , C     , BETA  ,
         18                          *         EPS   , ALF   , NMAX  , NMIN  ,
         19                          *         NTIME , INTFSV, INTPRN, ISTART,
         20                          *         TFINAL, UFINAL, VFINAL,
         21                          *         JMARK , JDRAG , JDAMP , JSMPL , JSHIFT,
         22                          *         NBU   , NBV   , NBP   , NBT   ,
         23                          *         LBU   , LBV   , LBP   , LBT   ,
         24                          *         BBU   , BBV   , BBP   , BBT   , NEN   , LEN   , LSN   ,
         25                          *         NPAIR , LPAIR , NSRC  , LSRC  , BSRC  ,
         26                          *         INTMSV, IRELES, JVALID,
         27                          *         INTRLS, XMR   , YMR   , NMR   , NCYCLE,
         28                          *         XMINRS, YMINRS, XMAXRS, YMAXRS, NMARK ,
         29                          *         XMINMK, YMINMK, XMAXMK, YMAXMK,
         30                          *         AFRONT, NEB   , LEB   , LSB   ,
         31                          *         NDAMP , LDAMP , FACT  , NSHIFT, LSHIFT ,
         32                          *         NSMPL , LSMPL , XSMPL  ,YSMPL , DATHIS , DATEFD, NHIST)
         33                           IMPLICIT REAL*8 (A-H,O-Z)
         34                           DIMENSION LBU(MAXB),LBV(MAXB),LBP(MAXB),LBT(MAXB),
         35                          1          BBU(MAXB),BBV(MAXB),BBP(MAXB),BBT(MAXB),
         36                          2          LEN(MAXB),LSN(MAXB),
         37                          3          LPAIR(2,MAXB),LSRC(MAXB),BSRC(MAXB),
         38                          4          XMR(MRK),YMR(MRK),LEB(MAXB),LSB(MAXB),
         39                          5          LDAMP(MDAMP),FACT(MDAMP),LSHIFT(MAXB),
         40                          6          LSMPL(2,MSMPL),XSMPL(MSMPL),YSMPL(MSMPL)
         41                     C
         42                           CHARACTER*60 FILEMS, FILEIF, FILEFF, FILEIM, FILEFM,
         43                          1             FILEGF, FILEGM, FILEHS
         44                     C
         45                           CHARACTER*40 COMGEN
         46                           CHARACTER*40 DATHIS(MRESV+MSMPL)
         47                           CHARACTER*20 DATEFD(MRESV+MSMPL)
         48                           CHARACTER* 4 COMSKP, REF
         49                           DATA REF / 'SKIP' /
         50                     C
         51                           CHARACTER*72 ERMSG
         52                          & /' *** SUBROUTINE NST2DI REPORTS A FATAL ERROR OCCURENCE ***' /
         53                           CHARACTER*72 EREXP1
         54                          & /' TOO MANY TIME INTEGRATIONS       HAVE BEEN SPECIFIED     ' /
         55                           CHARACTER*72 EREXP2
         56                          & /' TOO MANY BOUNDARY NODES          HAVE BEEN SPECIFIED     ' /
         57                           CHARACTER*72 EREXP3
         58                          & /' TOO MANY MARKER RELEASING POINTS HAVE BEEN SPECIFIED     ' /
         59                           CHARACTER*72 EREXP4
         60                          & /' TOO MANY MARKERS TO BE TRACED    HAVE BEEN SPECIFIED     ' /
         61                           CHARACTER*72 EREXP5
         62                          & /' TOO MANY ELEMENTS SPECIFIED TO DAMP EDDY VISCOSITY       ' /
         63                           CHARACTER*72 EREXP6
         64                          & /' TOO MANY SAMPLING POINTS         HAVE BEEN SPECIFIED     ' /
         65                     C
         66                     C
         67                     C      READ CALCULATION PARAMETERS
         68                     C         ( 2-D CALCULATION )
         69                     C
         70                     C
         71                     C     ARGUMENT LISTINGS
         72                     C      ( SEE MAIN PROGRAM ' NST2D ' )
         73                     C
         74                     C
         75                           IERR = 0
         76                     
         77                           REWIND IUT5
         78                            READ(IUT5,6400) COMGEN
         79                            READ(IUT5,   *) ITYPE  , IMODEL , IFORM
         80                            READ(IUT5,   *) IPRESS , IMASS  , IGAUSS
         81                            READ(IUT5,   *) VISCM  , VKAPM  , PRT
         82                            READ(IUT5,   *) DT     , C      , BETA
         83                            READ(IUT5,   *) EPS    , ALF    , NMAX   , NMIN
         84                            READ(IUT5,   *) NTIME  , INTFSV , INTPRN , ISTART
         85                            READ(IUT5,   *) TFINAL , UFINAL , VFINAL
         86                            READ(IUT5,   *) JMARK  , JDRAG  , JDAMP  , JSMPL , JSHIFT
         87                     C
         88     1                      IF(NTIME.GT.MTIME) THEN
         89     1                          WRITE(IUT0,6300) ERMSG
         90     1                          WRITE(IUT0,6300) EREXP1
         91     1                          IERR = 1
         92     1                          RETURN
         93     1                      ENDIF
         94                     C
         95                            READ(IUT5,6500) COMSKP
         96                            READ(IUT5,   *) NBU , NBV , NBP , NBT , NBS , NEN , NPAIR , NSRC
         97                     C
         98     1                      IF(MAX(NBU,NBV,NBP,NBT,NEN,NPAIR,NSRC).GT.MAXB) THEN
         99     1                          WRITE(IUT0,6300) ERMSG
        100     1                          WRITE(IUT0,6300) EREXP2
        101     1                          IERR = 1
        102     1                          RETURN
        103     1                      ENDIF
        104                     C
        105     1                      IF(NBU.GE.1) THEN
        106     1                          READ(IUT5,6500) COMSKP
        107     1                          READ(IUT5,8300) ( LBU(IB) , BBU(IB) , IB = 1 , NBU )
        108     1                      ENDIF
        109                     C
        110     1                      IF(NBV.GE.1) THEN
        111     1                          READ(IUT5,6500) COMSKP
        112     1                          READ(IUT5,8300) ( LBV(IB) , BBV(IB) , IB = 1 , NBV )
        113     1                      ENDIF
        114                     C
        115     1                      IF(NBP.GE.1) THEN
        116     1                          READ(IUT5,6500) COMSKP
        117     1                          READ(IUT5,8300) ( LBP(IB) , BBP(IB) , IB = 1 , NBP )
        118     1                      ENDIF
        119                     C
        120     1                      IF(NBT.GE.1) THEN
        121     1                          READ(IUT5,6500) COMSKP
        122     1                          READ(IUT5,8300) ( LBT(IB) , BBT(IB) , IB = 1 , NBT )
        123     1                      ENDIF
        124                     C
        125     1                      IF(NBS.GE.1) THEN
        126     1                          READ(IUT5,6500) COMSKP
        127     1        s                 READ(IUT5,8300) ( IDUM    , DUM     , IB = 1 , NBS )
        128     1                      ENDIF
        129                     C
        130     1                      IF(NEN.GE.1) THEN
        131     1                          READ(IUT5,6500) COMSKP
        132     1                          READ(IUT5,8000) ( LEN (IB) , LSN(IB) , IB = 1 , NEN )
        133     1                      ENDIF
        134                     C
        135     1                      IF(NPAIR.GE.1) THEN
        136     1                          READ(IUT5,6500) COMSKP
        137     1                          READ(IUT5,8000) ((LPAIR(I,IPAIR),I=1,2) , IPAIR = 1 , NPAIR)
        138     1                      ENDIF
        139                     C
        140     1                      IF(NSRC .GE.1) THEN
        141     1                          READ(IUT5,6500) COMSKP
        142     1                          READ(IUT5,8300) ( LSRC(ISRC) , BSRC(ISRC) , ISRC = 1 , NSRC )
        143     1                      ENDIF
        144                     C
        145                            READ(IUT5,6500) COMSKP
        146     1                      IF(COMSKP.NE.REF) THEN
        147     1                          READ(IUT5,   *) INTMSV , IRELES , JVALID
        148     1               C
        149     2                          IF(IRELES.EQ.1) THEN
        150     2                              READ(IUT5,   *) INTRLS , NMR
        151     3                              IF(NMR.GT.MRL) THEN
        152     3                                  WRITE(IUT0,6300) ERMSG
        153     3                                  WRITE(IUT0,6300) EREXP3
        154     3                                  IERR = 1
        155     3                                  RETURN
        156     3                              ENDIF
        157     2                              READ(IUT5,8100) ( XMR(IMR) , YMR(IMR) , IMR = 1 , NMR )
        158     2                          ENDIF
        159     1               C
        160     2                          IF(IRELES.EQ.2) THEN
        161     2                              READ(IUT5,   *) XMINRS , YMINRS , XMAXRS , YMAXRS , NMARK
        162     3                              IF(NMARK.GT.MRK) THEN
        163     3                                  WRITE(IUT0,6300) ERMSG
        164     3                                  WRITE(IUT0,6300) EREXP4
        165     3                                  IERR = 1
        166     3                                  RETURN
        167     3                              ENDIF
        168     2                          ENDIF
        169     1               C
        170     2                          IF(IRELES.EQ.3) THEN
        171     2                              READ(IUT5,   *) XMINRS , YMINRS , XMAXRS , YMAXRS , NMR
        172     2                              READ(IUT5,   *) INTRLS , NCYCLE
        173     3                              IF(NMR.GT.MRL) THEN
        174     3                                  WRITE(IUT0,6300) ERMSG
        175     3                                  WRITE(IUT0,6300) EREXP3
        176     3                                  IERR = 1
        177     3                                   RETURN
        178     3                              ENDIF
        179     2                          ENDIF
        180     1               C
        181     2                          IF(JVALID.EQ.1) THEN
        182     2                              READ(IUT5,   *) XMINMK , YMINMK , XMAXMK , YMAXMK
        183     2                          ENDIF
        184     1                      ENDIF
        185                     C
        186                            READ(IUT5,6500) COMSKP
        187     1                      IF(COMSKP.NE.REF) THEN
        188     1                          READ(IUT5,   *) AFRONT , NEB
        189     1                          READ(IUT5,8000) ( LEB (IB) , LSB(IB) , IB = 1 , NEB )
        190     1                      ENDIF
        191                     C
        192                            READ(IUT5,6500) COMSKP
        193     1                      IF(COMSKP.NE.REF) THEN
        194     1                          READ(IUT5,   *) NDAMP
        195     2                          IF(NDAMP.GT.MDAMP) THEN
        196     2                              WRITE(IUT0,6300) ERMSG
        197     2                              WRITE(IUT0,6300) EREXP5
        198     2                              IERR = 1
        199     2                              RETURN
        200     2                          ENDIF
        201     1                          READ(IUT5,8300) (LDAMP(IDAMP),FACT(IDAMP),IDAMP = 1 , NDAMP)
        202     1                      ENDIF
        203                     C
        204                            NHIST = MRESV
        205                            READ(IUT5,6500) COMSKP
        206     1                      IF(COMSKP.NE.REF) THEN
        207     1                          READ(IUT5,   *) NSMPL
        208     2                          IF(NSMPL.GT.MSMPL) THEN
        209     2                              WRITE(IUT0,6300) ERMSG
        210     2                              WRITE(IUT0,6300) EREXP6
        211     2                              IERR = 1
        212     2                              RETURN
        213     2                          ENDIF
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LSMPL, YSMPL, XSMPL
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 1  FILL 4
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        214     2   s    s                 DO 10 ISMPL = 1 , NSMPL
        215     2   m    s                     READ(IUT5,   *) LSMPL(1,ISMPL),XSMPL(ISMPL),YSMPL(ISMPL)
        216     2   s    s                     NHIST = NHIST+1
        217     2   m    m                     WRITE(DATHIS(NHIST),7000) DATEFD(LSMPL(1,ISMPL)),
        218     2                    &                                   XSMPL(ISMPL),YSMPL(ISMPL)
        219     2   p    v         10      CONTINUE
        220     1                      ENDIF
        221                     C
        222                            READ(IUT5,6500) COMSKP
        223     1                      IF(COMSKP.NE.REF) THEN
        224     1                          READ(IUT5,   *) NSHIFT
        225     2                          IF(NSHIFT.GT.MAXB) THEN
        226     2                              WRITE(IUT0,6300) ERMSG
        227     2                              WRITE(IUT0,6300) EREXP5
        228     2                              IERR = 1
        229     2                              RETURN
        230     2                          ENDIF
        231     1                          READ(IUT5,8000) ( LSHIFT(I) , I = 1 , NSHIFT )
        232     1                      ENDIF
        233                     C
        234                            READ(IUT5,6500) COMSKP
        235                            READ(IUT5,'(A60)') FILEMS
        236                            READ(IUT5,'(A60)') FILEIF
        237                            READ(IUT5,'(A60)') FILEFF
        238                            READ(IUT5,'(A60)') FILEIM
        239                            READ(IUT5,'(A60)') FILEFM
        240                            READ(IUT5,'(A60)') FILEGF
        241                            READ(IUT5,'(A60)') FILEGM
        242                            READ(IUT5,'(A60)') FILEHS
        243                     C
        244                           IDUM = IDUM
        245                           DUM  = DUM
        246                     C
        247                     C
        248                           RETURN
        249                      6300 FORMAT(A72)
        250                      6400 FORMAT(A40)
        251                      6500 FORMAT(A4 )
        252                      7000 FORMAT(A16, 3H X=,1PE9.2, 3H Y=,1PE9.2)
        253                      8000 FORMAT(14I5)
        254                      8100 FORMAT(6D12.5)
        255                     CCYY---
        256                     CCYY 8300 FORMAT(4(I5,X,D12.5))
        257                      8300 FORMAT(4(I5,1X,D12.5))
        258                     CCYY---
        259                           END

 Diagnostic messages: program name(NST2DI)
   jwd5121p-i  "nst2di.f", line 127: DO loop is not parallelized: an input/output statement was found in the loop.
   jwd6121s-i  "nst2di.f", line 127: SIMD conversion cannot be applied to DO loop: an input/output statement was found in the loop.
   jwd8664o-i  "nst2di.f", line 127: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd6302s-i  "nst2di.f", line 214: SIMD conversion is not applied to DO loop: the performance of a partial SIMD execution may not be improved.
   jwd8664o-i  "nst2di.f", line 214: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
   jwd5208p-i  "nst2di.f", line 215: DO loop is not parallelized: the assign-refer order of 'YSMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "nst2di.f", line 215: DO loop is not parallelized: the assign-refer order of 'XSMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "nst2di.f", line 215: DO loop is not parallelized: the assign-refer order of 'LSMPL' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5121p-i  "nst2di.f", line 215: DO loop is not parallelized: an input/output statement was found in the loop.
   jwd6208s-i  "nst2di.f", line 215: SIMD conversion cannot be applied to DO loop: the assign-refer order of 'YSMPL' in a SIMD execution may differ from the assign-refer order in the serial execution.
   jwd6208s-i  "nst2di.f", line 215: SIMD conversion cannot be applied to DO loop: the assign-refer order of 'XSMPL' in a SIMD execution may differ from the assign-refer order in the serial execution.
   jwd6208s-i  "nst2di.f", line 215: SIMD conversion cannot be applied to DO loop: the assign-refer order of 'LSMPL' in a SIMD execution may differ from the assign-refer order in the serial execution.
   jwd6121s-i  "nst2di.f", line 215: SIMD conversion cannot be applied to DO loop: an input/output statement was found in the loop.
   jwd5202p-i  "nst2di.f", line 216: DO loop is not parallelized: data dependency of variable 'NHIST' may cause different results from serial execution for loop.
   jwd6202s-i  "nst2di.f", line 216: SIMD conversion cannot be applied to DO loop: data dependency of variable 'NHIST' may cause different results from serial execution for loop.
   jwd5208p-i  "nst2di.f", line 217: DO loop is not parallelized: the assign-refer order of 'DATHIS' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5121p-i  "nst2di.f", line 217: DO loop is not parallelized: an input/output statement was found in the loop.
   jwd6121s-i  "nst2di.f", line 217: SIMD conversion cannot be applied to DO loop: an input/output statement was found in the loop.

 Procedure information
   Lines      : 259
   Statements : 172
   Stack(byte): 10000
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 259
   Total statements : 172
   Total stack(byte): 10000
   Total prefetch num: 0

