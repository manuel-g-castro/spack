
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:10 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : nearwl.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "NEARWL"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    NEARWL                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE NEARWL(X,Y,Z,NODE,NE,NP,N,LOCAL,LEWALL,NEWALL,
         14                          *                  NEAR,DSNEAR,WRK1,WRK2,WRK3)
         15                          *
         16                           IMPLICIT REAL*4(A-H,O-Z)
         17                           DIMENSION X(NP),Y(NP),Z(NP),NODE(N,NE),LOCAL(4,6),
         18                          1          LEWALL(2,NEWALL),NEAR(NE),DSNEAR(NE),
         19                          2          WRK1(NE),WRK2(NE),WRK3(NE)
         20                     C
         21                     C
         22                     C      SEARCH THE NEAREST WALL SURFACE FOR ALL THE ELEMENTS
         23                     C         ( 3-D ; SINGLE PRECISION )
         24                     C
         25                     C
         26                     C     ARGUMENT LISTINGS
         27                     C       (1) INPUT
         28                     C          X       (IP); X-COORDINATE OF GLOBAL NODES
         29                     C          Y       (IP); Y-COORDINATE OF GLOBAL NODES
         30                     C          Z       (IP); Z-COORDINATE OF GLOBAL NODES
         31                     C          NODE  (I,IE); NODE NO. TABLE BASED ON ELEMENT
         32                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         33                     C          NP          ; NUMBER OF TOTAL    NODES
         34                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         35                     C          LOCAL (I,IS); NODE NUMBER TABLE DEFINING ELEMENT SURFACES
         36                     C          LEWALL(I,IBE); WALL BOUNDARY ELEMENT AND ITS SURFACE
         37                     C          NEWALL      ; NUMBER OF WALL BOUNDARY SURFACES
         38                     C
         39                     C       (2) OUTPUT
         40                     C          NEAR    (IE); NEAREST WALL SURFACE
         41                     C          DSNEAR  (IE); DISTANCE TO THE NEAREST WALL SURFACE
         42                     C
         43                     C       (4) WORK
         44                     C          WRK1    (IE); STORES ELEMENT CENTER X-COORDINATES
         45                     C          WRK2    (IE); STORES ELEMENT CENTER Y-COORDINATES
         46                     C          WRK3    (IE); STORES ELEMENT CENTER Z-COORDINATES
         47                     C
         48                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 101
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.36, ITR: 64, MVE: 2, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK1, WRK2, WRK3
                              <<< Loop-information  End >>>
         49     1  pp    v            DO 100 IE = 1 , NE
         50     1   p    v                WRK1(IE) = 0.125E0*(X(NODE(1,IE))+X(NODE(5,IE))
         51     1                    &                       +X(NODE(2,IE))+X(NODE(6,IE))
         52     1                    &                       +X(NODE(3,IE))+X(NODE(7,IE))
         53     1                    &                       +X(NODE(4,IE))+X(NODE(8,IE)))
         54     1   p    v                WRK2(IE) = 0.125E0*(Y(NODE(1,IE))+Y(NODE(5,IE))
         55     1                    &                       +Y(NODE(2,IE))+Y(NODE(6,IE))
         56     1                    &                       +Y(NODE(3,IE))+Y(NODE(7,IE))
         57     1                    &                       +Y(NODE(4,IE))+Y(NODE(8,IE)))
         58     1   p    v                WRK3(IE) = 0.125E0*(Z(NODE(1,IE))+Z(NODE(5,IE))
         59     1                    &                       +Z(NODE(2,IE))+Z(NODE(6,IE))
         60     1                    &                       +Z(NODE(3,IE))+Z(NODE(7,IE))
         61     1                    &                       +Z(NODE(4,IE))+Z(NODE(8,IE)))
         62     1   p    v        100 CONTINUE
         63                     C
         64                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK2, WRK1, WRK3, DSNEAR, NEAR
                              <<< Loop-information  End >>>
         65     1                     DO 210 IEWALL = 1 , NEWALL
         66     1                         IEW  = LEWALL(1,IEWALL)
         67     1                         IS   = LEWALL(2,IEWALL)
         68     1               C
         69     1                         IPW1  = NODE(LOCAL(1,IS),IEW)
         70     1                         IPW2  = NODE(LOCAL(2,IS),IEW)
         71     1                         IPW3  = NODE(LOCAL(3,IS),IEW)
         72     1                         IPW4  = NODE(LOCAL(4,IS),IEW)
         73     1               C
         74     1                         XWG   = 0.25E0*(X(IPW1)+X(IPW2)+X(IPW3)+X(IPW4))
         75     1                         YWG   = 0.25E0*(Y(IPW1)+Y(IPW2)+Y(IPW3)+Y(IPW4))
         76     1                         ZWG   = 0.25E0*(Z(IPW1)+Z(IPW2)+Z(IPW3)+Z(IPW4))
         77     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 517
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.71, ITR: 160, MVE: 3, POL: S)
                              <<<    UNSWITCHING
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK3, WRK1, WRK2, DSNEAR, NEAR
                              <<< Loop-information  End >>>
         78     2  pp    v                DO 200 IE = 1 , NE
         79     2   p    v                    D = (WRK1(IE)-XWG)**2+(WRK2(IE)-YWG)**2+(WRK3(IE)-ZWG)**2
         80     3   p    v                    IF(IEWALL.EQ.1 .OR. D.LE.DSNEAR(IE)) THEN
         81     3   p    v                        DSNEAR(IE) = D
         82     3   p    v                        NEAR  (IE) = IEWALL
         83     3   p    v                    ENDIF
         84     2   p    v        200     CONTINUE
         85     1                 210 CONTINUE
         86                     C
         87                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 728
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.91, ITR: 320, MVE: 6, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DSNEAR
                              <<< Loop-information  End >>>
         88     1  pp   2v            DO 300 IE = 1 , NE
         89     1   p   2v                DSNEAR(IE) = SQRT(DSNEAR(IE))
         90     1   p   2v        300 CONTINUE
         91                     C
         92                     C
         93                           RETURN
         94                           END

 Diagnostic messages: program name(NEARWL)
   jwd8220o-i  "nearwl.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd5001p-i  "nearwl.f", line 49: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "nearwl.f", line 49: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "nearwl.f", line 49: This loop is software pipelined.
   jwd8205o-i  "nearwl.f", line 49: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 64.
   jwd8209o-i  "nearwl.f", line 54: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "nearwl.f", line 58: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5208p-i  "nearwl.f", line 65: DO loop is not parallelized: the assign-refer order of 'NEAR' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd5208p-i  "nearwl.f", line 65: DO loop is not parallelized: the assign-refer order of 'DSNEAR' in a parallel execution may differ from the assign-refer order in the serial execution.
   jwd8209o-i  "nearwl.f", line 74: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "nearwl.f", line 75: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "nearwl.f", line 76: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8321o-i  "nearwl.f", line 78: Loop unswitched.
   jwd5001p-i  "nearwl.f", line 78: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "nearwl.f", line 78: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "nearwl.f", line 78: This loop is software pipelined.
   jwd8205o-i  "nearwl.f", line 78: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 160.
   jwd8209o-i  "nearwl.f", line 79: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd5001p-i  "nearwl.f", line 88: DO loop with DO variable 'IE' is parallelized.
   jwd6001s-i  "nearwl.f", line 88: SIMD conversion is applied to DO loop with DO variable 'IE'.
   jwd8204o-i  "nearwl.f", line 88: This loop is software pipelined.
   jwd8205o-i  "nearwl.f", line 88: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 320.

 Procedure information
   Lines      : 94
   Statements : 31
   Stack(byte): 1968
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 94
   Total statements : 31
   Total stack(byte): 1968
   Total prefetch num: 0

