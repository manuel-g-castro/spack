
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:35 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : transg.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "TRANSG"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    TRANSG                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE TRANSG(RAD1,RAD2,TMAT)
         14                           IMPLICIT REAL*4(A-H,O-Z)
         15                           DIMENSION TMAT(3,1)
         16                           DIMENSION EMAT(3,3),N(5)
         17                           DATA N   / 1 , 2 , 3 , 1 , 2 /
         18                           DATA EPS / 1.E-12 /
         19                     C
         20                     C
         21                     C      CALCULATE COORDINATE TRANSVERSE MATRIX
         22                     C         ( 2-D GRAPHICS )
         23                     C
         24                     C
         25                     C     ARGUMENT LISTINGS
         26                     C       (1) INPUT
         27                     C          RAD1        ; ANGLE BETWEEN TRANSVERSED Z-AXIS AND ORIGINAL
         28                     C                      X-AXIS IN ORIGINAL X-Y PLANE IN RADIANS
         29                     C          RAD2        ; ANGLE BETWEEN TRANSVERSED Z-AXIS AND ORIGINAL
         30                     C                      Z-AXIS                       IN RADIANS
         31                     C
         32                     C       (2) OUTPUT
         33                     C          TMAT(J,I)   ; TRANSVERSE MATRIX
         34                     C
         35                     C     INTRINSIC  VARIABLES
         36                     C          EMAT(1,I)   ; BASE VECTOR ON TRANSVERSED X AXIS
         37                     C          EMAT(2,I)   ; BASE VECTOR ON TRANSVERSED Y AXIS
         38                     C          EMAT(3,I)   ; BASE VECTOR ON TRANSVERSED Z AXIS
         39                     C                      ( I CORRESPONDING TO X,Y,Z COMPONENT )
         40                     C
         41                     C
         42                     C      BASE VECTOR CALCULATION
         43                     C
         44                     C
         45                     C  (1) AS TO Z-AXIS
         46                     C
         47                           EMAT(3,1) = SIN(RAD2)*COS(RAD1)
         48                           EMAT(3,2) = SIN(RAD2)*SIN(RAD1)
         49                           EMAT(3,3) = COS(RAD2)
         50                     C
         51                     C  (2) AS TO X-AXIS
         52                     C
         53                           ABS = EMAT(3,1)**2+EMAT(3,2)**2
         54     1                     IF(ABS.GT.EPS) THEN
         55     1                         A = ATAN2(-EMAT(3,1),EMAT(3,2))
         56     1                         EMAT(1,1) =-COS(A)
         57     1                         EMAT(1,2) =-SIN(A)
         58     1                         EMAT(1,3) = 0.E0
         59     1                     ELSE
         60     1                         EMAT(1,1) = 1.E0
         61     1                         EMAT(1,2) = 0.E0
         62     1                         EMAT(1,3) = 0.E0
         63     1                     ENDIF
         64                     C
         65                     C  (3) AS TO Y-AXIS
         66                     C
         67                           EMAT(2,1) = EMAT(3,2)*EMAT(1,3)-EMAT(3,3)*EMAT(1,2)
         68                           EMAT(2,2) = EMAT(3,3)*EMAT(1,1)-EMAT(3,1)*EMAT(1,3)
         69                           EMAT(2,3) = EMAT(3,1)*EMAT(1,2)-EMAT(3,2)*EMAT(1,1)
         70                     C
         71                     C
         72                     C      INVERSE MATRIX CALCULATION
         73                     C
         74                     C
         75                           DET = 0.E0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
         76     1       f             DO 10 J = 1 , 3
         77     1       f                 DET = DET+EMAT(J,1)*( EMAT(N(J+1),2)*EMAT(N(J+2),3)
         78     1                    &                         -EMAT(N(J+2),2)*EMAT(N(J+1),3))
         79     1       f          10 CONTINUE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
         80     1       f             DO 30 I = 1 , 3
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
         81     2       f                 DO 20 J = 1 , 3
         82     2       f                     TMAT(I,J) = EMAT(N(J+1),N(I+1))*EMAT(N(J+2),N(I+2))
         83     2                    &                   -EMAT(N(J+2),N(I+1))*EMAT(N(J+1),N(I+2))
         84     2       f                     TMAT(I,J) = TMAT(I,J)/DET
         85     2       f          20     CONTINUE
         86     1       f          30 CONTINUE
         87                     C
         88                     C
         89                           RETURN
         90                           END

 Diagnostic messages: program name(TRANSG)
   jwd8220o-i  "transg.f", line 13: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8203o-i  "transg.f", line 76: Loop unrolled fully.
   jwd8203o-i  "transg.f", line 80: Loop unrolled fully.
   jwd8203o-i  "transg.f", line 81: Loop unrolled fully.
   jwd8206o-i  "transg.f", line 84: Division is changed to multiplication by reciprocal.

 Procedure information
   Lines      : 90
   Statements : 35
   Stack(byte): 400
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 90
   Total statements : 35
   Total stack(byte): 400
   Total prefetch num: 0

