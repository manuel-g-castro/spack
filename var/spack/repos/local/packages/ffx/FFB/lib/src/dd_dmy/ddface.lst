
 Fujitsu Fortran Version 4.7.0  Mon Jan 31 20:16:13 2022

 Compilation information
   Current directory : /vol0005/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/dd_dmy
   Source file       : ddface.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0005/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -Nlst=t -Cpp -Cfpp -c -I/opt/FJSVxtclanga/.common/MELI026/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI026/lib64 -Knointentopt
   Cpp options          : -I/vol0005/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -I/opt/FJSVxtclanga/.common/MELI026/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI026/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=7 -D__FRT_patchlevel__=0 -D__FRT_version__="4.7.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Knoarray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nlibomp -Nline -Nlst -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "DDFAC0"
  (line-no.)(nest)(optimize)
          1                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          2                     C
          3                     C     SET UP NEIGHBORING DOMAIN LISTS OF FACE DATA FOR DOMAIN-DECOMPOSITION
          4                     C     PROGRAMMING MODEL
          5                     C
          6                     C     WRITTEN BY H.YOSHIMURA 2013.03.06
          7                     C
          8                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          9                           SUBROUTINE DDFAC0(IPART,NFACE,LFACE,MDOM,MBFDOM,
         10                          *                  NDOM,LDOM,NBFDOM,IFSLF,IFSND,IUT0,IERR)
         11                     C
         12                           IMPLICIT NONE
         13                     C
         14                     C     [INPUT]
         15                           INTEGER*4 IPART,NFACE,LFACE(5,NFACE),MDOM,MBFDOM
         16                     C
         17                     C     [IN-OUTPUT]
         18                           INTEGER*4 NDOM,LDOM(MDOM),NBFDOM(MDOM)
         19                           INTEGER*4 IFSLF(MBFDOM,MDOM),IFSND(MBFDOM,MDOM),IUT0,IERR
         20                     C
         21                     C     [LOCAL]
         22                           INTEGER*4 IDOM,IFACE,IFNEW,ICHK
         23                     C
         24                           CHARACTER*60 ERMSGB
         25                          & / ' ## SUBROUTINE DDFAC0: FATAL     ERROR OCCURRENCE; RETURNED' /
         26                           CHARACTER*60 EREXP1
         27                          & / ' DIMENSION SIZE OF PASSED LIST ARRAYS IS NOT SUFFICIENT    ' /
         28                     C
         29                           IERR = 0
         30                     C
         31                     C
         32                     C
         33                     C SET INITIAL VALUES
         34                     C
         35                     C
         36                     C
         37                           NDOM = 0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NBFDOM
                              <<< Loop-information  End >>>
         38     1  pp   4v            DO 1000 IDOM = 1 , MDOM
         39     1   p   4v                NBFDOM(IDOM) = 0
         40     1   p   4v       1000 CONTINUE
         41                     C
         42                     C
         43                     C
         44                     C SET NEIGHBORING DOMAIN LISTS FOR FACE
         45                     C
         46                     C
         47                     C
         48     1                     DO 2000 IFACE = 1 , NFACE
         49     1                         IF (LFACE(5,IFACE).EQ.0) GOTO 2000
         50     1               C
         51     1                         IFNEW = LFACE(5,IFACE)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LDOM
                              <<< Loop-information  End >>>
         52     2                         DO 2100 ICHK = 1 , NDOM
         53     3                             IF(LDOM(ICHK).EQ.IFNEW) THEN
         54     3                                 IDOM = ICHK
         55     3                                 GO TO 2200
         56     3                             ENDIF
         57     2                2100     CONTINUE
         58     1                         NDOM = NDOM+1
         59     1                         IDOM = NDOM
         60     1               C
         61     2                         IF(NDOM.GT.MDOM) THEN
         62     2                             WRITE(IUT0,*) ERMSGB
         63     2                             WRITE(IUT0,*) EREXP1
         64     2                             IERR = 1
         65     2                             RETURN
         66     2                         ENDIF
         67     1               C
         68     1                         LDOM(NDOM) = IFNEW
         69     1               C
         70     1                2200     CONTINUE
         71     1                         NBFDOM(IDOM) = NBFDOM(IDOM)+1
         72     1               C
         73     2                         IF(NBFDOM(IDOM).GT.MBFDOM) THEN
         74     2                             WRITE(IUT0,*) ERMSGB
         75     2                             WRITE(IUT0,*) EREXP1
         76     2                             IERR = 1
         77     2                             RETURN
         78     2                         ENDIF
         79     1               C
         80     1                         IFSLF(NBFDOM(IDOM),IDOM) =  IFACE
         81     1                         IFSND(NBFDOM(IDOM),IDOM) = -LFACE(2,IFACE)
         82     1                2000 CONTINUE
         83                     C
         84                           RETURN
         85                           END

 Diagnostic messages: program name(DDFAC0)
   jwd2008i-i  "ddface.f", line 9: Dummy argument 'IPART' not used in this subprogram.
   jwd5001p-i  "ddface.f", line 38: DO loop with DO variable 'IDOM' is parallelized.
   jwd6001s-i  "ddface.f", line 38: SIMD conversion is applied to DO loop with DO variable 'IDOM'.
   jwd8663o-i  "ddface.f", line 38: This loop is not software pipelined because the software pipelining does not improve the performance.
   jwd8202o-i  "ddface.f", line 38: Loop unrolled 4 times.
   jwd5131p-i  "ddface.f", line 48: DO loop is not parallelized: multiple exits were found in the loop.
   jwd5131p-i  "ddface.f", line 52: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "ddface.f", line 52: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "ddface.f", line 52: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.

 Procedure information
   Lines      : 85
   Statements : 44
   Stack(byte): 1152
   Prefetch num: 0

 External subroutine subprogram "DDFAC1"
  (line-no.)(nest)(optimize)
         86                     C
         87                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
         88                     C
         89                     C     COMMUNICATE FACE DATA (MPI VERSION)
         90                     C
         91                     C     WRITTEN BY H.YOSHIMURA 2013.03.06
         92                     C
         93                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
         94                           SUBROUTINE DDFAC1(IDIM,MBFDOM,NDOM,LDOM,NBFDOM,IFSLF,IFSND,NFACE,
         95                          *                  FX,FY,FZ,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
         96                     C
         97                           IMPLICIT NONE
         98                     C
         99                     C     [INPUT]
        100                           INTEGER*4 IDIM
        101                           INTEGER*4 MBFDOM,NDOM,LDOM(NDOM),NBFDOM(NDOM),
        102                          *          IFSLF(MBFDOM,NDOM),IFSND(MBFDOM,NDOM)
        103                           INTEGER*4 NFACE
        104                     C
        105                     C     [IN-OUTPUT]
        106                           INTEGER*4 IUT0,IERR
        107                           REAL*4    FX(NFACE),FY(NFACE),FZ(NFACE)
        108                     C
        109                     C     [WORK]
        110                           INTEGER*4 MAXBUF
        111                           REAL*4    BUFSND(MAXBUF),BUFRCV(MAXBUF)
        112                     C
        113                     C     [LOCAL]
        114                           INTEGER*4 NSTART,IFACE,IFACES,IBF,IDOM
        115                     C
        116                           CHARACTER*60 ERMSGB
        117                          & / ' ## SUBROUTINE DDFAC1: FATAL     ERROR OCCURRENCE; RETURNED' /
        118                           CHARACTER*60 EREXP1
        119                          & / ' DIMENSION SIZE OF INTERNAL      ARRAYS IS NOT SUFFICIENT  ' /
        120                           CHARACTER*60 EREXP2
        121                          & / ' DIMENSION SIZE OF PASSED BUFFER ARRAYS IS NOT SUFFICIENT  ' /
        122                           CHARACTER*60 EREXP3
        123                          & / ' RECEIVED NODE NUMBER IS OUT OF THE GLOBAL NODE NUMBER     ' /
        124                     C
        125                           IERR = 0
        126                     C
        127                     C
        128                     C
        129                     C CHECK THE NUMBER OF NEIBERING DOMAINS
        130                     C
        131                     C
        132                     C
        133                           IF(NDOM.EQ.0) RETURN
        134                     C
        135     1                     IF(NDOM.NE.1) THEN
        136     1                         IERR=1
        137     1                         WRITE(IUT0,*) ERMSGB
        138     1                         WRITE(IUT0,*) EREXP1
        139     1                         RETURN
        140     1                     ENDIF
        141                     C
        142                     C
        143                     C
        144                     C SET UP THE SEND BUFFER
        145                     C
        146                     C
        147                     C
        148                           IDOM   = 1
        149                           NSTART = 0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 341
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 192, MVE: 3, POL: S)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IFSLF, IFSND, BUFSND
                              <<< Loop-information  End >>>
        150     1  pp   2v            DO 100 IBF = 1 , NBFDOM(IDOM)
        151     1   p   2v                IFACE  = IFSLF(IBF,IDOM)
        152     1   p   2v                IFACES = IFSND(IBF,IDOM)
        153     1   p   2v                BUFSND(NSTART+1) = IFACES
        154     1   p   2v                BUFSND(NSTART+2) = FX(IFACE)
        155     1   p   2v                BUFSND(NSTART+3) = FY(IFACE)
        156     1   p   2v                BUFSND(NSTART+4) = FZ(IFACE)
        157     1   p   2v                NSTART = NSTART+4
        158     1   p   2v        100 CONTINUE
        159                     C
        160                     C
        161                     C
        162                     C POST ALL THE EXPECTED RECEIVES
        163                     C
        164                     C
        165                     C
        166                           IDOM   = 1
        167                           NSTART = 0
        168     1                     DO 200 IBF = 1 , NBFDOM(IDOM)
        169     1               C
        170     2                         IF(NSTART+3.GT.MAXBUF) THEN
        171     2                             WRITE(IUT0,*) ERMSGB
        172     2                             WRITE(IUT0,*) EREXP2
        173     2                             IERR = 1
        174     2                             RETURN
        175     2                         ENDIF
        176     1               C
        177     1                         BUFRCV(NSTART+1)=BUFSND(NSTART+1)
        178     1                         BUFRCV(NSTART+2)=BUFSND(NSTART+2)
        179     1                         BUFRCV(NSTART+3)=BUFSND(NSTART+3)
        180     1                         BUFRCV(NSTART+4)=BUFSND(NSTART+4)
        181     1               C
        182     1                         NSTART = NSTART+4
        183     1                 200 CONTINUE
        184                     C
        185                     C
        186                     C
        187                     C SUPERIMPOSE THE RECEIVED RESIDUALS
        188                     C
        189                     C
        190                     C
        191                           IDOM   = 1
        192                           NSTART = 0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      BUFRCV
                              <<< Loop-information  End >>>
        193     1                     DO 300 IBF = 1 , NBFDOM(IDOM)
        194     1                         IFACE = BUFRCV(NSTART+1)+0.1
        195     1               C
        196     2                         IF(IFACE.LT.1 .OR. IFACE.GT.NFACE) THEN
        197     2                             WRITE(IUT0,*) ERMSGB
        198     2                             WRITE(IUT0,*) EREXP3
        199     2                             IERR = 1
        200     2                             RETURN
        201     2                         ENDIF
        202     1               C
        203     1                                       FX(IFACE) = BUFRCV(NSTART+2)
        204     1                         IF(IDIM.GE.2) FY(IFACE) = BUFRCV(NSTART+3)
        205     1                         IF(IDIM.GE.3) FZ(IFACE) = BUFRCV(NSTART+4)
        206     1                         NSTART = NSTART+4
        207     1                 300 CONTINUE
        208                     C
        209                           RETURN
        210                           END

 Diagnostic messages: program name(DDFAC1)
   jwd2008i-i  "ddface.f", line 101: Dummy argument 'LDOM' not used in this subprogram.
   jwd5001p-i  "ddface.f", line 150: DO loop with DO variable 'IBF' is parallelized.
   jwd6001s-i  "ddface.f", line 150: SIMD conversion is applied to DO loop with DO variable 'IBF'.
   jwd8204o-i  "ddface.f", line 150: This loop is software pipelined.
   jwd8205o-i  "ddface.f", line 150: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 192.
   jwd5131p-i  "ddface.f", line 168: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "ddface.f", line 168: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "ddface.f", line 168: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
   jwd5131p-i  "ddface.f", line 193: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "ddface.f", line 193: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "ddface.f", line 193: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.

 Procedure information
   Lines      : 125
   Statements : 65
   Stack(byte): 1392
   Prefetch num: 0

 Total information
   Procedures       : 2
   Total lines      : 210
   Total statements : 109
   Total stack(byte): 2544
   Total prefetch num: 0

