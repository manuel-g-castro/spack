
 Fujitsu Fortran Version 4.5.0  Thu May  6 16:54:10 2021

 Compilation information
   Current directory : /vol0004/hp120295/u00324/FFBs/FFB.63.02.02/lib/src/fort
   Source file       : mfname.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Knointentopt
   Cpp options          : -I/vol0004/hp120295/u00324/FFB/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI024/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI024/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=5 -D__FRT_patchlevel__=0 -D__FRT_version__="4.5.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Karray_declaration_opt
                          -Kassume=noshortloop -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knoextract_stride_store
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kfz -Khpctag -Kilfunc=procedure
                          -Knointentopt -Klargepage -Kloop_blocking
                          -Kloop_fission -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping
                          -Knosubscript_opt -Kswp -Kswp_freg_rate=100
                          -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                          -Kswp_policy=auto -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "MFNAME"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.1.0                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE    MFNAME                                               C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C Contact address: The University of Tokyo, FSIS project               C
         11                     C                                                                      C
         12                     C======================================================================C
         13                           SUBROUTINE MFNAME(FILEGL,FILEPT,IPART,IUT0,IERR)
         14                           IMPLICIT REAL*4(A-H,O-Z)
         15                           CHARACTER*60 FILEGL,FILEPT
         16                     C
         17                           CHARACTER*60 ERMSGB
         18                          & / ' ## SUBROUTINE MFNAME: FATAL      ERROR OCCURENCE; RETURNED' /
         19                           CHARACTER*60 EREXP1
         20                          & / ' AN ILLEGAL SUB-DOMAIN NUMBER HAS BEEN SPECIFIED           ' /
         21                           CHARACTER*60 EREXP2
         22                          & / ' LENGTH OF THE PASSED FILE NAME EXCEEDED THE LIMIT OF 54   ' /
         23                     C
         24                     C
         25                           CHARACTER* 6 INDEX
         26                           CHARACTER* 7 INDEX2
         27                           CHARACTER* 8 INDEX3
         28                     C
         29                     C
         30                     C      MAKE A FILE NAME FOR A SUB-DOMAIN
         31                     C
         32                     C
         33                     C     NOTES; THIS SUBROUTINE GENERATES AND RETURNS A FILE NAME FOR
         34                     C           A SUB-DOMAIN, BASED ON THE GIVEN FILE NAME SPECIFYING THE
         35                     C           GLOBAL DOMAIN. THE SUB-DOMAIN FILE NAME TO BE GENERATED
         36                     C           WILL BE 'GLOBAL-DOMAIN-FILENAME'.PXXXX, WHERE XXXX IS A
         37                     C           4-DIGIT INTEGER NUMBER INDICATING THE SUB-DOMAIN NUMBER
         38                     C           (STARTING WITH 0). AN ERROR WILL BE REPORTED IF THE PASSED
         39                     C           SUB-DOMAIN NUMBER IS LESS THAN 0 OR GREATER THAN 9999.
         40                     C
         41                     C            AN EXAMPLE OF THE FILE NAME CONVENTION IS GIVEN BELOW:
         42                     C               FILE NAME OF GLOBAL DOMAIN = 'DOMAIN'
         43                     C               FILE NAME OF SUB-DOMAIN 24 = 'DOMAIN.P0024'
         44                     C
         45                     C
         46                     C     ARGUMENT LISTINGS
         47                     C       (1) INPUT
         48                     C          FILEGL      ; FILE NAME INDICATING THE GLOBAL-DOMAIN
         49                     C           NOTES ; THE LENGTH OF THE GLOBAL-DOMAN FILE NAME MUST BE
         50                     C                  54 OR SHORTER, TO ALLOW SPACE FOR THE SUB-DOMAIN
         51                     C                  INDEX TO BE GENERATED AND ADDED TO THE ORIGINAL
         52                     C                  FILE NAME.
         53                     C
         54                     C          IPART       ; SUB-DOMAIN NUMBER ( FROM 0 TO 9999 )
         55                     C          IUT0        ; FILE NUMBER TO WRITE  ERROR MESSAGE
         56                     C
         57                     C       (2) OUTPUT
         58                     C          FILEPT      ; FILE NAME INDICATING THE SUB-DOMAIN
         59                     C          IERR        ; RETURN CODE WHOSE VALUE WILL BE EITHER
         60                     C                   0 --- INDICATING SUCCESSFUL TERMINATION
         61                     C                OR 1 --- INDICATING OCCURENCE OF SOME ERROR CONDITIONS
         62                     C
         63                     C
         64                           IERR = 0
         65                     C
         66                     C
         67                     C CHECK PASSED PARAMETER
         68                     C
         69                     C
         70     1                     IF(IPART.LT.0 .OR. IPART.GT.999999) THEN
         71     1                         WRITE(IUT0,*) ERMSGB
         72     1                         WRITE(IUT0,*) EREXP1
         73     1                         IERR = 1
         74     1                         RETURN
         75     1                     ENDIF
         76                     C
         77                     C
         78                     C DETERMINE LENGTH OF THE GLOBAL FILE NAME
         79                     C
         80                     C
         81                     CC    DO 10 ICHAR = 1 , 54
         82     1                     DO 10 ICHAR = 1 , 53
         83     2                         IF(FILEGL(ICHAR:ICHAR).EQ.' ') THEN
         84     2                             NCHAR = ICHAR-1
         85     2                             GO TO 20
         86     2                         ENDIF
         87     1                  10 CONTINUE
         88                           WRITE(IUT0,*) ERMSGB
         89                           WRITE(IUT0,*) EREXP2
         90                           IERR = 1
         91                           RETURN
         92                     C
         93                        20 CONTINUE
         94                     C
         95                     C
         96                     C GENERATE SUB-DOMAIN INDEX
         97                     C
         98                     C
         99     1                     IF(IPART.LE.9)    THEN
        100     1                         WRITE(INDEX,'(5H.P000,I1)') IPART
        101     1                         GO TO 30
        102     1                     ENDIF
        103                     C
        104     1                     IF(IPART.LE.99)   THEN
        105     1                         WRITE(INDEX,'(4H.P00, I2)') IPART
        106     1                         GO TO 30
        107     1                     ENDIF
        108                     C
        109     1                     IF(IPART.LE.999)  THEN
        110     1                         WRITE(INDEX,'(3H.P0,  I3)') IPART
        111     1                         GO TO 30
        112     1                     ENDIF
        113                     C
        114     1                     IF(IPART.LE.9999) THEN
        115     1                         WRITE(INDEX,'(2H.P,   I4)') IPART
        116     1                         GO TO 30
        117     1                     ENDIF
        118                     C
        119     1                     IF(IPART.LE.99999) THEN
        120     1                         WRITE(INDEX2,'(2H.P,   I5)') IPART
        121     1                         GO TO 40
        122     1                     ENDIF
        123                     C
        124     1                     IF(IPART.LE.999999) THEN
        125     1                         WRITE(INDEX3,'(2H.P,   I6)') IPART
        126     1                         GO TO 50
        127     1                     ENDIF
        128                     C
        129                     
        130                        30 CONTINUE
        131                     C
        132                     C
        133                     C ADD GENERATED SUB-DOMAIN INDEX
        134                     C
        135                     C
        136                           FILEPT = FILEGL(1:NCHAR)//INDEX
        137                     C
        138                     C     NOTE: '//' ARE THE STARTING CHARACTERS OF A COMMENT STATEMENT
        139                     C    IN C++ LANGUAGE. A C-PREPROCESSOR IN SOME PLATFORM STRIPS OUT
        140                     C    ALL (NAMELY, BOTH C AND C++) COMMENT STATEMENTS. THUS, IF YOU
        141                     C    USE A C-PREPROCESSOR IN SUCH A PLATFORM, BE SURE TO AVOID THIS
        142                     C    HAPPENING. THIS CAN BE GENERALLY DONE BY ADDING '-C' OPTION WHEN
        143                     C    CALLING YOUR C-PREPROCESSOR.
        144                     C
        145                     C                                        APRIL 12TH, 2001, CHISACHI KATO
        146                     C
        147                     C
        148                           RETURN
        149                     C
        150                     C
        151                     C
        152                     C ADD GENERATED SUB-DOMAIN INDEX
        153                     C
        154                     C
        155                        40 CONTINUE
        156                           FILEPT = FILEGL(1:NCHAR)//INDEX2
        157                           RETURN
        158                     C
        159                        50 CONTINUE
        160                           FILEPT = FILEGL(1:NCHAR)//INDEX3
        161                           RETURN
        162                           END

 Diagnostic messages: program name(MFNAME)
   jwd5131p-i  "mfname.f", line 82: DO loop is not parallelized: multiple exits were found in the loop.
   jwd6131s-i  "mfname.f", line 82: SIMD conversion cannot be applied to DO loop: multiple exits are found in the loop.
   jwd8671o-i  "mfname.f", line 82: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.

 Procedure information
   Lines      : 162
   Statements : 61
   Stack(byte): 1472
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 162
   Total statements : 61
   Total stack(byte): 1472
   Total prefetch num: 0

