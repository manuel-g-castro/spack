
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:52:56 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : e2plst.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "E2PLST"
  (line-no.)(nest)(optimize)
          1                     C=======================================================================
          2                           SUBROUTINE E2PLST(MEP,MPP,M8,M9,NP,NE,NEX,
          3                          &  NODE, NEP, IENP, JENP, NPP, NPP2, IPNP,
          4                          &  LTAB2, IUT0, IERR)
          5                     C=======================================================================
          6                           IMPLICIT NONE
          7                           INTEGER MEP, MPP, M8, M9, NP, NE, IUT0, IERR
          8                           INTEGER NEX(8)
          9                           INTEGER NODE(M8,NE)
         10                           INTEGER NEP(NP), IENP(MEP,NP), JENP(MEP,NP)
         11                           INTEGER NPP(NP), NPP2(NP), IPNP(MPP,NP)
         12                           INTEGER LTAB2(M9,M8,NE)
         13                           INTEGER ICRS, J1, J2, IE, IENEW, IP1, IP2, I, K
         14                     C
         15                           INTEGER NETET,IES1,IEE1
         16                           INTEGER NEPRD,IES2,IEE2
         17                           INTEGER NEWED,IES3,IEE3
         18                           INTEGER NEHEX,IES4,IEE4
         19                     C
         20                           CHARACTER*60 ERMSGC
         21                          & /' ## SUBROUTINE E2PLST: FATAL      ERROR REPORT   ; RETURNED'/
         22                     C
         23                     C     CALCULATE INDEX TABLE OF COMPRESSED ROW STRAGE (CRS) FORMAT
         24                     C     FOR OBTAINING NODE-BASE MATRIX COEFFICIENT
         25                     C     FROM ELEMENT-BASE MATRIX COEFFICIENT
         26                     C                                              2009.12.01 RIST
         27                     C
         28                     C     ARGUMENT LISTINGS
         29                     C
         30                     C       (1) INPUT
         31                     C          MEP         ; THE FIRST DIMENSION OF ARRAY IENP,JENP
         32                     C          MPP         ; THE FIRST DIMENSION OF ARRAY IPNP
         33                     C          M8          ; THE SECOND DIMENSION OF ARRAY LTAB2
         34                     C          M9          ; THE FIRST DIMENSION OF ARRAY NODE,LTAB2
         35                     C          NP          ; NUMBER OF TOTAL    NODES
         36                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         37                     C          IEBTET      ; BASE INDEX OF TET. ELEMENTS IN ARRAY LTAB2
         38                     C          NETET1      ; NUMBER OF TET.    ELEMENTS
         39                     C          IEBPRD      ; BASE INDEX OF PYRAMID ELEMENTS IN ARRAY LTAB2
         40                     C          NEPRD1      ; NUMBER OF PYRAMID ELEMENTS
         41                     C          IEBWED      ; BASE INDEX OF WEGDE ELEMENTS IN ARRAY LTAB2
         42                     C          NEWED1      ; NUMBER OF WEGDE   ELEMENTS
         43                     C          IEBHEX      ; BASE INDEX OF HEX. ELEMENTS IN ARRAY LTAB2
         44                     C          NEHEX1      ; NUMBER OF HEX.    ELEMENTS
         45                     C          NODE  (I,IE); NODE NO. TABLE BASED ON ELEMENT
         46                     C          NEP     (IP); NUMBER OF ADJACENT ELEMENTS TO NODE IP
         47                     C          IENP(IEP,IP); ADJACENT ELEMENT NUMBER TO NODE IP
         48                     C          JENP(IEP,IP); LOCAL NODE NUMBER OF IP IN ELEMENT IENP(IEP,IP)
         49                     C          NPP     (IP); NUMBER OF ADJACENT NODES    TO NODE    IP
         50                     C          NPP2    (IP); BASE INDEX OF CRS FORMAT FOR EACH ROW
         51                     C          IPNP(IPP,IP); ADJACENT NODE    NUMBER TO NODE    IP
         52                     C          IUT0        ; FILE NUMBER TO REPORT ERROR OCCURRENCE
         53                     C
         54                     C       (2) OUTPUT
         55                     C          LTAB2(J1,J2,IE); CRS INDEX TABLE FOR NODE-BASE MATRIX
         56                     C                           COEFFICIENT
         57                     C          IERR        ; RETURN CODE TO REPORT ERROR OCCURENCE
         58                     C
         59                     C       (3) WORK
         60                     C
         61                     C
         62                           IERR=0
         63                           NETET=NEX(1)
         64                           NEPRD=NEX(2)
         65                           NEWED=NEX(3)
         66                           NEHEX=NEX(4)
         67                     C
         68                     C   == TET. ==
         69                           IES1=1
         70                           IEE1=NETET
         71                     C
         72                     C   == PYRAMID ==
         73                           IES2=NETET+1
         74                           IEE2=NETET+NEPRD
         75                     C
         76                     C   == WEDGE ==
         77                           IES3=NETET+NEPRD+1
         78                           IEE3=NETET+NEPRD+NEWED
         79                     C
         80                     C   == HEX. ==
         81                           IES4=NETET+NEPRD+NEWED+1
         82                           IEE4=NETET+NEPRD+NEWED+NEHEX
         83                     C
         84                     CCYY
         85                     CCYY [2] Make Matrix and Table
         86                     CCYY
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         87     1  pp                 DO 2200 IE=1,NE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 3)
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LTAB2
                              <<< Loop-information  End >>>
         88     2   p   4v              DO 2000 J1=1,M8
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<< Loop-information  End >>>
         89     3   p   4                 DO 2100 J2=1,M8
         90     3   p   4v                  LTAB2(J1,J2,IE)=0
         91     3   p   4        2100     CONTINUE
         92     2   p            2000   CONTINUE
         93     1   p            2200 CONTINUE
         94                     C-----------------------------------------------------------------------
         95                     CCYY 4000: NODE LOOP
         96                     CCYY 4100: ADJACENT ELEMENT LOOP
         97                     CCYY 4200: LOCAL NODE LOOP
         98                     CCYY 4300: ADJACENT NODE LOOP FOR SEARCH
         99                     C
        100                     C
        101     1                     DO 4000 IP2=1,NP
        102     2                         DO 4100 I=1,NEP(IP2)
        103     2                             IE=IENP(I,IP2)
        104     2                             J2=JENP(I,IP2)
        105     2                             IENEW=IE
        106     3                             DO 4200 J1=1,M8
        107     3                                 IP1=NODE(J1,IE)
        108     3               C
        109     3                                 IF (IP1.LE.0) GOTO 4200
        110     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IPNP
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 1  FILL 2
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        111     4                                 DO 4300 K=1,NPP(IP1)
        112     5                                     IF(IP2.EQ.IPNP(K,IP1))THEN
        113     5                                         ICRS=NPP2(IP1)+K
        114     6                                         IF(LTAB2(J1,J2,IENEW).NE.0) THEN
        115     6                                             IERR=1
        116     6                                             WRITE(IUT0,*) ERMSGC
        117     6                                             GOTO 9000
        118     6                                         ENDIF
        119     5                                         LTAB2(J1,J2,IENEW)=ICRS
        120     5                                         GOTO 4200
        121     5                                     ENDIF
        122     4                4300             CONTINUE
        123     3                                 IERR=2
        124     3                                 WRITE(IUT0,*) ERMSGC
        125     3                                 GOTO 9000
        126     3                4200         CONTINUE
        127     2                4100     CONTINUE
        128     1                4000 CONTINUE
        129                     C-----------------------------------------------------------------------
        130     1                     DO 3640 IE=IES1,IEE1
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        131     2       f               DO 3440 J1=1,4
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        132     3       f                 DO 3540 J2=1,4
        133     4       f                   IF(LTAB2(J1,J2,IE).EQ.0) THEN
        134     4       f                      IERR=3
        135     4       f                      WRITE(IUT0,*) ERMSGC
        136     4       f                      GOTO 9000
        137     4       f                   ENDIF
        138     3       f        3540     CONTINUE
        139     2       f        3440   CONTINUE
        140     1                3640 CONTINUE
        141                     C
        142     1                     DO 3650 IE=IES2, IEE2
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        143     2       f               DO 3450 J1=1,5
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        144     3       f                 DO 3550 J2=1,5
        145     4       f                   IF(LTAB2(J1,J2,IE).EQ.0) THEN
        146     4       f                      IERR=4
        147     4       f                      WRITE(IUT0,*) ERMSGC
        148     4       f                      GOTO 9000
        149     4       f                   ENDIF
        150     3       f        3550     CONTINUE
        151     2       f        3450   CONTINUE
        152     1                3650 CONTINUE
        153                     C
        154     1                     DO 3660 IE=IES3,IEE3
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        155     2       f               DO 3460 J1=1,6
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        156     3       f                 DO 3560 J2=1,6
        157     4       f                   IF(LTAB2(J1,J2,IE).EQ.0) THEN
        158     4       f                      IERR=5
        159     4       f                      WRITE(IUT0,*) ERMSGC
        160     4       f                      GOTO 9000
        161     4       f                   ENDIF
        162     3       f        3560     CONTINUE
        163     2       f        3460   CONTINUE
        164     1                3660 CONTINUE
        165                     C
        166     1                     DO 3680 IE=IES4,IEE4
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        167     2       f               DO 3480 J1=1,8
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        168     3       f                 DO 3580 J2=1,8
        169     4       f                   IF(LTAB2(J1,J2,IE).EQ.0) THEN
        170     4       f                      IERR=6
        171     4       f                      WRITE(IUT0,*) ERMSGC
        172     4       f                      GOTO 9000
        173     4       f                   ENDIF
        174     3       f        3580     CONTINUE
        175     2       f        3480   CONTINUE
        176     1                3680 CONTINUE
        177                     C-----------------------------------------------------------------------
        178                      9000 CONTINUE
        179                           RETURN
        180                           END

 Diagnostic messages: program name(E2PLST)
   jwd8220o-i  "e2plst.f", line 2: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "e2plst.f", line 87: このDOループを並列化しました。(名前:IE)
   jwd8211o-i  "e2plst.f", line 88: ループを入れ換えました。(行:89)
   jwd6001s-i  "e2plst.f", line 88: このDOループをSIMD化しました。(名前:J1)
   jwd8663o-i  "e2plst.f", line 88: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "e2plst.f", line 88: ループを展開数4回でアンローリングしました。
   jwd8211o-i  "e2plst.f", line 89: ループを入れ換えました。(行:88)
   jwd8209o-i  "e2plst.f", line 90: 多項式の演算順序を変更しました。
   jwd5131p-i  "e2plst.f", line 101: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "e2plst.f", line 102: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "e2plst.f", line 106: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "e2plst.f", line 111: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "e2plst.f", line 111: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "e2plst.f", line 111: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "e2plst.f", line 130: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8671o-i  "e2plst.f", line 130: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "e2plst.f", line 131: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8203o-i  "e2plst.f", line 131: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 132: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "e2plst.f", line 132: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "e2plst.f", line 132: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 142: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8671o-i  "e2plst.f", line 142: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "e2plst.f", line 143: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8203o-i  "e2plst.f", line 143: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 144: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "e2plst.f", line 144: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "e2plst.f", line 144: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 154: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8671o-i  "e2plst.f", line 154: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "e2plst.f", line 155: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8203o-i  "e2plst.f", line 155: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 156: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "e2plst.f", line 156: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "e2plst.f", line 156: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 166: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8671o-i  "e2plst.f", line 166: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "e2plst.f", line 167: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8203o-i  "e2plst.f", line 167: ループをフルアンローリングしました。
   jwd5131p-i  "e2plst.f", line 168: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "e2plst.f", line 168: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "e2plst.f", line 168: ループをフルアンローリングしました。

 Procedure information
   Lines      : 180
   Statements : 107
   Stack(byte): 1408
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 180
   Total statements : 107
   Total stack(byte): 1408
   Total prefetch num: 0

