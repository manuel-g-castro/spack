
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:14 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : nnxyz.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "NNXYZ"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE NNXYZ
          2                          *   ( CTYPE,MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
          3                          *     ME,MP,NE,NP,NODE,N2,NEX,
          4                          *     MELM,EAP2,IENP,JENP,NEP,MEP,
          5                          *     FX,FY,FZ,VX,VY,VZ )
          6                     C
          7                           IMPLICIT NONE
          8                     C
          9                     CCCC  [INPUT:LOOP]
         10                           INTEGER*4 MCOLOR,MCPART
         11                           INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
         12                     C
         13                           CHARACTER*12 CTYPE
         14                           INTEGER*4 ME,MP,NE,NP,N2
         15                           INTEGER*4 NODE(N2,NE),NEX(12)
         16                           INTEGER*4 MELM,MEP
         17                           REAL*4 EAP2(3,N2,MEP,NP)
         18                           REAL*4 FX(NP),FY(NP),FZ(NP),VX(NP),VY(NP),VZ(NP)
         19                     C
         20                           INTEGER*4 IENP(MEP,MP),JENP(MEP,MP),NEP(MP)
         21                           INTEGER*4 NETET,NEPRD,NEWED,NEHEX
         22                           INTEGER*4 NTET ,NPRD, NWED, NHEX
         23                     C
         24                           INTEGER*4 I,J,IE,IP,IPE,K,NN
         25                           INTEGER*4 IEE1,IEE2,IEE3,IEE4
         26                     C
         27                     C     * START *
         28                     C
         29                           NETET=NEX(1)
         30                           NEPRD=NEX(2)
         31                           NEWED=NEX(3)
         32                           NEHEX=NEX(4)
         33                           NTET =NEX(5)
         34                           NPRD =NEX(6)
         35                           NWED =NEX(7)
         36                           NHEX =NEX(8)
         37                     C
         38                     C   == TET. ==
         39                           IEE1=NETET
         40                     C
         41                     C   == PYRAMID ==
         42                           IEE2=NETET+NEPRD
         43                     C
         44                     C   == WEDGE ==
         45                           IEE3=NETET+NEPRD+NEWED
         46                     C
         47                     C   == HEX. ==
         48                           IEE4=NETET+NEPRD+NEWED+NEHEX
         49                     
         50                     C
         51                     C     * ZERO *
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1143
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FZ, FY, FX
                              <<< Loop-information  End >>>
         52     1  pp   2v            DO 10 IP=1,NP
         53     1   p   2v                FX(IP)=0.0E0
         54     1   p   2v                FY(IP)=0.0E0
         55     1   p   2v                FZ(IP)=0.0E0
         56     1   p   2v        10  CONTINUE
         57                     C
         58     1                     IF(CTYPE(1:12).EQ."DIAGONAL    "    ) THEN
         59     1               C
         60     1               C        * FX = (N*NX) * VX
         61     1               C        * FY = (N*NY) * VY
         62     1               C        * FZ = (N*NZ) * VZ
         63     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         64     2  pp                     DO IP=1,NP
         65     2               !ocl nosimd
         66     2               !ocl noswp
         67     3   p                         DO IPE=1,NEP(IP)
         68     3   p                             IE =IENP(IPE,IP)
         69     3   p                             I  =JENP(IPE,IP)
         70     4   p                             IF(IE.LE.IEE1) THEN
         71     4   p                                 NN = NTET
         72     4   p                             ELSE IF (IE.LE.IEE2) THEN
         73     4   p                                 NN = NPRD
         74     4   p                             ELSE IF (IE.LE.IEE3) THEN
         75     4   p                                 NN = NWED
         76     4   p                             ELSE
         77     4   p                                 NN = NHEX
         78     4   p                             ENDIF
         79     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, EAP2
                              <<< Loop-information  End >>>
         80     4   p   6                         DO K=1,NN
         81     4   p   6                             FX(IP) = FX(IP) + EAP2(1,K,IPE,IP)*VX(NODE(K,IE))
         82     4   p   6                             FY(IP) = FY(IP) + EAP2(2,K,IPE,IP)*VY(NODE(K,IE))
         83     4   p   6                             FZ(IP) = FZ(IP) + EAP2(3,K,IPE,IP)*VZ(NODE(K,IE))
         84     4   p   6                         ENDDO
         85     3   p                         ENDDO
         86     2   p                     ENDDO
         87     1               C
         88     1                     ELSE IF(CTYPE(1:12).EQ."OFF-DIAGONAL") THEN
         89     1               C
         90     1               C        * FX = ( (N*NY) * VZ + (N*NZ) * VY )/2
         91     1               C        * FY = ( (N*NZ) * VX + (N*NX) * VZ )/2
         92     1               C        * FZ = ( (N*NX) * VY + (N*NY) * VX )/2
         93     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         94     2  pp                     DO IP=1,NP
         95     2               !ocl nosimd
         96     2               !ocl noswp
         97     3   p                         DO IPE=1,NEP(IP)
         98     3   p                             IE =IENP(IPE,IP)
         99     3   p                             I  =JENP(IPE,IP)
        100     4   p                             IF(IE.LE.IEE1) THEN
        101     4   p                                 NN = NTET
        102     4   p                             ELSE IF (IE.LE.IEE2) THEN
        103     4   p                                 NN = NPRD
        104     4   p                             ELSE IF (IE.LE.IEE3) THEN
        105     4   p                                 NN = NWED
        106     4   p                             ELSE
        107     4   p                                 NN = NHEX
        108     4   p                             ENDIF
        109     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, EAP2
                              <<< Loop-information  End >>>
        110     4   p                             DO K=1,NN
        111     4   p                                 FX(IP) = FX(IP)
        112     4                    *                     + 0.5E0
        113     4                    *                * (EAP2(2,K,IPE,IP)*VZ(NODE(K,IE))
        114     4                    *                 + EAP2(3,K,IPE,IP)*VY(NODE(K,IE)))
        115     4   p                                 FY(IP) = FY(IP)
        116     4                    *                     + 0.5E0
        117     4                    *                * (EAP2(3,K,IPE,IP)*VX(NODE(K,IE))
        118     4                    *                 + EAP2(1,K,IPE,IP)*VZ(NODE(K,IE)))
        119     4   p                                 FZ(IP) = FZ(IP)
        120     4                    *                     + 0.5E0
        121     4                    *                * (EAP2(1,K,IPE,IP)*VY(NODE(K,IE))
        122     4                    *                 + EAP2(2,K,IPE,IP)*VX(NODE(K,IE)))
        123     4   p                             ENDDO
        124     3   p                         ENDDO
        125     2   p                     ENDDO
        126     1               C
        127     1                     END IF
        128                     C
        129                           RETURN
        130                           END

 Diagnostic messages: program name(NNXYZ)
   jwd2008i-i  "nnxyz.f", line 1: この仮引数'MELM'は、副プログラム中で使用されていません。
   jwd2008i-i  "nnxyz.f", line 1: この仮引数'ME'は、副プログラム中で使用されていません。
   jwd8220o-i  "nnxyz.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "nnxyz.f", line 11: この仮引数'LLOOP'は、副プログラム中で使用されていません。
   jwd2008i-i  "nnxyz.f", line 11: この仮引数'NCPART'は、副プログラム中で使用されていません。
   jwd2008i-i  "nnxyz.f", line 11: この仮引数'NCOLOR'は、副プログラム中で使用されていません。
   jwd2006i-i  "nnxyz.f", line 24: この名前'J'は、宣言だけされていて引用されていません。
   jwd5001p-i  "nnxyz.f", line 52: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "nnxyz.f", line 52: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "nnxyz.f", line 52: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "nnxyz.f", line 52: ループを展開数2回でアンローリングしました。
   jwd5001p-i  "nnxyz.f", line 64: このDOループを並列化しました。(名前:IP)
   jwd6156s-i  "nnxyz.f", line 80: 最適化指示子NOSIMDを指定しているため、このDOループはSIMD化できません。
   jwd8202o-i  "nnxyz.f", line 80: ループを展開数6回でアンローリングしました。
   jwd8208o-i  "nnxyz.f", line 81: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8208o-i  "nnxyz.f", line 82: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8208o-i  "nnxyz.f", line 83: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd5001p-i  "nnxyz.f", line 94: このDOループを並列化しました。(名前:IP)
   jwd6156s-i  "nnxyz.f", line 110: 最適化指示子NOSIMDを指定しているため、このDOループはSIMD化できません。

 Procedure information
   Lines      : 130
   Statements : 77
   Stack(byte): 1616
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 130
   Total statements : 77
   Total stack(byte): 1616
   Total prefetch num: 0

