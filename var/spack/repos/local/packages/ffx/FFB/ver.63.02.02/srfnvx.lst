
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:26 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : srfnvx.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SRFNVX"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SRFNVX(IPART,NE,NP,N2,NEX,NS,NSP,N2D,
          2                          *                  LOCAL,NODE,X,Y,Z,
          3                          *                  MEBOUN,NPBOUN,LPBOUN,LEBOUN,
          4                          *                  MDOM,NDOM,LDOM,NBPDOM,MBPDOM,IPSLF,IPSND,
          5                          *                  XPBOUN,YPBOUN,ZPBOUN,
          6                          *                  IWRK,WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,
          7                          *                  RX,RY,IUT6,IUT0,IERR)
          8                           IMPLICIT NONE
          9                           INTEGER*4 IPART,NE,NP,N2,NEX(8),NS,NSP,N2D
         10                           INTEGER*4 LOCAL(NSP,NS,4),NODE(N2,NE)
         11                           REAL*8    X(NP),Y(NP),Z(NP)
         12                           INTEGER*4 MEBOUN,NEBOUN,NPBOUN,
         13                          *          LPBOUN(NPBOUN),LEBOUN(2,MEBOUN)
         14                           INTEGER*4 MDOM,NDOM,MBPDOM
         15                           INTEGER*4 LDOM(MDOM),NBPDOM(MDOM),
         16                          *          IPSLF(MBPDOM,MDOM),IPSND(MBPDOM,MDOM)
         17                           REAL*4    XPBOUN(NPBOUN),YPBOUN(NPBOUN),ZPBOUN(NPBOUN)
         18                           INTEGER*4 IWRK(NP)
         19                           REAL*4    WRK01(NP),WRK02(NP),WRK03(NP),
         20                          *          WRK04(NP),WRK05(NP),WRK06(NP),
         21                          *          RX(0:N2,NE),RY(0:N2,NE)
         22                           INTEGER*4 IUT6,IUT0,IERR
         23                     C
         24                           INTEGER*4 MLST,IERRA,IP,IBE,IBP,
         25                          *          IETYPE,IE,IS,NNPS,I,IDIM,MAXBUF
         26                           REAL*4    ABSNOR,EPSA
         27                     C
         28                           MAXBUF = NE*(N2+1)
         29                           EPSA=1.0E-10
         30                     C
         31                     C
         32                     C EXTRACT COUPLING BOUNDARY SURFACES, CALCULATE THEIR NORMAL VECTORS
         33                     C AND ASSIGN SURFACE NORMAL VECTORS TO COUPLING NODES
         34                     C
         35                     C
         36                           WRITE(IUT6,*)
         37                           WRITE(IUT6,*) ' SRFNVX: EXTRACTING B.C. SURFACES,'
         38                           WRITE(IUT6,*) '        CALCULATING B.C. SURFACE NORMALS AND'
         39                           WRITE(IUT6,*) '        ASSIGNING SURFACE NORMAL TO B.C. NODE'
         40                     C
         41                           MLST   = 2
         42                           CALL SRFEXX(MEBOUN,MLST,NE,NP,N2,NEX,NS,NSP,N2D,
         43                          *            LPBOUN,NPBOUN,LOCAL,NODE,
         44                          *            LEBOUN,NEBOUN,NP,IWRK,IUT0,IERR)
         45                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
         46     1                     IF(IERRA.NE.0) THEN
         47     1                         IERR=IERRA
         48     1                         RETURN
         49     1                     ENDIF
         50                     C
         51                           CALL CSIN3X(LOCAL,X,Y,Z,NODE,NE,NP,N2,NEX,NS,NSP,
         52                          *            LEBOUN,NEBOUN,WRK01,WRK02,WRK03,WRK04)
         53                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1143
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK06, WRK05, WRK04, (unknown)
                              <<< Loop-information  End >>>
         54     1  pp   2v            DO 1000 IP=1,NP
         55     1   p   2v                WRK04(IP) = 0.E0
         56     1   p   2v                WRK05(IP) = 0.E0
         57     1   p   2v                WRK06(IP) = 0.E0
         58     1   p   2v       1000 CONTINUE
         59                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LOCAL, (unknown)
                              <<< Loop-information  End >>>
         60     1                     DO 1100 IBE = 1 , NEBOUN
         61     1                         IE = LEBOUN(1,IBE)
         62     1                         IS = LEBOUN(2,IBE)
         63     2                         IF(     NODE(8,IE).GE.1) THEN ! HEX
         64     2                            IETYPE = 4
         65     2                         ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         66     2                            IETYPE = 3
         67     2                         ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         68     2                            IETYPE = 2
         69     2                         ELSE                          ! TET
         70     2                            IETYPE = 1
         71     2                         END IF
         72     2                         IF(LOCAL(4,IS,IETYPE).GE.1) THEN ! QUADRILATERAL
         73     2                            NNPS = 4
         74     2                         ELSE                             ! TRIANGLE
         75     2                            NNPS = 3
         76     2                         ENDIF
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 696
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 1.62, ITR: 128, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LOCAL, (unknown)
                              <<< Loop-information  End >>>
         77     2   m   2s                DO 1200 I = 1 , NNPS
         78     2   p   2v                    IP = NODE(LOCAL(I,IS,IETYPE),IE)
         79     2   m   2v                    WRK04(IP) = WRK04(IP)+WRK01(IBE)
         80     2   s   2s                    WRK05(IP) = WRK05(IP)+WRK02(IBE)
         81     2   s   2s                    WRK06(IP) = WRK06(IP)+WRK03(IBE)
         82     2   p   2v       1200     CONTINUE
         83     1                1100 CONTINUE
         84                     C
         85                           IDIM = 3
         86                           CALL DDCOMX(IPART,IDIM,LDOM,NBPDOM,NDOM,
         87                          *            IPSLF,IPSND,MBPDOM,WRK04,WRK05,WRK06,NP,
         88                          *            IUT0,IERR,RX,RY,MAXBUF)
         89                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
         90     1                     IF(IERRA.NE.0) THEN
         91     1                         IERR=IERRA
         92     1                         RETURN
         93     1                     ENDIF
         94                     C
         95                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 276
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.19, ITR: 160, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBOUN, ZPBOUN, YPBOUN, XPBOUN
                              <<<      (unknown)
                              <<< Loop-information  End >>>
         96     1  pp    v            DO IBP = 1 , NPBOUN
         97     1   p    v                IP = LPBOUN(IBP)
         98     1   p    v                ABSNOR = SQRT(WRK04(IP)**2+WRK05(IP)**2+WRK06(IP)**2+EPSA)
         99     1   p    v                XPBOUN(IBP) = WRK04(IP)/ABSNOR
        100     1   p    v                YPBOUN(IBP) = WRK05(IP)/ABSNOR
        101     1   p    v                ZPBOUN(IBP) = WRK06(IP)/ABSNOR
        102     1   p    v            ENDDO
        103                     C
        104                           RETURN
        105                           END

 Diagnostic messages: program name(SRFNVX)
   jwd8220o-i  "srfnvx.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "srfnvx.f", line 54: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "srfnvx.f", line 54: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "srfnvx.f", line 54: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "srfnvx.f", line 54: ループを展開数2回でアンローリングしました。
   jwd5005p-i  "srfnvx.f", line 77: このDOループを部分的に並列化しました。(名前:I)
   jwd6001s-i  "srfnvx.f", line 77: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "srfnvx.f", line 77: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "srfnvx.f", line 77: ループの繰返し数が128回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "srfnvx.f", line 78: 多項式の演算順序を変更しました。
   jwd5209p-i  "srfnvx.f", line 79: 配列'WRK04'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "srfnvx.f", line 80: 配列'WRK05'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6208s-i  "srfnvx.f", line 80: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループはSIMD化できません。(名前:WRK04)
   jwd6208s-i  "srfnvx.f", line 80: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループはSIMD化できません。(名前:WRK05)
   jwd5209p-i  "srfnvx.f", line 81: 配列'WRK06'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6208s-i  "srfnvx.f", line 81: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループはSIMD化できません。(名前:WRK06)
   jwd5001p-i  "srfnvx.f", line 96: このDOループを並列化しました。(名前:IBP)
   jwd6001s-i  "srfnvx.f", line 96: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "srfnvx.f", line 96: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "srfnvx.f", line 96: ループの繰返し数が160回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "srfnvx.f", line 98: 多項式の演算順序を変更しました。
   jwd8206o-i  "srfnvx.f", line 99: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "srfnvx.f", line 100: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "srfnvx.f", line 101: 除算を逆数の乗算に変更しました。

 Procedure information
   Lines      : 105
   Statements : 73
   Stack(byte): 2208
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 105
   Total statements : 73
   Total stack(byte): 2208
   Total prefetch num: 0

