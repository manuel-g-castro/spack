
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:00 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : extrfn.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "EXTRFN"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE EXTRFN(NGRID,NLAY1,NLAY2,IRFBOX,
          2                          *                  ME,N2,NE,NP,NODE,X,Y,Z,
          3                          *                  NPBODY,LPBODY,NPINLT,LPINLT,NPTGT,LPTGT,
          4                          *                  XRFMIN,YRFMIN,ZRFMIN,XRFMAX,YRFMAX,ZRFMAX,
          5                          *                  LERFN,LERFN2,LPRFN,LEACNV,
          6                          *                  NE1,NE2,NDORG,NODEBK,
          7                          *                  AWRK,IPART,NDOM,MBPDOM,LDOM,NBPDOM,
          8                          *                  IPSLF,IPSND,RX,RY,MAXBUF,
          9                          *                  IUT0,IERR)
         10                     C
         11                           IMPLICIT NONE
         12                     C
         13                           INTEGER*4 NGRID,NLAY1,NLAY2,IRFBOX
         14                           INTEGER*4 ME,N2,NE,NP,NODE(N2,NE)
         15                           INTEGER*4 NPBODY,NPINLT,NPTGT
         16                           INTEGER*4 LPBODY(NPBODY),LPINLT(NPINLT),LPTGT(NPTGT)
         17                           REAL*8    X(NP),Y(NP),Z(NP)
         18                           REAL*4    XRFMIN,YRFMIN,ZRFMIN,XRFMAX,YRFMAX,ZRFMAX
         19                           INTEGER*4 LERFN(NE),LPRFN(NP),LERFN2(NE),LEACNV(ME)
         20                           INTEGER*4 IPART,NDOM,MBPDOM
         21                           INTEGER*4 LDOM(NDOM),NBPDOM(NDOM),
         22                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM),
         23                          *          RX(ME*8),RY(ME*8)
         24                           INTEGER*4 MAXBUF,IUT0,IERR
         25                           REAL*4    AWRK(NP)
         26                     C     OUT
         27                           INTEGER*4 NE1,NE2
         28                           INTEGER*4 NDORG(NE*8),NODEBK(8,NE)
         29                     
         30                     C     WORK
         31                           INTEGER*4 I,J,IE,IP,IBP,IDUM,IEBUF,IER,NDUM,NNPE
         32                           REAL*4    XP,YP,ZP
         33                           CHARACTER*60 ERMSGC
         34                          & /' ## SUBROUTINE EXTRFN: ERROR OCCURED             ; RETURNED' /
         35                           CHARACTER*60 ERMSG1
         36                          & /' ## SUBROUTINE EXTRFN: FAILED TO REORDER NODE TBL; RETURNED' /
         37                     C
         38                     CC
         39                     CCHY[1] MAKE ELEMENT LIST TO BE REFINED
         40                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LERFN2, LERFN
                              <<< Loop-information  End >>>
         41     1  pp   2v            DO 1000 IE=1,NE
         42     1   p   2v               LERFN (IE)=0
         43     1   p   2v               LERFN2(IE)=0
         44     1   p   2v       1000 CONTINUE
         45                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN
                              <<< Loop-information  End >>>
         46     1  pp   4v            DO 1100 IP=1,NP
         47     1   p   4v               LPRFN(IP)=0
         48     1   p   4v       1100 CONTINUE
         49                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBODY
                              <<< Loop-information  End >>>
         50     1   s   4v            DO 1200 IBP=1,NPBODY
         51     1   p   4v               IP=LPBODY(IBP)
         52     1   m   4v               LPRFN(IP)=1
         53     1   p   4v       1200 CONTINUE
         54                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEACNV
                              <<< Loop-information  End >>>
         55     1  pp   4v            DO 1300 IE=1,ME
         56     1   p   4v               LEACNV(IE)=0
         57     1   p   4v       1300 CONTINUE
         58                     C
         59                     CC
         60                     CC    // GLOBAL REFINE : NGRID = -1 //
         61                     CC
         62     1                     IF(NGRID.EQ.-1) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LERFN
                              <<< Loop-information  End >>>
         63     2  pp   4v               DO 1500 IE=1,NE
         64     2   p   4v                   LERFN(IE)=1
         65     2   p   4v       1500    CONTINUE
         66     1                        GOTO 2950
         67     1                     ENDIF
         68                     C
         69                     CC
         70                     CC    // LOCAL REFINE : NGRID > 0 OR NGRID = -2 //
         71                     CC
         72                     CC
         73                     C     << FOR LERFN >>
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN, AWRK
                              <<< Loop-information  End >>>
         74     1                     DO 2000 J=1,NLAY1
         75     1               CC
         76     1               CC    FIND ELEMENTS ATTACHED TO REFINE BOUNDARY NODE
         77     1               CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 3
                              <<< Loop-information  End >>>
         78     2  pp                    DO 2100 IE=1,NE
         79     2   p                       IF(LERFN(IE).EQ.1) GOTO 2100
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
         80     3   p                       DO 2200 I=1,N2
         81     3   p                          IP=NODE(I,IE)
         82     3   p                          IF(IP.EQ.0)        GOTO 2200
         83     3   p                          IF(LPRFN(IP).EQ.0) GOTO 2200
         84     3   p                          LERFN(IE)=1
         85     3   p                          GOTO 2100
         86     3   p            2200       CONTINUE
         87     2   p            2100    CONTINUE
         88     1               CC
         89     1               CC    UPDATE REFINE BOUNDARY NODE
         90     1               CC
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
         91     2                        DO 2300 IE=1,NE
         92     2                           IF(LERFN(IE).EQ.0) GOTO 2300
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.25, ITR: 320, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
         93     3   s   2v                  DO 2400 I=1,N2
         94     3   p   2v                     IP=NODE(I,IE)
         95     3   p   2v                     IF(IP.EQ.0) GOTO 2400
         96     3   m   2v                     LPRFN(IP)=1
         97     3   p   2v       2400       CONTINUE
         98     2                2300    CONTINUE
         99     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 843
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.33, ITR: 384, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN, AWRK
                              <<< Loop-information  End >>>
        100     2  pp   2v               DO 2500 IP=1,NP
        101     2   p   2v                  AWRK(IP)=FLOAT(LPRFN(IP))
        102     2   p   2v       2500    CONTINUE
        103     1               C
        104     1                        IDUM=1
        105     1                        CALL DDCOMX(IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
        106     1                    *               AWRK,AWRK,AWRK,NP,IUT0,IERR,RX,RY,MAXBUF)
        107     2                        IF(IERR.NE.0) THEN
        108     2                           WRITE(IUT0,*)
        109     2                           WRITE(IUT0,*) ERMSGC
        110     2                           RETURN
        111     2                        ENDIF
        112     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 160, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AWRK, LPRFN
                              <<< Loop-information  End >>>
        113     2  pp   2v               DO 2600 IP=1,NP
        114     3   p   2v                  IF (AWRK(IP).GT.0.0) THEN
        115     3   p   2v                     LPRFN(IP)=1
        116     3   p   2v                  ELSE
        117     3   p   2v                     LPRFN(IP)=0
        118     3   p   2v                  ENDIF
        119     2   p   2v       2600    CONTINUE
        120     1               C
        121     1                2000 CONTINUE
        122                     C
        123                           IF (NGRID.NE.-2) GOTO 2750
        124                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN
                              <<< Loop-information  End >>>
        125     1  pp   4v            DO 2007 IP=1,NP
        126     1   p   4v               LPRFN(IP)=0
        127     1   p   4v       2007 CONTINUE
        128                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPTGT
                              <<< Loop-information  End >>>
        129     1   s   4v            DO 2008 IBP=1,NPTGT
        130     1   p   4v               IP=LPTGT(IBP)
        131     1   m   4v               LPRFN(IP)=1
        132     1   p   4v       2008 CONTINUE
        133                     C
        134                     C     << FOR LERFN2 (NGRID = -2)>>
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN, AWRK
                              <<< Loop-information  End >>>
        135     1                     DO 2010 J=1,NLAY2
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 3
                              <<< Loop-information  End >>>
        136     2  pp                    DO 2110 IE=1,NE
        137     2   p                       IF(LERFN2(IE).EQ.1) GOTO 2110
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        138     3   p                       DO 2210 I=1,N2
        139     3   p                          IP=NODE(I,IE)
        140     3   p                          IF(IP.EQ.0)        GOTO 2210
        141     3   p                          IF(LPRFN(IP).EQ.0) GOTO 2210
        142     3   p                          LERFN2(IE)=1
        143     3   p                          GOTO 2110
        144     3   p            2210       CONTINUE
        145     2   p            2110    CONTINUE
        146     1               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        147     2                        DO 2310 IE=1,NE
        148     2                           IF(LERFN2(IE).EQ.0) GOTO 2310
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.25, ITR: 320, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        149     3   s   2v                  DO 2410 I=1,N2
        150     3   p   2v                     IP=NODE(I,IE)
        151     3   p   2v                     IF(IP.EQ.0) GOTO 2410
        152     3   m   2v                     LPRFN(IP)=1
        153     3   p   2v       2410       CONTINUE
        154     2                2310    CONTINUE
        155     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 843
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.33, ITR: 384, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPRFN, AWRK
                              <<< Loop-information  End >>>
        156     2  pp   2v               DO 2510 IP=1,NP
        157     2   p   2v                  AWRK(IP)=FLOAT(LPRFN(IP))
        158     2   p   2v       2510    CONTINUE
        159     1               C
        160     1                        IDUM=1
        161     1                        CALL DDCOMX(IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
        162     1                    *               AWRK,AWRK,AWRK,NP,IUT0,IERR,RX,RY,MAXBUF)
        163     2                        IF(IERR.NE.0) THEN
        164     2                           WRITE(IUT0,*)
        165     2                           WRITE(IUT0,*) ERMSGC
        166     2                           RETURN
        167     2                        ENDIF
        168     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 160, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AWRK, LPRFN
                              <<< Loop-information  End >>>
        169     2  pp   2v               DO 2610 IP=1,NP
        170     3   p   2v                  IF (AWRK(IP).GT.0.0) THEN
        171     3   p   2v                     LPRFN(IP)=1
        172     3   p   2v                  ELSE
        173     3   p   2v                     LPRFN(IP)=0
        174     3   p   2v                  ENDIF
        175     2   p   2v       2610    CONTINUE
        176     1               C
        177     1                2010 CONTINUE
        178                     C
        179                      2750 CONTINUE
        180                     C
        181                           IF (IRFBOX.EQ.0) GOTO 2850
        182                     C
        183                     C     << ADD ELEMENTS IN BOX TO BE REFINED >>
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        184     1  pp                 DO 2800 IE=1, NE
        185     1   p                    XP=0.0E0
        186     1   p                    YP=0.0E0
        187     1   p                    ZP=0.0E0
        188     2   p                    IF(     NODE(8,IE).GE.1)THEN
        189     2   p                       NNPE=8              ! Hex
        190     2   p                    ELSE IF(NODE(6,IE).GE.1)THEN
        191     2   p                       NNPE=6              ! Prism
        192     2   p                    ELSE IF(NODE(5,IE).GE.1)THEN
        193     2   p                       NNPE=5              ! Pyramid
        194     2   p                    ELSE
        195     2   p                       NNPE=4              ! Tetra
        196     2   p                    END IF
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 1.40, ITR: 72, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        197     2   p   3v               DO 2810 I=1, NNPE
        198     2   p   3v                  XP=XP+REAL(X(NODE(I,IE))/FLOAT(NNPE))
        199     2   p   3v                  YP=YP+REAL(Y(NODE(I,IE))/FLOAT(NNPE))
        200     2   p   3v                  ZP=ZP+REAL(Z(NODE(I,IE))/FLOAT(NNPE))
        201     2   p   3v       2810    CONTINUE
        202     2   p                    IF(XP.GT.XRFMIN.AND.XP.LT.XRFMAX.AND.
        203     2                    *      YP.GT.YRFMIN.AND.YP.LT.YRFMAX.AND.
        204     2                    *      ZP.GT.ZRFMIN.AND.ZP.LT.ZRFMAX) THEN
        205     2   p                       LERFN(IE)=1
        206     2   p                    ENDIF
        207     1   p            2800 CONTINUE
        208                     C
        209                      2850 CONTINUE
        210                     C
        211                     C     << MERGE LERFN >>
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1231
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.50, ITR: 288, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LERFN, LERFN2
                              <<< Loop-information  End >>>
        212     1  pp   2v            DO 2900 IE=1, NE
        213     1   p   2v               IF(LERFN2(IE).GT.0) LERFN(IE)=1
        214     1   p   2v       2900 CONTINUE
        215                     C
        216                      2950 CONTINUE
        217                     C
        218                     CC
        219                     CCHY [2] COUNT NUM. OF ELEMENTS TO BE REFINERD
        220                     CC
        221                           NE1=0
        222                           IER=0
        223     1                     DO 3000 IE=1,NE
        224     1                        IF(LERFN(IE).EQ.0) GOTO 3000
        225     1                        NE1=NE1+1
        226     1               C
        227     2                        IF(NODE(6,IE).EQ.0.AND.NODE(5,IE).NE.0) THEN
        228     2                            NDUM=10
        229     2                            ELSE
        230     2                            NDUM=8
        231     2                        ENDIF
        232     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1778
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEACNV
                              <<< Loop-information  End >>>
        233     2  pp   4v               DO 3100 I=1,NDUM
        234     2   p   4v                  IER=IER+1
        235     2   p   4v                  LEACNV(IER)=IE
        236     2   p   4v       3100    CONTINUE
        237     1               C
        238     1                3000 CONTINUE
        239                     C
        240                     CC
        241                     CCHY [3] REORDER NODE TABLE
        242                     CC
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NDORG
                              <<< Loop-information  End >>>
        243     1       4             DO 4000 IE=1,NE
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1778
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        244     2   s   4v               DO 4100 I=1,8
        245     2   p   4v                  NDORG((IE-1)*8+I)=0
        246     2   p   4v       4100    CONTINUE
        247     1       4        4000 CONTINUE
        248                     CC
        249                     CC    SET NODE TABLE AT ELEMENTS TO BE REFINED
        250                     CC
        251                           IEBUF=0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LERFN
                              <<< Loop-information  End >>>
        252     1       2             DO 4200 IE=1,NE
        253     1       2                IF(LERFN(IE).EQ.0) GOTO 4200
        254     1       2                IEBUF=IEBUF+1
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1067
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        255     2   s   2v               DO 4300 I=1,8
        256     2   p   2v                  NDORG((IEBUF-1)*8+I)=NODE(I,IE)
        257     2   p   2v       4300    CONTINUE
        258     1       2        4200 CONTINUE
        259                     C
        260     1                     IF(IEBUF.NE.NE1) THEN
        261     1                        WRITE(IUT0,*)
        262     1                        WRITE(IUT0,*) ERMSG1
        263     1                        IERR=1
        264     1                        RETURN
        265     1                     ENDIF
        266                     CC
        267                     CC    SET NODE TABLE AT ELEMENTS NOT TO BE REFINED
        268                     CC
        269                           NE2=0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LERFN
                              <<< Loop-information  End >>>
        270     1                     DO 4400 IE=1,NE
        271     1                        IF(LERFN(IE).EQ.1) GOTO 4400
        272     1                        NE2=NE2+1
        273     1                        IER=IER+1
        274     1                        LEACNV(IER)=IE
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 843
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        275     2   s    v               DO 4500 I=1,8
        276     2   p    v                  NDORG((NE1+NE2-1)*8+I)=NODE(I,IE)
        277     2   p    v                  NODEBK(I,NE2)=NODE(I,IE)
        278     2   p    v       4500    CONTINUE
        279     1                4400 CONTINUE
        280                     C
        281     1                     IF(NE1+NE2.NE.NE) THEN
        282     1                        WRITE(IUT0,*)
        283     1                        WRITE(IUT0,*) ERMSG1
        284     1                        IERR=1
        285     1                        RETURN
        286     1                     ENDIF
        287                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 75
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 2.75, ITR: 112, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NDORG
                              <<< Loop-information  End >>>
        288     1  pp   2             DO 4600 IE=1,NE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        289     2   p   2v               DO 4700 I=1,8
        290     2   p   2v                  NODE(I,IE)=NDORG((IE-1)*8+I)
        291     2   p   2v       4700    CONTINUE
        292     1   p   2        4600 CONTINUE
        293                     C
        294                           RETURN
        295                           END

 Diagnostic messages: program name(EXTRFN)
   jwd8220o-i  "extrfn.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "extrfn.f", line 16: この仮引数'LPINLT'は、副プログラム中で使用されていません。
   jwd5001p-i  "extrfn.f", line 41: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "extrfn.f", line 41: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "extrfn.f", line 41: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 41: ループを展開数2回でアンローリングしました。
   jwd5001p-i  "extrfn.f", line 46: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 46: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "extrfn.f", line 46: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 46: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "extrfn.f", line 50: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "extrfn.f", line 50: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 50: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "extrfn.f", line 52: 配列'LPRFN'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "extrfn.f", line 55: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "extrfn.f", line 55: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "extrfn.f", line 55: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 55: ループを展開数4回でアンローリングしました。
   jwd5001p-i  "extrfn.f", line 63: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "extrfn.f", line 63: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "extrfn.f", line 63: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 63: ループを展開数4回でアンローリングしました。
   jwd5131p-i  "extrfn.f", line 74: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5001p-i  "extrfn.f", line 78: このDOループを並列化しました。(名前:IE)
   jwd5131p-i  "extrfn.f", line 80: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "extrfn.f", line 80: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "extrfn.f", line 80: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5208p-i  "extrfn.f", line 91: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LPRFN)
   jwd6001s-i  "extrfn.f", line 93: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "extrfn.f", line 93: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 93: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "extrfn.f", line 96: 配列'LPRFN'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "extrfn.f", line 100: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 100: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "extrfn.f", line 100: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 100: ループの繰返し数が384回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "extrfn.f", line 113: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 113: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "extrfn.f", line 113: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 113: ループの繰返し数が160回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "extrfn.f", line 125: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 125: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "extrfn.f", line 125: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 125: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "extrfn.f", line 129: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "extrfn.f", line 129: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 129: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "extrfn.f", line 131: 配列'LPRFN'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5131p-i  "extrfn.f", line 135: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5001p-i  "extrfn.f", line 136: このDOループを並列化しました。(名前:IE)
   jwd5131p-i  "extrfn.f", line 138: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "extrfn.f", line 138: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "extrfn.f", line 138: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5208p-i  "extrfn.f", line 147: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LPRFN)
   jwd6001s-i  "extrfn.f", line 149: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "extrfn.f", line 149: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 149: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "extrfn.f", line 152: 配列'LPRFN'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "extrfn.f", line 156: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 156: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "extrfn.f", line 156: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 156: ループの繰返し数が384回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "extrfn.f", line 169: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "extrfn.f", line 169: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "extrfn.f", line 169: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 169: ループの繰返し数が160回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "extrfn.f", line 184: このDOループを並列化しました。(名前:IE)
   jwd6004s-i  "extrfn.f", line 197: リダクション演算を含むDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "extrfn.f", line 197: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 197: ループの繰返し数が72回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8206o-i  "extrfn.f", line 198: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "extrfn.f", line 199: 除算を逆数の乗算に変更しました。
   jwd8208o-i  "extrfn.f", line 199: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8206o-i  "extrfn.f", line 200: 除算を逆数の乗算に変更しました。
   jwd8208o-i  "extrfn.f", line 200: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd5001p-i  "extrfn.f", line 212: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "extrfn.f", line 212: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "extrfn.f", line 212: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 212: ループの繰返し数が288回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5202p-i  "extrfn.f", line 223: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NE1)
   jwd5202p-i  "extrfn.f", line 223: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:IER)
   jwd5208p-i  "extrfn.f", line 223: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LEACNV)
   jwd5001p-i  "extrfn.f", line 233: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "extrfn.f", line 233: このDOループをSIMD化しました。(名前:I)
   jwd8663o-i  "extrfn.f", line 233: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 233: ループを展開数4回でアンローリングしました。
   jwd5208p-i  "extrfn.f", line 243: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NDORG)
   jwd8663o-i  "extrfn.f", line 243: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "extrfn.f", line 243: ループを展開数4回でアンローリングしました。
   jwd5143p-i  "extrfn.f", line 244: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6001s-i  "extrfn.f", line 244: このDOループをSIMD化しました。(名前:I)
   jwd5202p-i  "extrfn.f", line 252: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:IEBUF)
   jwd5208p-i  "extrfn.f", line 252: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NDORG)
   jwd5208p-i  "extrfn.f", line 252: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:IEBUF)
   jwd8670o-i  "extrfn.f", line 252: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "extrfn.f", line 252: ループを展開数2回でアンローリングしました。
   jwd5143p-i  "extrfn.f", line 255: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6001s-i  "extrfn.f", line 255: このDOループをSIMD化しました。(名前:I)
   jwd5202p-i  "extrfn.f", line 270: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NE2)
   jwd5202p-i  "extrfn.f", line 270: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:IER)
   jwd5208p-i  "extrfn.f", line 270: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NODEBK)
   jwd5208p-i  "extrfn.f", line 270: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NDORG)
   jwd5208p-i  "extrfn.f", line 270: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LEACNV)
   jwd5208p-i  "extrfn.f", line 270: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:IER)
   jwd8670o-i  "extrfn.f", line 270: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd5143p-i  "extrfn.f", line 275: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6001s-i  "extrfn.f", line 275: このDOループをSIMD化しました。(名前:I)
   jwd5001p-i  "extrfn.f", line 288: このDOループを並列化しました。(名前:IE)
   jwd8204o-i  "extrfn.f", line 288: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "extrfn.f", line 288: ループの繰返し数が112回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd6001s-i  "extrfn.f", line 289: このDOループをSIMD化しました。(名前:I)

 Procedure information
   Lines      : 295
   Statements : 208
   Stack(byte): 6496
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 295
   Total statements : 208
   Total stack(byte): 6496
   Total prefetch num: 0

