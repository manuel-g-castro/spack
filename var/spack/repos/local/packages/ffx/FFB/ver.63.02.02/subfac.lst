
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:33 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : subfac.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SIZF01"
  (line-no.)(nest)(optimize)
          1                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          2                     CC
          3                     CC    SUBROUTINE FOR COUNTING MAXMUM NUMBER OF INTER-CONNECT BOUNDARY FACE
          4                     CC
          5                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
          6                           SUBROUTINE SIZF01(IPART,NE,NP,N2,NSP,NS,NODE,LOCAL,
          7                          *                  MDOM,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,
          8                          *                  MBFDOM,LWRK01,IUT6,IUT0,IERR)
          9                     C
         10                           IMPLICIT NONE
         11                     C
         12                     C     [INPUT]
         13                           INTEGER*4 IPART,NE,NP,N2,NSP,NS
         14                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4)
         15                           INTEGER*4 MDOM,NDOM,MBPDOM
         16                           INTEGER*4 LDOM(MDOM),NBPDOM(MDOM),IPSLF(MBPDOM,MDOM)
         17                     C
         18                     C     [IN-OUTPUT]
         19                           INTEGER*4 MBFDOM
         20                           INTEGER*4 IUT6,IUT0,IERR
         21                     C
         22                     C     [WORK]
         23                           INTEGER*4 LWRK01(NP)
         24                     C
         25                     C     [LOCAL]
         26                           INTEGER*4 NFSND,IBUF
         27                           INTEGER*4 IP,IP1,IP2,IP3,IP4,JBC
         28                           INTEGER*4 IE,IETYPE,NLS,IS
         29                           INTEGER*4 IBP,IDOM,NUM1,IERRA,LERR(2)
         30                           DATA NFSND /0/
         31                           DATA NUM1  /1/
         32                     C
         33                           CHARACTER*60 ERMSGC
         34                          * / ' ## SUBROUTINE SIZF01: ERROR OCCURED            ; RETURNED' /
         35                     C
         36                     CC
         37                     CCHY [1] COUNT MAXMUM NUMBER OF INTER-CONNECT BOUNDARY FACE
         38                     CC
         39                           MBFDOM=0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IPSLF
                              <<< Loop-information  End >>>
         40     1                     DO 1000 IDOM=1,NDOM
         41     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWRK01
                              <<< Loop-information  End >>>
         42     2  pp   4v               DO 1100 IP=1,NP
         43     2   p   4v                  LWRK01(IP)=0
         44     2   p   4v       1100    CONTINUE
         45     1               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.25, ITR: 192, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IPSLF
                              <<< Loop-information  End >>>
         46     2   s   2v               DO 1200 IBP=1,NBPDOM(IDOM)
         47     2   p   2v                  IP=IPSLF(IBP,IDOM)
         48     2   m   2v                  LWRK01(IP)=IBP
         49     2   p   2v       1200    CONTINUE
         50     1               C
         51     1                        NFSND=0
         52     2                        DO 1300 IE=1,NE
         53     3                           IF(     NODE(8,IE).GE.1) THEN ! HEX
         54     3                              IETYPE=4
         55     3                              NLS=6
         56     3                           ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         57     3                              IETYPE=3
         58     3                              NLS=5
         59     3                           ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         60     3                              IETYPE=2
         61     3                              NLS=5
         62     3                           ELSE                          ! TET
         63     3                              IETYPE=1
         64     3                              NLS=4
         65     3                           ENDIF
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 140
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    UNSWITCHING
                              <<< Loop-information  End >>>
         66     3  pp    v                  DO 1400 IS=1,NLS
         67     3               C
         68     3   p    v                     IP1=NODE(LOCAL(1,IS,IETYPE),IE)
         69     3   p    v                     IP2=NODE(LOCAL(2,IS,IETYPE),IE)
         70     3   p    v                     IP3=NODE(LOCAL(3,IS,IETYPE),IE)
         71     3               C
         72     4   p    v                     IF ((IETYPE.EQ.1            ).OR. ! TRI
         73     4                    *             (IETYPE.EQ.2.AND.IS.LE.4).OR.
         74     4                    *             (IETYPE.EQ.3.AND.IS.LE.2)) THEN
         75     4   p    v                        IP4=0
         76     4   p    m                        JBC=LWRK01(IP1)*LWRK01(IP2)*LWRK01(IP3)
         77     4   p    v                     ELSE                             ! QUAD
         78     4   p    m                        IP4=NODE(LOCAL(4,IS,IETYPE),IE)
         79     4   p    v                        JBC=LWRK01(IP1)*LWRK01(IP2)*LWRK01(IP3)*LWRK01(IP4)
         80     4   p    s                     ENDIF
         81     3               C
         82     3   p    m                     IF (JBC.EQ.0) GOTO 1400
         83     3               C
         84     3   p    v                     NFSND=NFSND+1
         85     3               C
         86     3   p    v       1400       CONTINUE
         87     2                1300    CONTINUE
         88     1                        MBFDOM=MAX(MBFDOM,NFSND)
         89     1               C
         90     1                1000 CONTINUE
         91                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWRK01
                              <<< Loop-information  End >>>
         92     1  pp   4v            DO 1500 IDOM=1,NDOM
         93     1   p   4v               LWRK01(IDOM)=1
         94     1   p   4v       1500 CONTINUE
         95                     C
         96                           CALL DDMAXI(MBFDOM,IBUF,IERR)
         97                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
         98                           IF(IERRA.NE.0) GOTO 9999
         99                           MBFDOM=IBUF
        100                     C
        101                           RETURN
        102                     C
        103                      9999 CONTINUE
        104                           WRITE(IUT0,*)
        105                           WRITE(IUT0,*) ERMSGC
        106                           IERR=1
        107                     C
        108                           RETURN
        109                           END

 Diagnostic messages: program name(SIZF01)
   jwd8220o-i  "subfac.f", line 6: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "subfac.f", line 16: この仮引数'LDOM'は、副プログラム中で使用されていません。
   jwd2006i-i  "subfac.f", line 29: この名前'LERR'は、宣言だけされていて引用されていません。
   jwd5202p-i  "subfac.f", line 40: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:MBFDOM)
   jwd5202p-i  "subfac.f", line 40: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NFSND)
   jwd5202p-i  "subfac.f", line 40: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:JBC)
   jwd5208p-i  "subfac.f", line 40: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LWRK01)
   jwd5001p-i  "subfac.f", line 42: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "subfac.f", line 42: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "subfac.f", line 42: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "subfac.f", line 42: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "subfac.f", line 46: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "subfac.f", line 46: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "subfac.f", line 46: ループの繰返し数が192回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "subfac.f", line 48: 配列'LWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5202p-i  "subfac.f", line 52: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NFSND)
   jwd5202p-i  "subfac.f", line 52: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:JBC)
   jwd8321o-i  "subfac.f", line 66: ループをループアンスイッチングしました。
   jwd5004p-i  "subfac.f", line 66: リダクション演算を含むDOループを並列化しました。(名前:IS)
   jwd6004s-i  "subfac.f", line 66: リダクション演算を含むDOループをSIMD化しました。(名前:IS)
   jwd6229s-i  "subfac.f", line 66: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8209o-i  "subfac.f", line 68: 多項式の演算順序を変更しました。
   jwd6202s-i  "subfac.f", line 76: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:JBC)
   jwd5001p-i  "subfac.f", line 92: このDOループを並列化しました。(名前:IDOM)
   jwd6001s-i  "subfac.f", line 92: このDOループをSIMD化しました。(名前:IDOM)
   jwd8663o-i  "subfac.f", line 92: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "subfac.f", line 92: ループを展開数4回でアンローリングしました。

 Procedure information
   Lines      : 109
   Statements : 71
   Stack(byte): 69168
   Prefetch num: 0

 External subroutine subprogram "CALAVC"
  (line-no.)(nest)(optimize)
        110                     C
        111                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        112                     CC
        113                     CC    SUBROUTINE FOR CALCULATING AREA VECTOR
        114                     CC
        115                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        116                           SUBROUTINE CALAVC(IE,IS,NE,NP,N2,NSP,NS,NODE,LOCAL,X,Y,Z,AVEC)
        117                     C
        118                           IMPLICIT NONE
        119                     C
        120                     C     [INPUT]
        121                           INTEGER*4 IE,IS,NE,NP,N2,NSP,NS
        122                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4)
        123                           REAL*8    X(NP),Y(NP),Z(NP)
        124                     C
        125                     C     [OUTPUT]
        126                           REAL*4 AVEC(4)
        127                     C
        128                     C     [LOCAL]
        129                           INTEGER*4 IETYPE,IA0,IA1,IB0,IB1
        130                           REAL*8    AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,CABS
        131                     C
        132     1                     IF(     NODE(8,IE).GE.1) THEN ! HEX
        133     1                        IETYPE=4
        134     1                     ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
        135     1                        IETYPE=3
        136     1                     ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
        137     1                        IETYPE=2
        138     1                     ELSE                          ! TET
        139     1                        IETYPE=1
        140     1                     ENDIF
        141     1                     IF(LOCAL(4,IS,IETYPE).GE.1) THEN ! QUAD
        142     1                        IA1=NODE(LOCAL(3,IS,IETYPE),IE)
        143     1                        IA0=NODE(LOCAL(1,IS,IETYPE),IE)
        144     1                        IB1=NODE(LOCAL(4,IS,IETYPE),IE)
        145     1                        IB0=NODE(LOCAL(2,IS,IETYPE),IE)
        146     1                     ELSE                             ! TRI
        147     1                        IA1=NODE(LOCAL(2,IS,IETYPE),IE)
        148     1                        IA0=NODE(LOCAL(1,IS,IETYPE),IE)
        149     1                        IB1=NODE(LOCAL(3,IS,IETYPE),IE)
        150     1                        IB0=NODE(LOCAL(1,IS,IETYPE),IE)
        151     1                     ENDIF
        152                     C
        153                           AX=X(IA1)-X(IA0)
        154                           AY=Y(IA1)-Y(IA0)
        155                           AZ=Z(IA1)-Z(IA0)
        156                     C
        157                           BX=X(IB1)-X(IB0)
        158                           BY=Y(IB1)-Y(IB0)
        159                           BZ=Z(IB1)-Z(IB0)
        160                     C
        161                           CX   = AY*BZ-AZ*BY
        162                           CY   = AZ*BX-AX*BZ
        163                           CZ   = AX*BY-AY*BX
        164                           CABS = SQRT(CX*CX+CY*CY+CZ*CZ)
        165                     C
        166                           AVEC(1)=REAL(CX/CABS   )
        167                           AVEC(2)=REAL(CY/CABS   )
        168                           AVEC(3)=REAL(CZ/CABS   )
        169                           AVEC(4)=REAL(0.5D0*CABS)
        170                     C
        171                           RETURN
        172                           END

 Procedure information
   Lines      : 63
   Statements : 44
   Stack(byte): 352
   Prefetch num: 0

 External subroutine subprogram "CALDVC"
  (line-no.)(nest)(optimize)
        173                     C
        174                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        175                     CC
        176                     CC    SUBROUTINE FOR CALCULATING DIRECTION VECTOR FROM DONNOR TO ACCEPTOR
        177                     CC
        178                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        179                           SUBROUTINE CALDVC(IE1,IE2,NE,NP,N2,NODE,X,Y,Z,DVEC)
        180                     C
        181                           IMPLICIT NONE
        182                     C
        183                     C     [INPUT]
        184                           INTEGER*4 IE1,IE2,NE,NP,N2
        185                           INTEGER*4 NODE(N2,NE)
        186                           REAL*8    X(NP),Y(NP),Z(NP)
        187                     C
        188                     C     [OUTPUT]
        189                           REAL*4 DVEC(3)
        190                     C
        191                     C     [LOCAL]
        192                           INTEGER*4 NNP,IP,I
        193                           REAL*8    AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,CABS
        194                     C
        195                           NNP=0
        196                           AX=0.0D0
        197                           AY=0.0D0
        198                           AZ=0.0D0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 534
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        199     1   s   fs            DO 1000 I=1,8
        200     1   p   fm               IP=NODE(I,IE1)
        201     1   p   fv               IF (IP.EQ.0) GOTO 1000
        202     1   p   fs               AX=AX+X(IP)
        203     1   p   fs               AY=AY+Y(IP)
        204     1   p   fs               AZ=AZ+Z(IP)
        205     1   p   fm               NNP=NNP+1
        206     1   p   fv       1000 CONTINUE
        207                           AX=AX/DBLE(NNP)
        208                           AY=AY/DBLE(NNP)
        209                           AZ=AZ/DBLE(NNP)
        210                     C
        211                           NNP=0
        212                           BX=0.0D0
        213                           BY=0.0D0
        214                           BZ=0.0D0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 534
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        215     1   s   fs            DO 1100 I=1,8
        216     1   p   fm               IP=NODE(I,IE2)
        217     1   p   fv               IF (IP.EQ.0) GOTO 1100
        218     1   p   fs               BX=BX+X(IP)
        219     1   p   fs               BY=BY+Y(IP)
        220     1   p   fs               BZ=BZ+Z(IP)
        221     1   p   fm               NNP=NNP+1
        222     1   p   fv       1100 CONTINUE
        223                           BX=BX/DBLE(NNP)
        224                           BY=BY/DBLE(NNP)
        225                           BZ=BZ/DBLE(NNP)
        226                     C
        227                           CX=BX-AX
        228                           CY=BY-AY
        229                           CZ=BZ-AZ
        230                           CABS=SQRT(CX*CX+CY*CY+CZ*CZ)
        231                     C
        232                           DVEC(1)=REAL(CX/CABS)
        233                           DVEC(2)=REAL(CY/CABS)
        234                           DVEC(3)=REAL(CZ/CABS)
        235                     C
        236                           RETURN
        237                           END

 Diagnostic messages: program name(CALDVC)
   jwd8220o-i  "subfac.f", line 179: 副作用の可能性のある最適化を行いました。
   jwd5143p-i  "subfac.f", line 199: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6229s-i  "subfac.f", line 199: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8203o-i  "subfac.f", line 199: ループをフルアンローリングしました。
   jwd5143p-i  "subfac.f", line 215: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6229s-i  "subfac.f", line 215: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8203o-i  "subfac.f", line 215: ループをフルアンローリングしました。
   jwd8209o-i  "subfac.f", line 230: 多項式の演算順序を変更しました。

 Procedure information
   Lines      : 65
   Statements : 47
   Stack(byte): 352
   Prefetch num: 0

 Total information
   Procedures       : 3
   Total lines      : 237
   Total statements : 162
   Total stack(byte): 69872
   Total prefetch num: 0

