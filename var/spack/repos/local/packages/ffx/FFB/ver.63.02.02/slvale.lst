
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:25 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : slvale.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SLVALE"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SLVALE(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
          2                          *                  MELM,ME,NELM,NE,NP,N1,N2,NEX,NS,NSP,N2D,NCRS,
          3                          *                  LOCAL,NODE,LTAB,NPP,IPCRS,
          4                          *                  XD,YD,ZD,X,Y,Z,
          5                          *                  UMESH,VMESH,WMESH,UMESH_P,VMESH_P,WMESH_P,EJ,
          6                          *                  NPBODY,NPMVB,LPBODY,LPMVB,UMVB,VMVB,WMVB,
          7                          *                  IALE,NMAXA,NMODE,NITRA,NLYNG,EPSA,EPSREA,RESA,
          8                          *                  STPWR,AOBJ,TOBJ,EYNG,IFLCPL,ITIME,ISTART,
          9                          *                  U000,DT,TIME,
         10                          *                  IPART,MDOM,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
         11                          *                  NUMIP,
         12                          *                  MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST,
         13                          *                  SNI,DNXI,DNYI,DNZI,
         14                          *                  SN,DNXYZ,E,EX,EY,EZ,EXX,EYY,EZZ,EXY,EYZ,EXZ,
         15                          *                  DELTA,
         16                          *                  EAP1,EAP2,EAP3,EBP,MEP,MP,IENP,JENP,NEP,
         17                          *                  NEBODY,NEHEAT,NSTET,NSPRD,NSWED,NSHEX,
         18                          *                  LEBODY,LEHEAT,SBODY,DXBODY,DYBODY,DZBODY,SHEAT,
         19                          *                  IFILTR,FILTER,IMODEL,JPRESS,NEWALL,LEWALL,
         20                          *                  NEAR,
         21                          *                  DSNEAR,NAVDYN,NPFREE,NPSLD2,LPFREE,LPSLD2,
         22                          *                  GAMDYN,APRS,APRS0,ATEST0,AAVER0,ATESPC,AAVEPC,
         23                     #ifdef RCAPCPL
         24                          *                  NPCPL,NDOF,LPCPL,BFCPL,XPCPL,YPCPL,ZPCPL,
         25                     #endif
         26                          *                  MPWLAD,NPWALL,NEWLAD,NPWLAD,LPWALL,XNWALL,
         27                          *                  YNWALL,ZNWALL,LEWLAD,LPWLAE,LPWLAD,DPWLAD,
         28                          *                  MAXBUF,MWRK,LWRK01,LWRK02,LWRK03,LEWRK,
         29                          *                  RX,RY,WRKN,
         30                          *                  WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,
         31                          *                  DWRK01,DWRK02,DWRK03,DWRK04,DWRK05,
         32                          *                  AWRK01,AWRK02,AWRK03,AWRK04,AWRK05,AWRK06,
         33                          *                  AWRK07,AWRK08,AWRK09,AWRK10,ACRS2,IWRTIM,
         34                     #ifdef cputime
         35                          *                  DTALE,TBUF7,TBUF8,TBUF9,
         36                     #endif
         37                          *                  MRSALE,IALEDB,ISTEP,IUTAL,IUT6,IUT0,IERR)
         38                     C
         39                           IMPLICIT NONE
         40                     C
         41                           INTEGER*4 MCOLOR,MCPART
         42                           INTEGER*4 NCOLOR,NCPART,LLOOP
         43                           INTEGER*4 MELM,ME,NELM,NE,NP,N1,N2,NEX,NS,NSP,N2D,NCRS
         44                           INTEGER*4 LOCAL,NODE,LTAB,NPP,IPCRS
         45                           REAL*8    XD(NP),YD(NP),ZD(NP)
         46                           REAL*4    X(NP),Y(NP),Z(NP),
         47                          *          UMESH,VMESH,WMESH,UMESH_P,VMESH_P,WMESH_P,EJ
         48                           INTEGER*4 NPBODY,NPMVB,LPBODY,LPMVB
         49                           REAL*4    UMVB,VMVB,WMVB
         50                     C
         51                           INTEGER*4 IALE,NMAXA,NMODE,NITRA,NLYNG
         52                           REAL*4    EPSA,EPSREA,RESA,STPWR,AOBJ,TOBJ,EYNG
         53                     CCHY_TMP
         54                           INTEGER*4 MRSALE,IALEDB,ISTEP,IUTAL
         55                     CCHY_TMP
         56                           INTEGER*4 IFLCPL,ITIME,ISTART
         57                           REAL*4    U000,DT,TIME
         58                           INTEGER*4 IPART,MDOM,NDOM,MBPDOM
         59                           INTEGER*4 LDOM,NBPDOM,IPSLF,IPSND,NUMIP
         60                     C
         61                     C     [INTEGRAL ELEMENT MATRICES]
         62                           INTEGER*4 MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST
         63                           REAL*4    SNI,DNXI,DNYI,DNZI,
         64                          *          SN,DNXYZ,E,EX,EY,EZ,EXX,EYY,EZZ,
         65                          *          EXY,EYZ,EXZ,DELTA
         66                           REAL*4    EAP1,EAP2,EAP3,EBP
         67                           INTEGER*4 IENP,JENP,NEP,MEP,MP
         68                           DIMENSION EAP1(N2,MEP,NP),EAP2(3,N2,MEP,NP),EAP3(6,N2,MEP,NP)
         69                           DIMENSION EBP(3,N2,MEP,NP)
         70                           DIMENSION IENP(MEP,MP),JENP(MEP,MP),NEP(MP)
         71                     C
         72                     C     [INTEGRAL ELEMENT VECTORS NEEDED]
         73                           INTEGER*4 NEBODY,NEHEAT,NSTET,NSPRD,NSWED,NSHEX
         74                           INTEGER*4 LEBODY,LEHEAT
         75                           REAL*4    SBODY,DXBODY,DYBODY,DZBODY,SHEAT
         76                     C
         77                     C     [COMPUTE ELEMENT FILTER WIDTH]
         78                           INTEGER*4 IFILTR
         79                           REAL*4    FILTER
         80                     C
         81                     C     [SEARCH NEAREST WALL SURFACE FOR ALL ELEMENTS]
         82                           INTEGER*4 IMODEL,JPRESS,NEWALL
         83                           INTEGER*4 LEWALL,NEAR,DSNEAR
         84                     C
         85                     C     [CAL. L.H.S. FOR PRS. EQ. AND DSM]
         86                           INTEGER*4 NAVDYN,NPFREE,NPSLD2
         87                           INTEGER*4 LPFREE,LPSLD2
         88                           REAL*4    GAMDYN,APRS,APRS0,ATEST0,AAVER0,ATESPC,AAVEPC
         89                     C
         90                     #ifdef RCAPCPL
         91                     C     [REVOCAP COUPLER: OBTAIN NODE LIST]
         92                           INTEGER*4 NPCPL,NDOF,LPCPL
         93                           REAL*8    BFCPL
         94                           REAL*4    XPCPL,YPCPL,ZPCPL
         95                     #endif
         96                     C
         97                     C     [SEARCHING WALL ADJACENT NODES]
         98                           INTEGER*4 MPWLAD,NPWALL,NEWLAD,NPWLAD
         99                           INTEGER*4 LPWALL,XNWALL,YNWALL,ZNWALL,
        100                          *          LEWLAD,LPWLAE,LPWLAD,DPWLAD
        101                     C
        102                     C     [WORK]
        103                           INTEGER*4 MAXBUF,MWRK
        104                           INTEGER*4 LWRK01,LWRK02,LWRK03,LEWRK
        105                           REAL*4    RX,RY,WRKN,
        106                          *          WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,
        107                          *          AWRK01,AWRK02,AWRK03,AWRK04,AWRK05,AWRK06,
        108                          *          AWRK07,AWRK08,AWRK09,AWRK10,ACRS2
        109                           REAL*8    DWRK01,DWRK02,DWRK03,DWRK04,DWRK05
        110                     C
        111                           INTEGER*4 IWRTIM
        112                     #ifdef cputime
        113                           REAL*4    DTALE(8),TBUF7,TBUF8,TBUF9
        114                     #endif
        115                           INTEGER*4 IUT6,IUT0,IERR
        116                     C
        117                     C     [LOCAL]
        118                           INTEGER*4 IP,IERRA
        119                           CHARACTER*10 BLANK / ' ' /
        120                           CHARACTER*60 ERMSGC
        121                          */' ## SUBROUTINE SLVALE: FATAL ERROR REPORT   ; RETURNED' /
        122                     C
        123                     C
        124                     C
        125                     #ifdef cputime
        126                           include 'mpif.h'
        127                     C     CALL CPU_TIME( TBUF7 )
        128                           TBUF7 = MPI_WTIME()
        129                           IF (IWRTIM.EQ.1) CALL CLTIME('ALE EQ.   :START',IUT6)
        130                     #endif
        131                     C
        132     1                     IF (IFLCPL.GE.1.AND.IALE.EQ.1) THEN
        133     1               #ifdef RCAPCPL
        134     1                        CALL ALE_MOVBC1(NP,NPBODY,LPBODY,NPMVB,UMVB,VMVB,WMVB,
        135     1                    *                   LPCPL,NPCPL,BFCPL,NDOF,U000,LWRK01,
        136     1                    *                   WRK01,AWRK01,
        137     1                    *                   ME,NE,IPART,N2,LDOM,NBPDOM,NDOM,
        138     1                    *                   IPSLF,IPSND,MBPDOM,NUMIP,RX,RY,
        139     1                    *                   IWRTIM,IUT0,IUT6,IERR)
        140     1               #endif
        141     1                     ELSE IF (IALE.EQ.2) THEN
        142     1                        CALL ALE_MOVBC2(NP,NPBODY,LPBODY,NPMVB,UMVB,VMVB,WMVB,
        143     1                    *                   NMODE,AOBJ,TOBJ,TIME,DT,X,Y,Z)
        144     1                     ELSE IF (IALE.EQ.3) THEN
        145     1                        CALL ALE_MOVBC3
        146     1                     ENDIF
        147                           CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        148     1                     IF(IERRA.NE.0) THEN
        149     1                        WRITE(IUT0,*) BLANK
        150     1                        WRITE(IUT0,*) ERMSGC
        151     1                        GOTO 9999
        152     1                     ENDIF
        153                     C
        154                           CALL ALE_CALYNG(NP,NE,NPMVB,LPMVB,
        155                          *                STPWR,EJ,DELTA,
        156                          *                NLYNG,EYNG,ME,N2,NODE,NPBODY,LPBODY,
        157                          *                LWRK01,LWRK02,WRK01,
        158                          *                IPART,NDOM,MBPDOM,LDOM,NBPDOM,
        159                          *                IPSLF,IPSND,RX,RY,MAXBUF,IUT0,IERR)
        160                           CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        161     1                     IF(IERRA.NE.0) THEN
        162     1                        WRITE(IUT0,*) BLANK
        163     1                        WRITE(IUT0,*) ERMSGC
        164     1                        GOTO 9999
        165     1                     ENDIF
        166                     C
        167                     CCHY_TMP
        168                           IF (IALEDB.GE.1.AND.IPART.EQ.1) WRITE(IUTAL,*)'STEP',ISTEP
        169                     CCHY_TMP
        170                     
        171                           CALL ALE_CALMOV(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
        172                          *                NEX,EPSA,EPSREA,NMAXA,X,Y,Z,
        173                          *                NELM,EAP3,EBP,MEP,MP,IENP,JENP,NEP,
        174                          *                NODE,ME,NE,NP,ME,EJ,DT,
        175                          *                NCRS,N1,N2,LTAB,NPP,IPCRS,ACRS2,
        176                          *                NPMVB,LPMVB,UMVB,VMVB,WMVB,
        177                          *                UMESH,VMESH,WMESH,
        178                          *                UMESH_P,VMESH_P,WMESH_P,ITIME,ISTART,
        179                          *                IPART,LDOM,NBPDOM,NDOM,
        180                          *                IPSLF,IPSND,MBPDOM,NUMIP,
        181                          *                NITRA,RESA,RX,RY,WRK01,AWRK01,AWRK02,
        182                          *                AWRK03,AWRK04,AWRK05,AWRK06,AWRK07,
        183                          *                AWRK08,AWRK09,AWRK10,LWRK01,LWRK02,LWRK03,
        184                          *                MRSALE,IALEDB,IUTAL,IUT0,IUT6,IERR )
        185                           CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        186     1                     IF(IERRA.NE.0) THEN
        187     1                        WRITE(IUT0,*) BLANK
        188     1                        WRITE(IUT0,*) ERMSGC
        189     1                        GOTO 9999
        190     1                     ENDIF
        191                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 500
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 3.20, ITR: 64, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      Z, X, Y, YD, XD, ZD
                              <<< Loop-information  End >>>
        192     1  pp    v            DO 1000 IP=1, NP
        193     1   p    v               XD(IP)=DBLE(X(IP))
        194     1   p    v               YD(IP)=DBLE(Y(IP))
        195     1   p    v               ZD(IP)=DBLE(Z(IP))
        196     1   p    v       1000 CONTINUE
        197                     CCHY_TMP
        198     1                     IF (IALEDB.GE.1.AND.IPART.EQ.1) THEN
        199     2                        IF (MOD(ITIME,50).EQ.0) THEN
        200     2                           CLOSE(IUTAL)
        201     2                           OPEN(IUTAL,FILE="ale_res.log")
        202     2                        ENDIF
        203     1                     ENDIF
        204                     CCHY_TMP
        205                     C
        206                     #ifdef cputime
        207                           IF (IWRTIM.EQ.1) CALL CLTIME('ALE EQ.   :END  ',IUT6)
        208                     C     CALL CPU_TIME( TBUF8 )
        209                           TBUF8 = MPI_WTIME()
        210                           IF (IWRTIM.EQ.1) CALL CLTIME('UPDT MESH :START',IUT6)
        211                     #endif
        212                     C
        213                           CALL ALE_MSHINF(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
        214                          *                N1,N2,NE,NP,NEX,NS,NSP,N2D,NELM,LOCAL,NODE,
        215                          *                X,Y,Z,XD,YD,ZD,
        216                          *                IPART,MDOM,NDOM,LDOM,NBPDOM,MBPDOM,IPSLF,IPSND,
        217                          *                MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST,MELM,ME,
        218                          *                SNI,DNXI,DNYI,DNZI,SN,DNXYZ,
        219                          *                E,EX,EY,EZ,EXX,EYY,EZZ,EXY,EYZ,EXZ,DELTA,
        220                          *                EAP1,EAP2,EAP3,EBP,MEP,MP,IENP,JENP,NEP,
        221                          *                NEBODY,NEHEAT,NSTET,NSPRD,NSWED,NSHEX,
        222                          *                LEBODY,LEHEAT,SBODY,DXBODY,DYBODY,DZBODY,SHEAT,
        223                          *                IFILTR,FILTER,
        224                          *                IMODEL,JPRESS,NEWALL,LEWALL,NEAR,DSNEAR,
        225                          *                NCRS,NAVDYN,NPFREE,NPSLD2,
        226                          *                LTAB,LPFREE,LPSLD2,GAMDYN,APRS,APRS0,ATEST0,
        227                          *                AAVER0,ATESPC,AAVEPC,
        228                     #ifdef RCAPCPL
        229                          *                NPCPL,LPCPL,XPCPL,YPCPL,ZPCPL,
        230                     #endif
        231                          *                MPWLAD,NPWALL,NEWLAD,NPWLAD,LPWALL,
        232                          *                XNWALL,YNWALL,ZNWALL,LEWLAD,LPWLAE,LPWLAD,DPWLAD,
        233                          *                MAXBUF,MWRK,RX,RY,WRKN,WRK01,WRK02,WRK03,WRK04,
        234                          *                WRK05,WRK06,DWRK01,DWRK02,DWRK03,DWRK04,DWRK05,
        235                          *                LWRK01,LWRK02,LEWRK,IWRTIM,
        236                     #ifdef cputime
        237                          *                DTALE,IUT6,IUT0,IERR)
        238                     #else
        239                          *                IUT6,IUT0,IERR)
        240                     #endif
        241                           CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        242     1                     IF(IERRA.NE.0) THEN
        243     1                        WRITE(IUT0,*) BLANK
        244     1                        WRITE(IUT0,*) ERMSGC
        245     1                        GOTO 9999
        246     1                     ENDIF
        247                     C
        248                     #ifdef cputime
        249                           IF (IWRTIM.EQ.1) CALL CLTIME('UPDT MESH :END  ',IUT6)
        250                     C     CALL CPU_TIME( TBUF9 )
        251                           TBUF9 = MPI_WTIME()
        252                     #endif
        253                     C
        254                      9999 CONTINUE
        255                     C
        256                           RETURN
        257                           END

 Diagnostic messages: program name(SLVALE)
   jwd2008i-i  "slvale.f", line 1: この仮引数'U000'は、副プログラム中で使用されていません。
   jwd5001p-i  "slvale.f", line 192: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "slvale.f", line 192: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "slvale.f", line 192: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvale.f", line 192: ループの繰返し数が64回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 4286
   Statements : 3358
   Stack(byte): 3600
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 4286
   Total statements : 3358
   Total stack(byte): 3600
   Total prefetch num: 0

