
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:37 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : ale_movbc1.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "ALE_MOVBC1"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE ALE_MOVBC1(NP,NPBODY,LPBODY,NPMVB,UMVB,VMVB,WMVB,
          2                          *                      LPCPL,NPCPL,MVEL,NDOF,U000,LWORK,
          3                          *                      WEIGHT,AWRK01,
          4                          *                      ME,NE,N2,IPART,LDOM,NBPDOM,NDOM,
          5                          *                      IPSLF,IPSND,MBPDOM,NUMIP,RX,RY,
          6                          *                      IWRTIM,IUT0,IUT6,IERR) ! DEBUG
          7                     C
          8                     #ifdef RCAPCPL
          9                           USE RCAPF
         10                     #endif
         11                     C
         12                           IMPLICIT NONE
         13                     C
         14                           INTEGER*4 NP,NPBODY,NPCPL,NPMVB,NDOF
         15                           INTEGER*4 LPBODY(NPBODY),LPCPL(NPCPL)
         16                           REAL*4    UMVB(NPMVB),VMVB(NPMVB),WMVB(NPMVB),U000
         17                           REAL*8    MVEL(NPCPL*3)
         18                           INTEGER*4 ME,NE,N2
         19                           INTEGER*4 IPART,NDOM,MBPDOM,IUT0,IUT6,IERR
         20                           INTEGER*4 LDOM(NDOM),NBPDOM(NDOM),
         21                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM),
         22                          *          NUMIP(NP)
         23                           REAL*4    RX(0:N2,ME),RY(0:N2,ME)
         24                     C     WORK
         25                           INTEGER*4 IP,IBC,IBP,I,J,K,IDIM,MAXBUF
         26                           INTEGER*4 LWORK(NP)
         27                           REAL*4    WEIGHT(NP),AWRK01(NP*3)
         28                     CCHYDEBUG
         29                           INTEGER*4 IWRTIM
         30                     CCHYDEBUG
         31                           CHARACTER*60 ERMSGC /' ## SUBROUTINE ALE_MOVBC1: FATAL
         32                          *      ERROR REPORT   ; RETURNED' /
         33                     C
         34                           MAXBUF = (N2+1)*NE
         35                     C
         36                     #ifdef cputime
         37                           IF (IWRTIM.EQ.1) CALL CLTIME('GET_MVEL  :START',IUT6)
         38                     #endif
         39                     #ifdef RCAPCPL
         40                           CALL RCAPF_GET_MVEL(LPCPL,NPCPL,MVEL,NDOF)
         41                     #endif
         42                     #ifdef cputime
         43                           IF (IWRTIM.EQ.1) CALL CLTIME('GET_MVEL  :END  ',IUT6)
         44                     #endif
         45                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWORK
                              <<< Loop-information  End >>>
         46     1  pp   4v            DO 100 IP=1,NP
         47     1   p   4v               LWORK(IP)=0
         48     1   p   4v       100  CONTINUE
         49                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.25, ITR: 192, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBODY
                              <<< Loop-information  End >>>
         50     1   s   2v            DO 200 IBP=1,NPBODY
         51     1   p   2v               IP=LPBODY(IBP)
         52     1   m   2v               LWORK(IP)=IBP
         53     1   p   2v       200  CONTINUE
         54                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.37, ITR: 80, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      MVEL, LPCPL
                              <<< Loop-information  End >>>
         55     1   s    v            DO 300 IBC=1,NPCPL
         56     1   p    v               IP=LPCPL(IBC)
         57     1   p    v               IBP=LWORK(IP)
         58     1   p    v               I=1+3*(IBC-1)
         59     1   p    v               J=2+3*(IBC-1)
         60     1   p    v               K=3+3*(IBC-1)
         61     1   m    v               UMVB(IBP)=SNGL(MVEL(I))/U000
         62     1   m    v               VMVB(IBP)=SNGL(MVEL(J))/U000
         63     1   m    v               WMVB(IBP)=SNGL(MVEL(K))/U000
         64     1   p    v       300  CONTINUE
         65                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 552
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.50, ITR: 352, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NUMIP, WEIGHT
                              <<< Loop-information  End >>>
         66     1  pp   2v            DO 400 IP=1,NP
         67     1   p   2v               WEIGHT(IP)=1.E0/(FLOAT(NUMIP(IP))+1.E0)
         68     1   p   2v       400  CONTINUE
         69                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AWRK01
                              <<< Loop-information  End >>>
         70     1  pp   4v            DO 500 IP=1,NP*3
         71     1   p   4v               AWRK01(IP)=0.0E0
         72     1   p   4v       500  CONTINUE
         73                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 3.42, ITR: 7, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBODY, UMVB, VMVB, WMVB
                              <<< Loop-information  End >>>
         74     1   s    s            DO 600 IBP=1,NPBODY
         75     1   p    v               IP=LPBODY(IBP)
         76     1   m    m               AWRK01(IP+NP*0)=WEIGHT(IP)*UMVB(IBP)
         77     1   m    m               AWRK01(IP+NP*1)=WEIGHT(IP)*VMVB(IBP)
         78     1   m    m               AWRK01(IP+NP*2)=WEIGHT(IP)*WMVB(IBP)
         79     1   p    v       600  CONTINUE
         80                     C
         81                           IDIM = 3
         82                           CALL DDCOMX(IPART,IDIM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
         83                          *     AWRK01,AWRK01(NP+1),AWRK01(NP*2+1),NP,IUT0,IERR,RX,RY,MAXBUF)
         84     1                     IF(IERR.EQ.1) THEN
         85     1                        WRITE(IUT0,*)'ERROR CODE REPORTED FROM DDCOMX'
         86     1                        WRITE(IUT0,*) ERMSGC
         87     1                        RETURN
         88     1                     ENDIF
         89                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 433
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 224, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBODY, UMVB, VMVB, WMVB
                              <<< Loop-information  End >>>
         90     1  pp   2v            DO 700 IBP=1,NPBODY
         91     1   p   2v               IP=LPBODY(IBP)
         92     1   p   2v               UMVB(IBP)=AWRK01(IP+NP*0)
         93     1   p   2v               VMVB(IBP)=AWRK01(IP+NP*1)
         94     1   p   2v               WMVB(IBP)=AWRK01(IP+NP*2)
         95     1   p   2v       700  CONTINUE
         96                     C
         97                           RETURN
         98                           END

 Diagnostic messages: program name(ALE_MOVBC1)
   jwd2008i-i  "ale_movbc1.f", line 1: この仮引数'NDOF'は、副プログラム中で使用されていません。
   jwd8220o-i  "ale_movbc1.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "ale_movbc1.f", line 46: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_movbc1.f", line 46: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "ale_movbc1.f", line 46: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "ale_movbc1.f", line 46: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "ale_movbc1.f", line 50: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "ale_movbc1.f", line 50: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_movbc1.f", line 50: ループの繰返し数が192回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "ale_movbc1.f", line 52: 配列'LWORK'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6001s-i  "ale_movbc1.f", line 55: このDOループをSIMD化しました。(名前:IBC)
   jwd8204o-i  "ale_movbc1.f", line 55: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_movbc1.f", line 55: ループの繰返し数が80回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8206o-i  "ale_movbc1.f", line 61: 除算を逆数の乗算に変更しました。
   jwd5209p-i  "ale_movbc1.f", line 61: 配列'UMVB'の添字式中の変数'IBP'をループ中で定義しているため、このDOループは並列化できません。
   jwd8206o-i  "ale_movbc1.f", line 62: 除算を逆数の乗算に変更しました。
   jwd5209p-i  "ale_movbc1.f", line 62: 配列'VMVB'の添字式中の変数'IBP'をループ中で定義しているため、このDOループは並列化できません。
   jwd8206o-i  "ale_movbc1.f", line 63: 除算を逆数の乗算に変更しました。
   jwd5209p-i  "ale_movbc1.f", line 63: 配列'WMVB'の添字式中の変数'IBP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "ale_movbc1.f", line 66: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_movbc1.f", line 66: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "ale_movbc1.f", line 66: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_movbc1.f", line 66: ループの繰返し数が352回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "ale_movbc1.f", line 70: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_movbc1.f", line 70: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "ale_movbc1.f", line 70: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "ale_movbc1.f", line 70: ループを展開数4回でアンローリングしました。
   jwd6302s-i  "ale_movbc1.f", line 74: 部分的なSIMD化による性能向上が得られない可能性があるため、このDOループのSIMD化を抑止しました。
   jwd8204o-i  "ale_movbc1.f", line 74: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_movbc1.f", line 74: ループの繰返し数が7回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "ale_movbc1.f", line 76: 配列'AWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "ale_movbc1.f", line 76: 配列'AWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd5001p-i  "ale_movbc1.f", line 90: このDOループを並列化しました。(名前:IBP)
   jwd6001s-i  "ale_movbc1.f", line 90: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "ale_movbc1.f", line 90: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_movbc1.f", line 90: ループの繰返し数が224回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 98
   Statements : 62
   Stack(byte): 1840
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 98
   Total statements : 62
   Total stack(byte): 1840
   Total prefetch num: 0

