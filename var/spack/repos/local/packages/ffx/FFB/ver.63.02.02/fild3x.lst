
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:00 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : fild3x.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FILD3X"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE FILD3X(IMODE,ME,NE,NP,NEX,N1,N2,
          2                          *                  U,V,W,FE,NODE,DNXI,DNYI,DNZI,
          3                          *                  IUT0,IERR)
          4                     C
          5                           IMPLICIT NONE
          6                     C
          7                           INTEGER*4 IMODE,ME,NE,NP,NEX,N1,N2,NODE,IUT0,IERR
          8                           REAL*4    U,V,W,FE,DNXI,DNYI,DNZI
          9                     C
         10                           INTEGER*4 NETET,NEPRD,NEWED,NEHEX,
         11                          *          IES1,IEE1,IES2,IEE2,IES3,IEE3,IES4,IEE4,IE
         12                     C
         13                           DIMENSION NEX(8)
         14                           DIMENSION U(NP),V(NP),W(NP),FE(NE)
         15                           DIMENSION NODE(N2,NE),
         16                          1          DNXI(N1,ME), DNYI(N1,ME), DNZI(N1,ME)
         17                     C
         18                     C
         19                     C      CALCULATE VELOCITY FIELD CHARACTERISTICS
         20                     C         ( 3-D CALCULATION : SINGLE WORD & MULTI ELEMENT VERSION )
         21                     C                                           CODED BASED ON 'FIELD3'
         22                     C                                              2009.01.13 Y.YAMADE
         23                     C
         24                     C
         25                     C     ARGUMENT LISTINGS
         26                     C       (1) INPUT
         27                     C          IMODE       ; SPECIFIES THE TYPE OF FIELD DATA AS FOLLOWS
         28                     C                   1 --- ELEMENT DIVERGENT
         29                     C                   NOTE THAT CURRENTLLY ONLY IMODE=1 IS SUPPORTED.
         30                     C
         31                     C          ME          ; MAX. NUMBER OF TOTAL ELEMENTS
         32                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         33                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         34                     C          NP          ; NUMBER OF TOTAL    NODES
         35                     C          NEX(I)      ; INCLUDES NUMBER OF ELEMENTS AND NUMBER OF LOCAL NODES
         36                     C                        AS FOLOOWS
         37                     C          NEX(1)      ; NUMBER OF TET.    ELEMENTS
         38                     C          NEX(2)      ; NUMBER OF PYRAMID ELEMENTS
         39                     C          NEX(3)      ; NUMBER OF WEGDE   ELEMENTS
         40                     C          NEX(4)      ; NUMBER OF HEX.    ELEMENTS
         41                     C          NEX(5)      ; NUMBER OF LOCAL NODES IN A TET.    ELEMENT (=4)
         42                     C          NEX(6)      ; NUMBER OF LOCAL NODES IN A PYRAMID ELEMENT (=5)
         43                     C          NEX(7)      ; NUMBER OF LOCAL NODES IN A WEGDE   ELEMENT (=6)
         44                     C          NEX(8)      ; NUMBER OF LOCAL NODES IN A HEX.    ELEMENT (=8)
         45                     C
         46                     C          U       (IP); X-DIR. VELOCITY COMPONENT
         47                     C          V       (IP); Y-DIR. VELOCITY COMPONENT
         48                     C          W       (IP); Z-DIR. VELOCITY COMPONENT
         49                     C
         50                     C          NODE(I,IE)  ; NODE NO. TABLE BASED ON ELEMENT
         51                     C          DNXI(I,IE)  ; ELEMENT CENTER VALUE OF NX
         52                     C          DNYI(I,IE)  ; ELEMENT CENTER VALUE OF NY
         53                     C          DNZI(I,IE)  ; ELEMENT CENTER VALUE OF NZ
         54                     C
         55                     C      (2) OUTPUT
         56                     C          FE    (IE)  ; FIELD DATA
         57                     C
         58                     #ifdef USE_TIMER
         59                           real*8 ts0, te0
         60                     
         61                           include 'timer.h'
         62                           include 'mpif.h'
         63                     
         64                           nfild3x = nfild3x + 1
         65                           tstart = MPI_WTIME()
         66                     #endif
         67                     C
         68     1                     IF(IMODE.NE.1) THEN
         69     1                         WRITE(IUT0,*) 'INVALID VALUE FOR IMODE: ERROR'
         70     1                         IERR=1
         71     1               #ifdef USE_TIMER
         72     1                         tend = MPI_WTIME()
         73     1                         tfild3x = tfild3x + (tend - tstart)
         74     1               #endif
         75     1                         RETURN
         76     1                     ENDIF
         77                     C
         78                           NETET=NEX(1)
         79                           NEPRD=NEX(2)
         80                           NEWED=NEX(3)
         81                           NEHEX=NEX(4)
         82                           NE   =NETET+NEPRD+NEWED+NEHEX
         83                     C
         84                     C   == TET. ==
         85                           IES1=1
         86                           IEE1=NETET
         87                     C
         88                     C   == PYRAMID ==
         89                           IES2=NETET+1
         90                           IEE2=NETET+NEPRD
         91                     C
         92                     C   == WEDGE ==
         93                           IES3=NETET+NEPRD+1
         94                           IEE3=NETET+NEPRD+NEWED
         95                     C
         96                     C   == HEX. ==
         97                           IES4=NETET+NEPRD+NEWED+1
         98                           IEE4=NETET+NEPRD+NEWED+NEHEX
         99                     C
        100                     C
        101                     C     (1) CALCULATE DIVERGENT
        102                     C
        103                     CC==== TET. ====
        104                     C
        105                     C     OPERATION COUNTS:  23 FLOP /ELEMENT
        106                     C     DATA LOADINGS   :  24 WORDS/ELEMENT
        107                     C                      (  0 WORDS CONTIGUOUSLY,
        108                     C                        12 WORDS BY STRIDE, AND
        109                     C                        12 WORDS BY LIST )
        110                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 125
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.65, ITR: 112, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE
                              <<< Loop-information  End >>>
        111     1  pp    v            DO 110 IE = IES1 , IEE1
        112     1   p    v               FE(IE) = DNXI(1,IE)*U(NODE(1,IE))
        113     1                    &           +DNXI(2,IE)*U(NODE(2,IE))
        114     1                    &           +DNXI(3,IE)*U(NODE(3,IE))
        115     1                    &           +DNXI(4,IE)*U(NODE(4,IE))
        116     1               C
        117     1                    &           +DNYI(1,IE)*V(NODE(1,IE))
        118     1                    &           +DNYI(2,IE)*V(NODE(2,IE))
        119     1                    &           +DNYI(3,IE)*V(NODE(3,IE))
        120     1                    &           +DNYI(4,IE)*V(NODE(4,IE))
        121     1               C
        122     1                    &           +DNZI(1,IE)*W(NODE(1,IE))
        123     1                    &           +DNZI(2,IE)*W(NODE(2,IE))
        124     1                    &           +DNZI(3,IE)*W(NODE(3,IE))
        125     1                    &           +DNZI(4,IE)*W(NODE(4,IE))
        126     1   p    v        110 CONTINUE
        127                     C
        128                     CC==== PYRAMID ====
        129                     C
        130                     C     OPERATION COUNTS:  29 FLOP /ELEMENT
        131                     C     DATA LOADINGS   :  30 WORDS/ELEMENT
        132                     C                      (  0 WORDS CONTIGUOUSLY,
        133                     C                        15 WORDS BY STRIDE, AND
        134                     C                        15 WORDS BY LIST )
        135                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 101
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.29, ITR: 64, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE
                              <<< Loop-information  End >>>
        136     1  pp    v            DO 120 IE = IES2 , IEE2
        137     1   p    v               FE(IE) = DNXI(1,IE)*U(NODE(1,IE))
        138     1                    &           +DNXI(2,IE)*U(NODE(2,IE))
        139     1                    &           +DNXI(3,IE)*U(NODE(3,IE))
        140     1                    &           +DNXI(4,IE)*U(NODE(4,IE))
        141     1                    &           +DNXI(5,IE)*U(NODE(5,IE))
        142     1               C
        143     1                    &           +DNYI(1,IE)*V(NODE(1,IE))
        144     1                    &           +DNYI(2,IE)*V(NODE(2,IE))
        145     1                    &           +DNYI(3,IE)*V(NODE(3,IE))
        146     1                    &           +DNYI(4,IE)*V(NODE(4,IE))
        147     1                    &           +DNYI(5,IE)*V(NODE(5,IE))
        148     1               C
        149     1                    &           +DNZI(1,IE)*W(NODE(1,IE))
        150     1                    &           +DNZI(2,IE)*W(NODE(2,IE))
        151     1                    &           +DNZI(3,IE)*W(NODE(3,IE))
        152     1                    &           +DNZI(4,IE)*W(NODE(4,IE))
        153     1                    &           +DNZI(5,IE)*W(NODE(5,IE))
        154     1   p    v        120 CONTINUE
        155                     C
        156                     CC==== WEDGE ====
        157                     C
        158                     C     OPERATION COUNTS:  35 FLOP /ELEMENT
        159                     C     DATA LOADINGS   :  36 WORDS/ELEMENT
        160                     C                      (  0 WORDS CONTIGUOUSLY,
        161                     C                        18 WORDS BY STRIDE, AND
        162                     C                        18 WORDS BY LIST )
        163                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 85
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.55, ITR: 64, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 0
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 28
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        164     1  pp    v            DO 130 IE = IES3 , IEE3
        165     1   p    v               FE(IE) = DNXI(1,IE)*U(NODE(1,IE))
        166     1                    &           +DNXI(2,IE)*U(NODE(2,IE))
        167     1                    &           +DNXI(3,IE)*U(NODE(3,IE))
        168     1                    &           +DNXI(4,IE)*U(NODE(4,IE))
        169     1                    &           +DNXI(5,IE)*U(NODE(5,IE))
        170     1                    &           +DNXI(6,IE)*U(NODE(6,IE))
        171     1               C
        172     1                    &           +DNYI(1,IE)*V(NODE(1,IE))
        173     1                    &           +DNYI(2,IE)*V(NODE(2,IE))
        174     1                    &           +DNYI(3,IE)*V(NODE(3,IE))
        175     1                    &           +DNYI(4,IE)*V(NODE(4,IE))
        176     1                    &           +DNYI(5,IE)*V(NODE(5,IE))
        177     1                    &           +DNYI(6,IE)*V(NODE(6,IE))
        178     1               C
        179     1                    &           +DNZI(1,IE)*W(NODE(1,IE))
        180     1                    &           +DNZI(2,IE)*W(NODE(2,IE))
        181     1                    &           +DNZI(3,IE)*W(NODE(3,IE))
        182     1                    &           +DNZI(4,IE)*W(NODE(4,IE))
        183     1                    &           +DNZI(5,IE)*W(NODE(5,IE))
        184     1                    &           +DNZI(6,IE)*W(NODE(6,IE))
        185     1   p    v        130 CONTINUE
        186                     C
        187                     CC==== HEX. ====
        188                     C
        189                     C     OPERATION COUNTS:  47 FLOP /ELEMENT
        190                     C     DATA LOADINGS   :  48 WORDS/ELEMENT
        191                     C                      (  0 WORDS CONTIGUOUSLY,
        192                     C                        24 WORDS BY STRIDE, AND
        193                     C                        24 WORDS BY LIST )
        194                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 65
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.52, ITR: 48, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 0
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 29
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        195     1  pp    v            DO 140 IE = IES4 , IEE4
        196     1   p    v               FE(IE) = DNXI(1,IE)*U(NODE(1,IE))
        197     1                    &           +DNXI(2,IE)*U(NODE(2,IE))
        198     1                    &           +DNXI(3,IE)*U(NODE(3,IE))
        199     1                    &           +DNXI(4,IE)*U(NODE(4,IE))
        200     1                    &           +DNXI(5,IE)*U(NODE(5,IE))
        201     1                    &           +DNXI(6,IE)*U(NODE(6,IE))
        202     1                    &           +DNXI(7,IE)*U(NODE(7,IE))
        203     1                    &           +DNXI(8,IE)*U(NODE(8,IE))
        204     1               C
        205     1                    &           +DNYI(1,IE)*V(NODE(1,IE))
        206     1                    &           +DNYI(2,IE)*V(NODE(2,IE))
        207     1                    &           +DNYI(3,IE)*V(NODE(3,IE))
        208     1                    &           +DNYI(4,IE)*V(NODE(4,IE))
        209     1                    &           +DNYI(5,IE)*V(NODE(5,IE))
        210     1                    &           +DNYI(6,IE)*V(NODE(6,IE))
        211     1                    &           +DNYI(7,IE)*V(NODE(7,IE))
        212     1                    &           +DNYI(8,IE)*V(NODE(8,IE))
        213     1               C
        214     1                    &           +DNZI(1,IE)*W(NODE(1,IE))
        215     1                    &           +DNZI(2,IE)*W(NODE(2,IE))
        216     1                    &           +DNZI(3,IE)*W(NODE(3,IE))
        217     1                    &           +DNZI(4,IE)*W(NODE(4,IE))
        218     1                    &           +DNZI(5,IE)*W(NODE(5,IE))
        219     1                    &           +DNZI(6,IE)*W(NODE(6,IE))
        220     1                    &           +DNZI(7,IE)*W(NODE(7,IE))
        221     1                    &           +DNZI(8,IE)*W(NODE(8,IE))
        222     1   p    v        140 CONTINUE
        223                     C
        224                     #ifdef USE_TIMER
        225                           tend = MPI_WTIME()
        226                           tfild3x = tfild3x + (tend - tstart)
        227                     #endif
        228                           RETURN
        229                           END

 Diagnostic messages: program name(FILD3X)
   jwd2003i-i  "/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include/timer.h", line 24: この名前'nclrcrs'は、INCLUDE内で宣言だけされていて引用されていません。
   jwd2003i-i  "/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include/timer.h", line 25: この名前'tclrcrs'は、INCLUDE内で宣言だけされていて引用されていません。
   jwd8220o-i  "fild3x.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "fild3x.f", line 59: この名前'te0'は、宣言だけされていて引用されていません。
   jwd2006i-i  "fild3x.f", line 59: この名前'ts0'は、宣言だけされていて引用されていません。
   jwd5001p-i  "fild3x.f", line 111: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "fild3x.f", line 111: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "fild3x.f", line 111: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "fild3x.f", line 111: ループの繰返し数が112回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "fild3x.f", line 112: 多項式の演算順序を変更しました。
   jwd5001p-i  "fild3x.f", line 136: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "fild3x.f", line 136: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "fild3x.f", line 136: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "fild3x.f", line 136: ループの繰返し数が64回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "fild3x.f", line 137: 多項式の演算順序を変更しました。
   jwd5001p-i  "fild3x.f", line 164: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "fild3x.f", line 164: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "fild3x.f", line 164: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "fild3x.f", line 164: ループの繰返し数が64回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "fild3x.f", line 165: 多項式の演算順序を変更しました。
   jwd5001p-i  "fild3x.f", line 195: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "fild3x.f", line 195: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "fild3x.f", line 195: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "fild3x.f", line 195: ループの繰返し数が48回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "fild3x.f", line 196: 多項式の演算順序を変更しました。

 Procedure information
   Lines      : 4388
   Statements : 3367
   Stack(byte): 992
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 4388
   Total statements : 3367
   Total stack(byte): 992
   Total prefetch num: 0

