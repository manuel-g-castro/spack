
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:32 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : fndssb.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "FNDSSB"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE FNDSSB(N2,NE,NEG,NP,NEX,X,Y,Z,NODE,LIST,
          2                          *                  XMINE,YMINE,ZMINE,XMAXE,YMAXE,ZMAXE,
          3                          *                  XP,YP,ZP,EN,GP,EP,TP,IUT0,IERR)
          4                           IMPLICIT NONE
          5                     C
          6                     ***** DEFINE ARGUMENTS *****
          7                           INTEGER IP,N2,NE,NEG,NP,NEX,NODE,LIST
          8                           REAL X,Y,Z
          9                           REAL XMINE,YMINE,ZMINE
         10                           REAL XMAXE,YMAXE,ZMAXE
         11                           REAL XP,YP,ZP
         12                           INTEGER EN
         13                           REAL GP,EP,TP
         14                           REAL*4 DX1,DY1,DZ1,RR
         15                     C
         16                           DIMENSION NODE(N2,NEG),LIST(NE),NEX(8),X(NP),Y(NP),Z(NP),
         17                          *          XMINE(NEG),YMINE(NEG),ZMINE(NEG),
         18                          *          XMAXE(NEG),YMAXE(NEG),ZMAXE(NEG)
         19                     C
         20                     ***** OBJECTS *****
         21                           INTEGER JHEX,JWED,JPRD,JTET
         22                           INTEGER IFOUND
         23                           REAL XI(3),DXI(3),XPV(3),DX(3),X1,X2,X3
         24                           REAL XE(3,8),N(8),PSI(3,8),J(3,3),INVJ(3,3)
         25                           INTEGER IUT0,IERR
         26                           INTEGER IE0,IE,IT
         27                           INTEGER ITMAX
         28                           INTEGER II,JJ,KK
         29                     
         30                           REAL*4 TINY,EPS
         31                           REAL*4 TMP,DETJ
         32                     C
         33                           INTEGER NTMP,NHEX,NPRD,NWED,NTET
         34                     C
         35                     ***** DATA *****
         36                           DATA IFOUND /0/
         37                           DATA ITMAX  /30/
         38                     C
         39                           DATA TINY   /2.0E-2/
         40                           DATA EPS    /1.0E-5/
         41                     C
         42                           IFOUND=0
         43                           IERR =0
         44                     C
         45                           NTET=NEX(5)
         46                           NPRD=NEX(6)
         47                           NWED=NEX(7)
         48                           NHEX=NEX(8)
         49                     C
         50                     ***** MAKE XPV  *****
         51                           XPV(1)=XP
         52                           XPV(2)=YP
         53                           XPV(3)=ZP
         54                     C
         55                     ************************
         56                     ***** ELEMENT LOOP *****
         57                     ************************
         58     1                     DO 1000 IE0=1,NE
         59     1               C
         60     1                         IE=LIST(IE0)
         61     1               C
         62     1                         IF(     (XP.LT.XMINE(IE)-EPS)
         63     1                    *       .OR. (XP.GT.XMAXE(IE)+EPS)
         64     1                    *       .OR. (YP.LT.YMINE(IE)-EPS)
         65     1                    *       .OR. (YP.GT.YMAXE(IE)+EPS)
         66     1                    *       .OR. (ZP.LT.ZMINE(IE)-EPS)
         67     1                    *       .OR. (ZP.GT.ZMAXE(IE)+EPS) )
         68     1                    *    GOTO 1000
         69     1               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
         70     2       f                 DO 1050 II=1,8
         71     2       f                    IF (NODE(II,IE).EQ.0) GOTO 1050
         72     2       f                    DX1=XP-X(NODE(II,IE))
         73     2       f                    DY1=YP-Y(NODE(II,IE))
         74     2       f                    DZ1=ZP-Z(NODE(II,IE))
         75     2       f                    RR=DX1*DX1+DY1*DY1+DZ1*DZ1
         76     2       f                    IF (RR.LE.EPS*EPS) GOTO 1000
         77     2       f        1050     CONTINUE
         78     1               C
         79     1               ***** DETERMIN ELEMENT TYPE *****
         80     1                         JHEX=0
         81     1                         JWED=0
         82     1                         JPRD=0
         83     1                         JTET=0
         84     2                         IF(NODE(NHEX,IE).NE.0) THEN
         85     2                             JHEX=1
         86     2                             XI(1)=0.0
         87     2                             XI(2)=0.0
         88     2                             XI(3)=0.0
         89     2                             NTMP=NHEX
         90     2                         ELSE IF(NODE(NWED,IE).NE.0) THEN
         91     2                             JWED=1
         92     2                             XI(1)=1./3.
         93     2                             XI(2)=1./3.
         94     2                             XI(3)=0.0
         95     2                             NTMP=NWED
         96     2                         ELSE IF(NODE(NPRD,IE).NE.0) THEN
         97     2                             JPRD=1
         98     2                             XI(1)=0.0
         99     2                             XI(2)=0.0
        100     2                             XI(3)=1./4.
        101     2                             NTMP=NPRD
        102     2                         ELSE IF(NODE(NTET,IE).NE.0) THEN
        103     2                             JTET=1
        104     2                             XI(1)=1./4.
        105     2                             XI(2)=1./4.
        106     2                             XI(3)=1./4.
        107     2                             NTMP=NTET
        108     2                         ELSE
        109     2                             WRITE(IUT0,*)'INVALID NODE TABLE:ERROR'
        110     2                             IERR=1
        111     2                             RETURN
        112     2                         ENDIF
        113     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 500
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, (unknown)
                              <<< Loop-information  End >>>
        114     2   s   2v                DO 1100 II=1,NTMP
        115     2   p   2v                    XE(1,II) =X(NODE(II,IE))
        116     2   p   2v                    XE(2,II) =Y(NODE(II,IE))
        117     2   p   2v                    XE(3,II) =Z(NODE(II,IE))
        118     2   p   2v       1100     CONTINUE
        119     1               C
        120     1               ************HEX************
        121     2                         DO 1200 IT=1,ITMAX
        122     3                             IF( JHEX.EQ.1 ) THEN
        123     3                                  N(1)=0.125*(1.-XI(1))*(1.-XI(2))*(1.-XI(3))
        124     3                                  N(2)=0.125*(1.+XI(1))*(1.-XI(2))*(1.-XI(3))
        125     3                                  N(3)=0.125*(1.+XI(1))*(1.+XI(2))*(1.-XI(3))
        126     3                                  N(4)=0.125*(1.-XI(1))*(1.+XI(2))*(1.-XI(3))
        127     3                                  N(5)=0.125*(1.-XI(1))*(1.-XI(2))*(1.+XI(3))
        128     3                                  N(6)=0.125*(1.+XI(1))*(1.-XI(2))*(1.+XI(3))
        129     3                                  N(7)=0.125*(1.+XI(1))*(1.+XI(2))*(1.+XI(3))
        130     3                                  N(8)=0.125*(1.-XI(1))*(1.+XI(2))*(1.+XI(3))
        131     3                             ELSE IF(JWED.EQ.1) THEN
        132     3                                  N(1)=0.5*XI(1)           *(1.-XI(3))
        133     3                                  N(2)=0.5*XI(2)           *(1.-XI(3))
        134     3                                  N(3)=0.5*(1.-XI(1)-XI(2))*(1.-XI(3))
        135     3                                  N(4)=0.5*XI(1)           *(1.+XI(3))
        136     3                                  N(5)=0.5*XI(2)           *(1.+XI(3))
        137     3                                  N(6)=0.5*(1.-XI(1)-XI(2))*(1.+XI(3))
        138     3                             ELSE IF(JPRD.EQ.1) THEN
        139     3                                  X1=XI(1)
        140     3                                  X2=XI(2)
        141     3                                  X3=XI(3)
        142     3                                  N(1)=0.25*((1.-X1)*(1.-X2)-X3+X1*X2*X3/(1.-X3))
        143     3                                  N(2)=0.25*((1.+X1)*(1.-X2)-X3-X1*X2*X3/(1.-X3))
        144     3                                  N(3)=0.25*((1.+X1)*(1.+X2)-X3+X1*X2*X3/(1.-X3))
        145     3                                  N(4)=0.25*((1.-X1)*(1.+X2)-X3-X1*X2*X3/(1.-X3))
        146     3                                  N(5)= X3
        147     3                             ELSE IF(JTET.EQ.1) THEN
        148     3                                  N(1)=1.-XI(1)-XI(2)-XI(3)
        149     3                                  N(2)=XI(1)
        150     3                                  N(3)=XI(2)
        151     3                                  N(4)=XI(3)
        152     3                             ENDIF
        153     2               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 4
                              <<< Loop-information  End >>>
        154     3  pp                         DO 1300 II=1,3
        155     3   p                             TMP=0.
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      N, XE
                              <<< Loop-information  End >>>
        156     4   p   8v                         DO 1310 JJ=1,NTMP
        157     4   p   8v                             TMP =TMP +XE(II,JJ)*N(JJ)
        158     4   p   8v       1310              CONTINUE
        159     3   p                              DX (II)=XPV(II)-TMP
        160     3   p            1300         CONTINUE
        161     2               C
        162     3                             IF( JHEX.EQ.1 ) THEN
        163     3                                 PSI(1,1)=-0.125*(1.-XI(2))*(1.-XI(3))
        164     3                                 PSI(1,2)=+0.125*(1.-XI(2))*(1.-XI(3))
        165     3                                 PSI(1,3)=+0.125*(1.+XI(2))*(1.-XI(3))
        166     3                                 PSI(1,4)=-0.125*(1.+XI(2))*(1.-XI(3))
        167     3                                 PSI(1,5)=-0.125*(1.-XI(2))*(1.+XI(3))
        168     3                                 PSI(1,6)=+0.125*(1.-XI(2))*(1.+XI(3))
        169     3                                 PSI(1,7)=+0.125*(1.+XI(2))*(1.+XI(3))
        170     3                                 PSI(1,8)=-0.125*(1.+XI(2))*(1.+XI(3))
        171     3               C
        172     3                                 PSI(2,1)=-0.125*(1.-XI(3))*(1.-XI(1))
        173     3                                 PSI(2,2)=-0.125*(1.-XI(3))*(1.+XI(1))
        174     3                                 PSI(2,3)=+0.125*(1.-XI(3))*(1.+XI(1))
        175     3                                 PSI(2,4)=+0.125*(1.-XI(3))*(1.-XI(1))
        176     3                                 PSI(2,5)=-0.125*(1.+XI(3))*(1.-XI(1))
        177     3                                 PSI(2,6)=-0.125*(1.+XI(3))*(1.+XI(1))
        178     3                                 PSI(2,7)=+0.125*(1.+XI(3))*(1.+XI(1))
        179     3                                 PSI(2,8)=+0.125*(1.+XI(3))*(1.-XI(1))
        180     3               C
        181     3                                 PSI(3,1)=-0.125*(1.-XI(1))*(1.-XI(2))
        182     3                                 PSI(3,2)=-0.125*(1.+XI(1))*(1.-XI(2))
        183     3                                 PSI(3,3)=-0.125*(1.+XI(1))*(1.+XI(2))
        184     3                                 PSI(3,4)=-0.125*(1.-XI(1))*(1.+XI(2))
        185     3                                 PSI(3,5)=+0.125*(1.-XI(1))*(1.-XI(2))
        186     3                                 PSI(3,6)=+0.125*(1.+XI(1))*(1.-XI(2))
        187     3                                 PSI(3,7)=+0.125*(1.+XI(1))*(1.+XI(2))
        188     3                                 PSI(3,8)=+0.125*(1.-XI(1))*(1.+XI(2))
        189     3                             ELSE IF(JWED.EQ.1) THEN
        190     3                                 PSI(1,1)=+0.5*(1.-XI(3))
        191     3                                 PSI(1,2)=0.
        192     3                                 PSI(1,3)=-0.5*(1.-XI(3))
        193     3                                 PSI(1,4)=+0.5*(1.+XI(3))
        194     3                                 PSI(1,5)=0.
        195     3                                 PSI(1,6)=-0.5*(1.+XI(3))
        196     3               C
        197     3                                 PSI(2,1)=0.
        198     3                                 PSI(2,2)=+0.5*(1.-XI(3))
        199     3                                 PSI(2,3)=-0.5*(1.-XI(3))
        200     3                                 PSI(2,4)=0.
        201     3                                 PSI(2,5)=+0.5*(1.+XI(3))
        202     3                                 PSI(2,6)=-0.5*(1.+XI(3))
        203     3               C
        204     3                                 PSI(3,1)=-0.5*XI(1)
        205     3                                 PSI(3,2)=-0.5*XI(2)
        206     3                                 PSI(3,3)=-0.5*(1.-XI(1)-XI(2))
        207     3                                 PSI(3,4)=+0.5*XI(1)
        208     3                                 PSI(3,5)=+0.5*XI(2)
        209     3                                 PSI(3,6)=+0.5*(1.-XI(1)-XI(2))
        210     3                             ELSE IF(JPRD.EQ.1) THEN
        211     3                                 PSI(1,1)=0.25*( -1. +XI(2)/(1.-XI(3)) )
        212     3                                 PSI(1,2)=0.25*( +1. -XI(2)/(1.-XI(3)) )
        213     3                                 PSI(1,3)=0.25*( +1. +XI(2)/(1.-XI(3)) )
        214     3                                 PSI(1,4)=0.25*( -1. -XI(2)/(1.-XI(3)) )
        215     3                                 PSI(1,5)=0.
        216     3               C
        217     3                                 PSI(2,1)=0.25*( -1. +XI(1)/(1.-XI(3)) )
        218     3                                 PSI(2,2)=0.25*( -1. -XI(1)/(1.-XI(3)) )
        219     3                                 PSI(2,3)=0.25*( +1. +XI(1)/(1.-XI(3)) )
        220     3                                 PSI(2,4)=0.25*( +1. -XI(1)/(1.-XI(3)) )
        221     3                                 PSI(2,5)=0.
        222     3               C
        223     3                                 PSI(3,1)=0.25*( -1. +XI(1)*XI(2)/(1.-XI(3))**2 )
        224     3                                 PSI(3,2)=0.25*( -1. -XI(1)*XI(2)/(1.-XI(3))**2 )
        225     3                                 PSI(3,3)=0.25*( -1. +XI(1)*XI(2)/(1.-XI(3))**2 )
        226     3                                 PSI(3,4)=0.25*( -1. -XI(1)*XI(2)/(1.-XI(3))**2 )
        227     3                                 PSI(3,5)=1.
        228     3                             ELSE IF(JTET.EQ.1) THEN
        229     3                                 PSI(1,1)=-1.0
        230     3                                 PSI(1,2)= 1.0
        231     3                                 PSI(1,3)= 0.0
        232     3                                 PSI(1,4)= 0.0
        233     3               C
        234     3                                 PSI(2,1)=-1.0
        235     3                                 PSI(2,2)= 0.0
        236     3                                 PSI(2,3)= 1.0
        237     3                                 PSI(2,4)= 0.0
        238     3               C
        239     3                                 PSI(3,1)=-1.0
        240     3                                 PSI(3,2)= 0.0
        241     3                                 PSI(3,3)= 0.0
        242     3                                 PSI(3,4)= 1.0
        243     3                             ENDIF
        244     2               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
        245     3  pp                         DO 1400 II=1,3
        246     4   p                             DO 1410 JJ=1,3
        247     4   p                                 TMP=0.
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      PSI, XE
                              <<< Loop-information  End >>>
        248     5   p   8v                            DO 1420 KK=1,NTMP
        249     5   p   8v                                TMP =TMP +PSI(II,KK)*XE(JJ,KK)
        250     5   p   8v       1420                 CONTINUE
        251     4   p                                 J(II,JJ)=TMP
        252     4   p            1410             CONTINUE
        253     3   p            1400         CONTINUE
        254     2               C
        255     2                             DETJ =J(1,1)*J(2,2)*J(3,3) -J(1,1)*J(2,3)*J(3,2)
        256     2                    *             +J(1,2)*J(2,3)*J(3,1) -J(1,2)*J(2,1)*J(3,3)
        257     2                    *             +J(1,3)*J(2,1)*J(3,2) -J(1,3)*J(2,2)*J(3,1)
        258     2                             INVJ(1,1) =(J(2,2)*J(3,3)-J(2,3)*J(3,2))/DETJ
        259     2                             INVJ(1,2) =(J(1,3)*J(3,2)-J(1,2)*J(3,3))/DETJ
        260     2                             INVJ(1,3) =(J(1,2)*J(2,3)-J(1,3)*J(2,2))/DETJ
        261     2                             INVJ(2,1) =(J(2,3)*J(3,1)-J(2,1)*J(3,3))/DETJ
        262     2                             INVJ(2,2) =(J(1,1)*J(3,3)-J(1,3)*J(3,1))/DETJ
        263     2                             INVJ(2,3) =(J(1,3)*J(2,1)-J(1,1)*J(2,3))/DETJ
        264     2                             INVJ(3,1) =(J(2,1)*J(3,2)-J(2,2)*J(3,1))/DETJ
        265     2                             INVJ(3,2) =(J(1,2)*J(3,1)-J(1,1)*J(3,2))/DETJ
        266     2                             INVJ(3,3) =(J(1,1)*J(2,2)-J(1,2)*J(2,1))/DETJ
        267     2               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        268     3       f                     DO 1500 II=1,3
        269     3       f                         TMP=0.
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
        270     4       f                         DO 1510 JJ=1,3
        271     4       f                             TMP =TMP +INVJ(JJ,II)*DX(JJ)
        272     4       f        1510             CONTINUE
        273     3       f                         DXI(II)=TMP
        274     3       f                          XI(II)=XI(II)+DXI(II)
        275     3       f        1500         CONTINUE
        276     2               C
        277     3                             IF( JHEX.EQ.1
        278     3                    *         .AND. (XI(1).GE.-1-TINY)
        279     3                    *         .AND. (XI(1).LE.+1+TINY)
        280     3                    *         .AND. (XI(2).GE.-1-TINY)
        281     3                    *         .AND. (XI(2).LE.+1+TINY)
        282     3                    *         .AND. (XI(3).GE.-1-TINY)
        283     3                    *         .AND. (XI(3).LE.+1+TINY) ) THEN
        284     3                                 IFOUND=1
        285     3                             ELSE IF(JWED.EQ.1
        286     3                    *         .AND. (XI(1).GE. 0-TINY)
        287     3                    *         .AND. (XI(1).LE.+1+TINY)
        288     3                    *         .AND. (XI(2).GE. 0-TINY)
        289     3                    *         .AND. (XI(2).LE.+1+TINY)
        290     3                    *         .AND. (XI(3).GE.-1-TINY)
        291     3                    *         .AND. (XI(3).LE.+1+TINY)
        292     3                    *         .AND. (XI(1)+XI(2).LE.+1+TINY) ) THEN
        293     3                                 IFOUND=1
        294     3                             ELSE IF(JPRD.EQ.1
        295     3                    *         .AND. (XI(1).GE.-1.+XI(3)-TINY)
        296     3                    *         .AND. (XI(1).LE. 1.-XI(3)+TINY)
        297     3                    *         .AND. (XI(2).GE.-1.+XI(3)-TINY)
        298     3                    *         .AND. (XI(2).LE. 1.-XI(3)+TINY)
        299     3                    *         .AND. (XI(3).GE. 0.-TINY)
        300     3                    *         .AND. (XI(3).LE. 1.+TINY) ) THEN
        301     3                                 IFOUND=1
        302     3                             ELSE IF(JTET.EQ.1
        303     3                    *         .AND. (XI(1).GE.0.-TINY)
        304     3                    *         .AND. (XI(1).LE.1.+TINY)
        305     3                    *         .AND. (XI(2).GE.0.-TINY)
        306     3                    *         .AND. (XI(2).LE.1.+TINY)
        307     3                    *         .AND. (XI(3).GE.0.-TINY)
        308     3                    *         .AND. (XI(3).LE.1.+TINY)
        309     3                    *         .AND. (XI(1)+XI(2)+XI(3).LE.1+TINY) ) THEN
        310     3                                 IFOUND=1
        311     3                             ENDIF
        312     2               C
        313     2               ***** CHECK FOUND *****
        314     3                         IF( IFOUND.EQ.1 ) THEN
        315     3                             EN =IE
        316     3                             GP =XI(1)
        317     3                             EP =XI(2)
        318     3                             TP =XI(3)
        319     3                             RETURN
        320     3                         ENDIF
        321     2               C
        322     2                1200     CONTINUE
        323     1                1000 CONTINUE
        324                     C
        325                     *********************
        326                     ***** NOT FOUND *****
        327                     *********************
        328                           EN=0
        329                           RETURN
        330                           END

 Diagnostic messages: program name(FNDSSB)
   jwd8220o-i  "fndssb.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "fndssb.f", line 7: この名前'IP'は、宣言だけされていて引用されていません。
   jwd5131p-i  "fndssb.f", line 58: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8209o-i  "fndssb.f", line 62: 多項式の演算順序を変更しました。
   jwd5131p-i  "fndssb.f", line 70: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "fndssb.f", line 70: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "fndssb.f", line 70: ループをフルアンローリングしました。
   jwd8209o-i  "fndssb.f", line 75: 多項式の演算順序を変更しました。
   jwd5143p-i  "fndssb.f", line 114: DOループの繰返し数が少ないため、このDOループは並列化できません。
   jwd6001s-i  "fndssb.f", line 114: このDOループをSIMD化しました。(名前:II)
   jwd8674o-i  "fndssb.f", line 114: ループの繰返し数が96回より小さく、最適化の効果を得られないため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "fndssb.f", line 114: ループを展開数2回でアンローリングしました。
   jwd5131p-i  "fndssb.f", line 121: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd8209o-i  "fndssb.f", line 123: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 124: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 125: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 126: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 127: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 128: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 129: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 130: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 134: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 137: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 142: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 143: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 144: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 145: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 148: 多項式の演算順序を変更しました。
   jwd5006p-i  "fndssb.f", line 154: 並列化したループの繰返し数が3回のため、4並列以上の並列効果は得られません。
   jwd5001p-i  "fndssb.f", line 154: このDOループを並列化しました。(名前:II)
   jwd6004s-i  "fndssb.f", line 156: リダクション演算を含むDOループをSIMD化しました。(名前:JJ)
   jwd8674o-i  "fndssb.f", line 156: ループの繰返し数が384回より小さく、最適化の効果を得られないため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "fndssb.f", line 156: ループを展開数8回でアンローリングしました。
   jwd8208o-i  "fndssb.f", line 157: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8209o-i  "fndssb.f", line 204: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 205: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 206: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 212: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 214: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 218: 多項式の演算順序を変更しました。
   jwd8209o-i  "fndssb.f", line 220: 多項式の演算順序を変更しました。
   jwd5006p-i  "fndssb.f", line 245: 並列化したループの繰返し数が3回のため、4並列以上の並列効果は得られません。
   jwd5001p-i  "fndssb.f", line 245: このDOループを並列化しました。(名前:II)
   jwd6004s-i  "fndssb.f", line 248: リダクション演算を含むDOループをSIMD化しました。(名前:KK)
   jwd8674o-i  "fndssb.f", line 248: ループの繰返し数が384回より小さく、最適化の効果を得られないため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "fndssb.f", line 248: ループを展開数8回でアンローリングしました。
   jwd8208o-i  "fndssb.f", line 249: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8209o-i  "fndssb.f", line 255: 多項式の演算順序を変更しました。
   jwd8206o-i  "fndssb.f", line 258: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 259: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 260: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 261: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 262: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 263: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 264: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 265: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "fndssb.f", line 266: 除算を逆数の乗算に変更しました。
   jwd8203o-i  "fndssb.f", line 268: ループをフルアンローリングしました。
   jwd8203o-i  "fndssb.f", line 270: ループをフルアンローリングしました。
   jwd8209o-i  "fndssb.f", line 294: 多項式の演算順序を変更しました。

 Procedure information
   Lines      : 330
   Statements : 245
   Stack(byte): 1776
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 330
   Total statements : 245
   Total stack(byte): 1776
   Total prefetch num: 0

