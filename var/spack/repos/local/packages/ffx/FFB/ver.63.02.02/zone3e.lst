
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:30 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : zone3e.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "ZONE3E"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : ZONE3E                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY C.KATO              C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE ZONE3E(X,Y,Z,NODE,NE,NP,N2,NDIVX,NDIVY,NDIVZ,
         16                          *                  EPS,BLKMIN,MAX,MZ,
         17                          *                  IELIST,ISTART,NEZ,NEZMAX,NEZAVR,NZEFF,NZ,
         18                          *                  XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,IEBUF,IUT0,IERR)
         19                     C
         20                           IMPLICIT NONE
         21                     C
         22                           INTEGER*4 NODE,NE,NP,N2,NDIVX,NDIVY,NDIVZ,MAX,MZ,
         23                          *          IELIST,ISTART,NEZ,NEZMAX,NEZAVR,NZEFF,NZ,
         24                          *          IEBUF,IUT0,IERR
         25                           REAL*4    X,Y,Z,EPS,BLKMIN,XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX
         26                     C
         27                           INTEGER*4 I,IZ,IBUF,IE,IP,NBUF,
         28                          *          INXMIN,INYMIN,INZMIN,INXMAX,INYMAX,INZMAX,INX,INY,INZ
         29                           REAL*4    XEMIN,YEMIN,ZEMIN,XEMAX,YEMAX,ZEMAX,DELX,DELY,DELZ
         30                     C
         31                           DIMENSION X(NP),Y(NP),Z(NP),NODE(N2,NE),IELIST(MAX),ISTART(MZ),
         32                          1          NEZ(MZ),IEBUF(MAX)
         33                     C
         34                           CHARACTER*60 ERMSGB
         35                          & / ' ## SUBROUTINE ZONE3E: FATAL      ERROR OCCURENCE; RETURNED' /
         36                     C
         37                           CHARACTER*60 EREXP1
         38                          & / ' NUMBER OF ZONES TO BE GENERATED HAS EXCEEDED THE LIMIT OF ' /
         39                           CHARACTER*60 EREXP2
         40                          & / ' NUMBER OF ARRAY ELEMENTS HAS EXCEEDED THE LIMIT OF        ' /
         41                     C
         42                     C
         43                     C      GENERATE ZONAL ELEMENT LIST IN ONE-DIMENSIONAL ARRAY
         44                     C
         45                     C
         46                     C     ARGUMENT LISTINGS
         47                     C       (1) INPUT
         48                     C          X       (IP); X-DIR. COORDINATE OF NODE
         49                     C          Y       (IP); Y-DIR. COORDINATE OF NODE
         50                     C          Z       (IP); Z-DIR. COORDINATE OF NODE
         51                     C          NODE  (I,IE); NODE TABLE
         52                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         53                     C          NP          ; NUMBER OF TOTAL    NODES
         54                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         55                     C
         56                     C          NDIVX       ; NUMBER OF ZONE DIVISIONS IN X-DIRECTION
         57                     C          NDIVY       ; NUMBER OF ZONE DIVISIONS IN Y-DIRECTION
         58                     C          NDIVZ       ; NUMBER OF ZONE DIVISIONS IN Z-DIRECTION
         59                     C          EPS         ; OVERLAPING MARGIN OF TWO ADJACENT ZONES
         60                     C
         61                     C          MAX         ; DIMENSION LIMIT FOR ARRAYS 'IELIST' AND 'IEBUF'
         62                     C          MZ          ; MAXIMUM NUMBER OF ZONES TO BE GENERATED
         63                     C
         64                     C       (2) OUTPUT
         65                     C          IELIST(IBUF); ELEMENT NUMBERS INCLUDED IN EACH ZONE
         66                     C          ISTART  (IZ); ENTRY POINT IN ZONE LIST ARRAY 'IELIST'
         67                     C          NEZ     (IZ); NUMBER OF ELEMENTS INCLUDED IN ZONE 'IZ'
         68                     C          NEZMAX      ; MAXIMUM NUMBER OF ELEMENTS IN A ZONE
         69                     C          NEZAVR      ; AVERAGE NUMBER OF ELEMENTS IN AN EFFECTIVE ZONE
         70                     C          NZEFF       ; NUMBER OF EFFECTIVE ZONES
         71                     C          NZ          ; NUMBER OF ZONES GENERATED (=NDIVX*NDIVY*NDIVZ)
         72                     C
         73                     C          XMIN        ; X-DIRECTION LOWER BOUND OF THE GIVEN MESH
         74                     C          YMIN        ; Y-DIRECTION LOWER BOUND OF THE GIVEN MESH
         75                     C          ZMIN        ; Z-DIRECTION LOWER BOUND OF THE GIVEN MESH
         76                     C
         77                     C          XMAX        ; X-DIRECTION UPPER BOUND OF THE GIVEN MESH
         78                     C          YMAX        ; Y-DIRECTION UPPER BOUND OF THE GIVEN MESH
         79                     C          ZMAX        ; Z-DIRECTION UPPER BOUND OF THE GIVEN MESH
         80                     C
         81                     C          IERR        ; RETURN CODE WHOSE VALUE WILL BE EITHER
         82                     C                   0 --- INDICATING SUCCESSFUL TERMINATION
         83                     C                OR 1 --- INDICATING OCCURRENCE OF SOME ERROR CONDITIONS
         84                     C
         85                     C       (4) WORK
         86                     C          IEBUF (IBUF); TEMPORARILY STORES ZONE NUMBERS FOR ELEMENTS
         87                     C
         88                     C
         89                           IERR = 0
         90                     C
         91                     C
         92                     C
         93                     C CHECK NUMBER OF ZONES TO BE GENERATED
         94                     C
         95                     C
         96                     C
         97                           NZ = NDIVX*NDIVY*NDIVZ
         98     1                     IF(NZ.GT.MZ) THEN
         99     1                         WRITE(IUT0,*) ERMSGB
        100     1                         WRITE(IUT0,*) 'NDIVX',NDIVX
        101     1                         WRITE(IUT0,*) 'NDIVX',NDIVY
        102     1                         WRITE(IUT0,*) 'NDIVX',NDIVZ
        103     1                         WRITE(IUT0,*) EREXP1, MZ
        104     1                         IERR = 1
        105     1                         RETURN
        106     1                     ENDIF
        107                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IEBUF, IELIST
                              <<< Loop-information  End >>>
        108     1  pp   2v            DO 50 I=1,MAX
        109     1   p   2v                IELIST(I)=0
        110     1   p   2v                IEBUF (I)=0
        111     1   p   2v       50   CONTINUE
        112                     C
        113                           DELX = EPS*(XMAX-XMIN)/NDIVX
        114                           DELY = EPS*(YMAX-YMIN)/NDIVY
        115                           DELZ = EPS*(ZMAX-ZMIN)/NDIVZ
        116                     C
        117                           IF(DELX.LT.BLKMIN) DELX=BLKMIN
        118                           IF(DELY.LT.BLKMIN) DELY=BLKMIN
        119                           IF(DELZ.LT.BLKMIN) DELZ=BLKMIN
        120                     C
        121                     C
        122                     C
        123                     C FIRST, SCATTER EACH ELEMENTS TO APPROPRIATE ZONE(S)
        124                     C
        125                     C
        126                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NEZ
                              <<< Loop-information  End >>>
        127     1  pp   4v            DO 200 IZ = 1 , NZ
        128     1   p   4v                NEZ(IZ) = 0
        129     1   p   4v        200 CONTINUE
        130                     C
        131                           IBUF = 0
        132     1                     DO 250 IE = 1 , NE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
        133     2   s    s                DO 210 I = 1 , N2
        134     2   p    v                    IP = NODE(I,IE)
        135     2   p    v                    IF (IP.EQ.0) GOTO 210
        136     2   m    m                    IF(I.EQ.1 .OR. X(IP).LE.XEMIN) XEMIN = X(IP)
        137     2   m    m                    IF(I.EQ.1 .OR. Y(IP).LE.YEMIN) YEMIN = Y(IP)
        138     2   m    m                    IF(I.EQ.1 .OR. Z(IP).LE.ZEMIN) ZEMIN = Z(IP)
        139     2               C
        140     2   m    m                    IF(I.EQ.1 .OR. X(IP).GE.XEMAX) XEMAX = X(IP)
        141     2   m    m                    IF(I.EQ.1 .OR. Y(IP).GE.YEMAX) YEMAX = Y(IP)
        142     2   m    m                    IF(I.EQ.1 .OR. Z(IP).GE.ZEMAX) ZEMAX = Z(IP)
        143     2   p    v        210     CONTINUE
        144     1               C
        145     1                         INXMIN = NDIVX*(XEMIN-XMIN-DELX)/(XMAX-XMIN)+1
        146     1                         INYMIN = NDIVY*(YEMIN-YMIN-DELY)/(YMAX-YMIN)+1
        147     1                         INZMIN = NDIVZ*(ZEMIN-ZMIN-DELZ)/(ZMAX-ZMIN)+1
        148     1               C
        149     1                         INXMAX = NDIVX*(XEMAX-XMIN+DELX)/(XMAX-XMIN)+1
        150     1                         INYMAX = NDIVY*(YEMAX-YMIN+DELY)/(YMAX-YMIN)+1
        151     1                         INZMAX = NDIVZ*(ZEMAX-ZMIN+DELZ)/(ZMAX-ZMIN)+1
        152     1               C
        153     1                         IF(INXMIN.LT.1) INXMIN = 1
        154     1                         IF(INYMIN.LT.1) INYMIN = 1
        155     1                         IF(INZMIN.LT.1) INZMIN = 1
        156     1               C
        157     1                         IF(INXMAX.GT.NDIVX) INXMAX = NDIVX
        158     1                         IF(INYMAX.GT.NDIVY) INYMAX = NDIVY
        159     1                         IF(INZMAX.GT.NDIVZ) INZMAX = NDIVZ
        160     1               C
        161     2                         DO 240 INZ = INZMIN , INZMAX
        162     3                             DO 230 INY = INYMIN , INYMAX
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NEZ
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 1
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        163     4                                 DO 220 INX = INXMIN , INXMAX
        164     4                                     IZ = (INZ-1)*(NDIVX*NDIVY)+(INY-1)*NDIVX+INX
        165     4                                     NEZ(IZ) = NEZ(IZ)+1
        166     4               C
        167     4                                     IBUF = IBUF+1
        168     4               C
        169     5                                     IF(IBUF.GT.MAX) THEN
        170     5                                         WRITE(IUT0,*) ERMSGB
        171     5                                         WRITE(IUT0,*) EREXP2, MAX
        172     5                                         WRITE(IUT0,*) '    IE=', IE, '    NE=', NE
        173     5                                         IERR = 1
        174     5                                         RETURN
        175     5                                     ENDIF
        176     4               C
        177     4                                     IEBUF(IBUF) = IZ
        178     4                 220             CONTINUE
        179     3                 230         CONTINUE
        180     2                 240     CONTINUE
        181     1               C
        182     1                         IBUF = IBUF+1
        183     2                         IF(IBUF.GT.MAX) THEN
        184     2                             WRITE(IUT0,*) ERMSGB
        185     2                             WRITE(IUT0,*) EREXP2, MAX
        186     2                             WRITE(IUT0,*) '    IE=', IE, '    NE=', NE
        187     2                             IERR = 1
        188     2                             RETURN
        189     2                         ENDIF
        190     1                         IEBUF(IBUF) = 0
        191     1                 250 CONTINUE
        192                           NBUF = IBUF
        193                     C
        194                           NEZAVR = 0
        195                           NEZMAX = 0
        196                           NZEFF  = 0
        197                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 500
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
        198     1   m    v            DO 260 IZ = 1 , NZ
        199     1   p    v                IF(NEZ(IZ).EQ.0) GO TO 260
        200     1   p    v                NZEFF = NZEFF+1
        201     1   p    v                NEZAVR = NEZAVR+NEZ(IZ)
        202     1   s    m                IF(NEZ(IZ).GE.NEZMAX) NEZMAX = NEZ(IZ)
        203     1   p    v        260 CONTINUE
        204                     C
        205     1                     IF(NZEFF.NE.0) THEN
        206     1                         NEZAVR = NEZAVR/NZEFF
        207     1                     ELSE
        208     1                         NEZAVR = 0
        209     1                     ENDIF
        210                     C
        211                     C
        212                     C
        213                     C THEN, COMPUTE POINTERS TO EACH ZONE ENTRY ADDRESS (IN WORDS)
        214                     C
        215                     C
        216                     C
        217                           ISTART(1) = 1
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 3.33, ITR: 12, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      ISTART, NEZ
                              <<< Loop-information  End >>>
        218     1   s   2s            DO 310 IZ = 2 , NZ
        219     1   s   2s                ISTART(IZ) = ISTART(IZ-1)+NEZ(IZ-1)
        220     1   s   2s        310 CONTINUE
        221                     C
        222                     C
        223                     C
        224                     C FINALLY, SCAN SCATTERED LIST 'IEBUF(IBUF)' TO GENERATE ZONE LIST
        225                     C
        226                     C
        227                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NEZ
                              <<< Loop-information  End >>>
        228     1  pp   4v            DO 400 IZ = 1 , NZ
        229     1   p   4v                NEZ(IZ) = 0
        230     1   p   4v        400 CONTINUE
        231                     C
        232                           IE = 1
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IEBUF
                              <<< Loop-information  End >>>
        233     1       2s            DO 410 IBUF = 1 , NBUF
        234     2       2m                IF(IEBUF(IBUF).EQ.0) THEN
        235     2       2s                    IE = IE+1
        236     2       2s                    GO TO 410
        237     2       2s                ENDIF
        238     1               C
        239     1       2s                IZ = IEBUF(IBUF)
        240     1       2s                NEZ(IZ) = NEZ(IZ)+1
        241     1       2s                IELIST(ISTART(IZ)+NEZ(IZ)-1) = IE
        242     1       2v        410 CONTINUE
        243                     C
        244                     C
        245                           RETURN
        246                           END

 Diagnostic messages: program name(ZONE3E)
   jwd8220o-i  "zone3e.f", line 15: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "zone3e.f", line 108: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "zone3e.f", line 108: このDOループをSIMD化しました。(名前:I)
   jwd8663o-i  "zone3e.f", line 108: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "zone3e.f", line 108: ループを展開数2回でアンローリングしました。
   jwd8209o-i  "zone3e.f", line 113: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 114: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 115: 多項式の演算順序を変更しました。
   jwd5001p-i  "zone3e.f", line 127: このDOループを並列化しました。(名前:IZ)
   jwd6001s-i  "zone3e.f", line 127: このDOループをSIMD化しました。(名前:IZ)
   jwd8663o-i  "zone3e.f", line 127: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "zone3e.f", line 127: ループを展開数4回でアンローリングしました。
   jwd5131p-i  "zone3e.f", line 132: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6229s-i  "zone3e.f", line 133: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "zone3e.f", line 133: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd5202p-i  "zone3e.f", line 136: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:XEMIN)
   jwd6202s-i  "zone3e.f", line 136: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:XEMIN)
   jwd5202p-i  "zone3e.f", line 137: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:YEMIN)
   jwd6202s-i  "zone3e.f", line 137: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:YEMIN)
   jwd5202p-i  "zone3e.f", line 138: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:ZEMIN)
   jwd6202s-i  "zone3e.f", line 138: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ZEMIN)
   jwd5202p-i  "zone3e.f", line 140: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:XEMAX)
   jwd6202s-i  "zone3e.f", line 140: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:XEMAX)
   jwd5202p-i  "zone3e.f", line 141: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:YEMAX)
   jwd6202s-i  "zone3e.f", line 141: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:YEMAX)
   jwd5202p-i  "zone3e.f", line 142: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:ZEMAX)
   jwd6202s-i  "zone3e.f", line 142: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ZEMAX)
   jwd8209o-i  "zone3e.f", line 145: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 146: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 147: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 149: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 150: 多項式の演算順序を変更しました。
   jwd8209o-i  "zone3e.f", line 151: 多項式の演算順序を変更しました。
   jwd5131p-i  "zone3e.f", line 161: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "zone3e.f", line 162: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "zone3e.f", line 163: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "zone3e.f", line 163: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "zone3e.f", line 163: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5005p-i  "zone3e.f", line 198: このDOループを部分的に並列化しました。(名前:IZ)
   jwd5004p-i  "zone3e.f", line 198: リダクション演算を含むDOループを並列化しました。(名前:IZ)
   jwd6004s-i  "zone3e.f", line 198: リダクション演算を含むDOループをSIMD化しました。(名前:IZ)
   jwd6302s-i  "zone3e.f", line 198: 部分的なSIMD化による性能向上が得られない可能性があるため、このDOループのSIMD化を抑止しました。
   jwd6229s-i  "zone3e.f", line 198: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd5202p-i  "zone3e.f", line 202: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NEZMAX)
   jwd6202s-i  "zone3e.f", line 202: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:NEZMAX)
   jwd8204o-i  "zone3e.f", line 218: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "zone3e.f", line 218: ループの繰返し数が12回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5202p-i  "zone3e.f", line 219: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:ISTART)
   jwd6202s-i  "zone3e.f", line 219: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ISTART)
   jwd5001p-i  "zone3e.f", line 228: このDOループを並列化しました。(名前:IZ)
   jwd6001s-i  "zone3e.f", line 228: このDOループをSIMD化しました。(名前:IZ)
   jwd8663o-i  "zone3e.f", line 228: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "zone3e.f", line 228: ループを展開数4回でアンローリングしました。
   jwd5208p-i  "zone3e.f", line 233: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:IE)
   jwd6229s-i  "zone3e.f", line 233: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "zone3e.f", line 233: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "zone3e.f", line 233: ループを展開数2回でアンローリングしました。
   jwd6202s-i  "zone3e.f", line 235: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:IE)
   jwd6228s-i  "zone3e.f", line 240: データの定義引用の順序が逐次実行と異なる可能性があるため、このDOループはSIMD化できません。

 Procedure information
   Lines      : 246
   Statements : 119
   Stack(byte): 30096
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 246
   Total statements : 119
   Total stack(byte): 30096
   Total prefetch num: 0

