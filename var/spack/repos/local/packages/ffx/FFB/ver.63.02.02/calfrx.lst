
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:52:54 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : calfrx.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "CALFRX"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE CALFRX(IPART,N2,NE,NP,NS,NSP,NODE,LOCAL,
          2                          *                  U,V,W,PN,
          3                          *                  NEINLT,LEINLT,XNINLT,YNINLT,ZNINLT,AEINLT,
          4                          *                  NEFREE,LEFREE,XNFREE,YNFREE,ZNFREE,AEFREE,
          5                          *                  QINLT,QFREE,PINLT,IUT0,IERR)
          6                           IMPLICIT NONE
          7                     C
          8                           INTEGER*4 IPART,N2,NEINLT,NEFREE,NE,NP,NS,NSP,IUT0,IERR
          9                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4),
         10                          *          LEINLT(2,NEINLT),LEFREE(2,NEFREE)
         11                           REAL*4    U(NP),V(NP),W(NP),PN(NP),
         12                          *          XNINLT(NEINLT),YNINLT(NEINLT),ZNINLT(NEINLT),
         13                          *          AEINLT(NEINLT),
         14                          *          XNFREE(NEFREE),YNFREE(NEFREE),ZNFREE(NEFREE),
         15                          *          AEFREE(NEFREE)
         16                           REAL*4    QINLT,PINLT,QFREE,PFREE,BUF1,BUF2
         17                     C
         18                           INTEGER*4 IBE,IE,IS,IP,IETYPE,NNPS,I
         19                           REAL*4    UBUF,VBUF,WBUF,PBUF,DQ
         20                     C
         21                           IERR=0
         22                     C
         23                           QINLT=0.0E0
         24                           PINLT=0.0E0
         25     1                     DO 1000 IBE = 1 , NEINLT
         26     1                         IE = LEINLT(1,IBE)
         27     1                         IS = LEINLT(2,IBE)
         28     2                         IF(     NODE(8,IE).GE.1) THEN ! HEX
         29     2                            IETYPE = 4
         30     2                         ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         31     2                            IETYPE = 3
         32     2                         ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         33     2                            IETYPE = 2
         34     2                         ELSE                          ! TET
         35     2                            IETYPE = 1
         36     2                         ENDIF
         37     2                         IF(LOCAL(4,IS,IETYPE).GE.1) THEN ! QUADRILATERAL
         38     2                            NNPS = 4
         39     2                         ELSE                             ! TRIANGLE
         40     2                            NNPS = 3
         41     2                         ENDIF
         42     1                         UBUF=0.0E0
         43     1                         VBUF=0.0E0
         44     1                         WBUF=0.0E0
         45     1                         PBUF=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 458
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         46     2  pp    v                DO 1100 I = 1 , NNPS
         47     2   p    v                    IP = NODE(LOCAL(I,IS,IETYPE),IE)
         48     2   p    v                    UBUF = UBUF + U (IP)
         49     2   p    v                    VBUF = VBUF + V (IP)
         50     2   p    v                    WBUF = WBUF + W (IP)
         51     2   p    v                    PBUF = PBUF + PN(IP)
         52     2   p    v       1100     CONTINUE
         53     1                         UBUF=UBUF/FLOAT(NNPS)
         54     1                         VBUF=VBUF/FLOAT(NNPS)
         55     1                         WBUF=WBUF/FLOAT(NNPS)
         56     1               CCYYMOD.20131201---
         57     1                         PBUF=PBUF/FLOAT(NNPS)
         58     1               CCYYMOD.20131201---
         59     1                         DQ =( UBUF*XNINLT(IBE)
         60     1                    *         +VBUF*YNINLT(IBE)
         61     1                    *         +WBUF*ZNINLT(IBE))*AEINLT(IBE)
         62     1                         QINLT=QINLT+DQ
         63     1                         PINLT=PINLT+DQ*PBUF
         64     1                1000 CONTINUE
         65     1                     IF(IPART.GE.1)THEN
         66     1                         CALL DDCOM2(QINLT,BUF1)
         67     1                         CALL DDCOM2(PINLT,BUF2)
         68     1                         QINLT=BUF1
         69     1                         PINLT=BUF2
         70     1                     ENDIF
         71     1                     IF(QINLT.EQ.0.0E0) THEN
         72     1                         PINLT=0.0E0
         73     1                     ELSE
         74     1                         PINLT=PINLT/QINLT
         75     1                     ENDIF
         76                     C
         77                     C     IF(NEINLT.EQ.0) PINLT=0.0E0
         78                     C
         79                           QFREE=0.0E0
         80                           PFREE=0.0E0
         81     1                     DO 2000 IBE = 1 , NEFREE
         82     1                         IE = LEFREE(1,IBE)
         83     1                         IS = LEFREE(2,IBE)
         84     2                         IF(     NODE(8,IE).GE.1) THEN ! HEX
         85     2                            IETYPE = 4
         86     2                         ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         87     2                            IETYPE = 3
         88     2                         ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         89     2                            IETYPE = 2
         90     2                         ELSE                          ! TET
         91     2                            IETYPE = 1
         92     2                         ENDIF
         93     2                         IF(LOCAL(4,IS,IETYPE).GE.1) THEN ! QUADRILATERAL
         94     2                            NNPS = 4
         95     2                         ELSE                             ! TRIANGLE
         96     2                            NNPS = 3
         97     2                         ENDIF
         98     1                         UBUF=0.0E0
         99     1                         VBUF=0.0E0
        100     1                         WBUF=0.0E0
        101     1                         PBUF=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 458
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
        102     2  pp    v                DO 2100 I = 1 , NNPS
        103     2   p    v                    IP = NODE(LOCAL(I,IS,IETYPE),IE)
        104     2   p    v                    UBUF = UBUF + U (IP)
        105     2   p    v                    VBUF = VBUF + V (IP)
        106     2   p    v                    WBUF = WBUF + W (IP)
        107     2   p    v                    PBUF = PBUF + PN(IP)
        108     2   p    v       2100     CONTINUE
        109     1                         UBUF=UBUF/FLOAT(NNPS)
        110     1                         VBUF=VBUF/FLOAT(NNPS)
        111     1                         WBUF=WBUF/FLOAT(NNPS)
        112     1               CCYYMOD.20131201---
        113     1                         PBUF=PBUF/FLOAT(NNPS)
        114     1               CCYYMOD.20131201---
        115     1                         DQ =-( UBUF*XNFREE(IBE)
        116     1                    *          +VBUF*YNFREE(IBE)
        117     1                    *          +WBUF*ZNFREE(IBE))*AEFREE(IBE)
        118     1                         QFREE=QFREE+DQ
        119     1                         PFREE=PFREE+DQ*PBUF
        120     1                2000 CONTINUE
        121     1                     IF(IPART.GE.1)THEN
        122     1                         CALL DDCOM2(QFREE,BUF1)
        123     1                         CALL DDCOM2(PFREE,BUF2)
        124     1                         QFREE=BUF1
        125     1                         PFREE=BUF2
        126     1                     ENDIF
        127                           PFREE=PFREE/QFREE
        128                     C
        129                           RETURN
        130                           END

 Diagnostic messages: program name(CALFRX)
   jwd2008i-i  "calfrx.f", line 1: この仮引数'IUT0'は、副プログラム中で使用されていません。
   jwd8220o-i  "calfrx.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd5202p-i  "calfrx.f", line 25: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:QINLT)
   jwd5202p-i  "calfrx.f", line 25: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:PINLT)
   jwd5004p-i  "calfrx.f", line 46: リダクション演算を含むDOループを並列化しました。(名前:I)
   jwd6004s-i  "calfrx.f", line 46: リダクション演算を含むDOループをSIMD化しました。(名前:I)
   jwd8209o-i  "calfrx.f", line 47: 多項式の演算順序を変更しました。
   jwd8206o-i  "calfrx.f", line 57: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "calfrx.f", line 59: 多項式の演算順序を変更しました。
   jwd8206o-i  "calfrx.f", line 59: 除算を逆数の乗算に変更しました。
   jwd5202p-i  "calfrx.f", line 81: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:PFREE)
   jwd5202p-i  "calfrx.f", line 81: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:QFREE)
   jwd5004p-i  "calfrx.f", line 102: リダクション演算を含むDOループを並列化しました。(名前:I)
   jwd6004s-i  "calfrx.f", line 102: リダクション演算を含むDOループをSIMD化しました。(名前:I)
   jwd8209o-i  "calfrx.f", line 103: 多項式の演算順序を変更しました。
   jwd8206o-i  "calfrx.f", line 113: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "calfrx.f", line 115: 多項式の演算順序を変更しました。
   jwd8206o-i  "calfrx.f", line 115: 除算を逆数の乗算に変更しました。

 Procedure information
   Lines      : 130
   Statements : 105
   Stack(byte): 107872
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 130
   Total statements : 105
   Total stack(byte): 107872
   Total prefetch num: 0

