
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:52:53 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : caldnr.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "CALDNR"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE  CALDNR(ITIME,EPSSU,EPSSP,NP,
          2                          *                   U,V,W,PN,UPREV,VPREV,WPREV,PNPREV,
          3                          *                   DNRU,DNRP,
          4                          *                   JCONVG,IUT0,IUT6,IERR)
          5                           IMPLICIT NONE
          6                     C
          7                           INTEGER*4 ITIME,NP,JCONVG,IUT0,IUT6,IERR
          8                     C
          9                           REAL*4    EPSSU,EPSSP,
         10                          *          U,V,W,PN,UPREV,VPREV,WPREV,PNPREV,DNRU,DNRP
         11                     C
         12                           INTEGER*4 IP,IOP,IFLAG
         13                     C
         14                           REAL*4    TMAGU,TMAGV,TMAGW,TMAGP,TMAGDU,TMAGDV,TMAGDW,TMAGDP,
         15                          *          TMGVA,TMGDVA,TMGPA,TMGDPA
         16                     C
         17                           DIMENSION U(NP),V(NP),W(NP),PN(NP),
         18                          *          UPREV(NP),VPREV(NP),WPREV(NP),PNPREV(NP)
         19                     #ifdef USE_TIMER
         20                           real*8 ts0, te0
         21                     
         22                           include 'timer.h'
         23                           include 'mpif.h'
         24                     
         25                           ncaldnr = ncaldnr + 1
         26                           tstart = MPI_WTIME()
         27                     #endif
         28                     C
         29                     C // AT FIRST STEP, SKIP EVALUATION OF L2-NORM OF DIFFERENCE
         30     1                     IF (ITIME.LE.1) THEN
         31     1                         GOTO 1000
         32     1                     ENDIF
         33                     C
         34                     C // INITIALIZE
         35                     C
         36                     C     // IN ORDER TO AVOID POSSIBLE DIVISION BY ZERO,
         37                     C     // INITIALIZED BY A SMALL POSITIVE VALUE.
         38                           TMAGU=1.0E-30
         39                           TMAGV=1.0E-30
         40                           TMAGW=1.0E-30
         41                           TMAGP=1.0E-30
         42                     C
         43                           TMAGDU=0.0E0
         44                           TMAGDV=0.0E0
         45                           TMAGDW=0.0E0
         46                           TMAGDP=0.0E0
         47                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 327
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         48     1  pp    v            DO 100 IP = 1, NP
         49     1   p    v                TMAGU = TMAGU + U (IP)**2
         50     1   p    v                TMAGV = TMAGV + V (IP)**2
         51     1   p    v                TMAGW = TMAGW + W (IP)**2
         52     1   p    v                TMAGP = TMAGP + PN(IP)**2
         53     1               C
         54     1   p    v                TMAGDU = TMAGDU + (U (IP) - UPREV (IP))**2
         55     1   p    v                TMAGDV = TMAGDV + (V (IP) - VPREV (IP))**2
         56     1   p    v                TMAGDW = TMAGDW + (W (IP) - WPREV (IP))**2
         57     1   p    v                TMAGDP = TMAGDP + (PN(IP) - PNPREV(IP))**2
         58     1   p    v       100  CONTINUE
         59                     C
         60                     C
         61                           TMAGV = TMAGU+TMAGV+TMAGW
         62                           TMAGDV = TMAGDU+TMAGDV+TMAGDW
         63                     C
         64                           TMGVA  = 0.0
         65                           TMGDVA = 0.0
         66                           TMGPA  = 0.0
         67                           TMGDPA = 0.0
         68                     C
         69                     C // SUMMALIZE ALL CPU-REGIONS
         70                           IOP=1
         71                     #ifdef USE_TIMER
         72                           tend = MPI_WTIME()
         73                           tcaldnr = tcaldnr + (tend - tstart)
         74                     #endif
         75                           CALL DDALLD(TMAGV ,TMGVA ,IOP,IUT0,IERR)
         76                           CALL DDALLD(TMAGDV,TMGDVA,IOP,IUT0,IERR)
         77                           CALL DDALLD(TMAGP ,TMGPA ,IOP,IUT0,IERR)
         78                           CALL DDALLD(TMAGDP,TMGDPA,IOP,IUT0,IERR)
         79                     #ifdef USE_TIMER
         80                           tstart = MPI_WTIME()
         81                     #endif
         82                     C
         83                           TMAGV  = TMGVA
         84                           TMAGDV = TMGDVA
         85                           TMAGP  = TMGPA
         86                           TMAGDP = TMGDPA
         87                     C
         88                     C // CALCULATE L2-NORM
         89                           DNRU = TMAGDV / TMAGV
         90                           DNRP = TMAGDP / TMAGP
         91                     C
         92                     C // CONVERGENCE CHECK FOR STATIC CALCULATION
         93                           IFLAG = 0
         94                     CC    WRITE(IUT6,*) "***CALDNR***"
         95                     CC    WRITE(IUT6,*) DNRU,DNRV,DNRW,DNRP
         96                     C
         97                      1000 CONTINUE
         98                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 552
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.83, ITR: 80, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      PN, U, PNPREV, WPREV, W, V, VPREV, UPREV
                              <<< Loop-information  End >>>
         99     1  pp    v            DO 2000 IP = 1, NP
        100     1   p    v               UPREV (IP) = U (IP)
        101     1   p    v               VPREV (IP) = V (IP)
        102     1   p    v               WPREV (IP) = W (IP)
        103     1   p    v               PNPREV(IP) = PN(IP)
        104     1   p    v       2000 CONTINUE
        105                     C
        106                     #ifdef USE_TIMER
        107                           tend = MPI_WTIME()
        108                           tcaldnr = tcaldnr + (tend - tstart)
        109                     #endif
        110                           RETURN
        111                           END

 Diagnostic messages: program name(CALDNR)
   jwd2003i-i  "/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include/timer.h", line 24: この名前'nclrcrs'は、INCLUDE内で宣言だけされていて引用されていません。
   jwd2003i-i  "/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include/timer.h", line 25: この名前'tclrcrs'は、INCLUDE内で宣言だけされていて引用されていません。
   jwd2008i-i  "caldnr.f", line 1: この仮引数'IUT6'は、副プログラム中で使用されていません。
   jwd2008i-i  "caldnr.f", line 1: この仮引数'JCONVG'は、副プログラム中で使用されていません。
   jwd2008i-i  "caldnr.f", line 1: この仮引数'EPSSP'は、副プログラム中で使用されていません。
   jwd2008i-i  "caldnr.f", line 1: この仮引数'EPSSU'は、副プログラム中で使用されていません。
   jwd8220o-i  "caldnr.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "caldnr.f", line 20: この名前'te0'は、宣言だけされていて引用されていません。
   jwd2006i-i  "caldnr.f", line 20: この名前'ts0'は、宣言だけされていて引用されていません。
   jwd5004p-i  "caldnr.f", line 48: リダクション演算を含むDOループを並列化しました。(名前:IP)
   jwd6004s-i  "caldnr.f", line 48: リダクション演算を含むDOループをSIMD化しました。(名前:IP)
   jwd8209o-i  "caldnr.f", line 61: 多項式の演算順序を変更しました。
   jwd8209o-i  "caldnr.f", line 62: 多項式の演算順序を変更しました。
   jwd5001p-i  "caldnr.f", line 99: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "caldnr.f", line 99: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "caldnr.f", line 99: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "caldnr.f", line 99: ループの繰返し数が80回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 4270
   Statements : 3383
   Stack(byte): 107760
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 4270
   Total statements : 3383
   Total stack(byte): 107760
   Total prefetch num: 0

