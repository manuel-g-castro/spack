
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:52:54 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : callap.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "CALLAP"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE CALLAP(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
          2                          *                  JSET,IPRESS,
          3                          *                  ME,MP,N1,N2,NE,NP,NEX,NODE,IEATTR,IPATTR,
          4                          *                  S,AS,PG,DNXYZP,DNXI,DNYI,DNZI,
          5                          *                  CM,X,Y,Z,OMEGA,TIMER,DT,FSMACH,ADIAG,
          6                          *                  NFRAME,UFRAME,VFRAME,WFRAME,
          7                          *                  IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
          8                          *                  NPFIX,LPFIX,LEFIX,
          9                          *                  NPSYMT,LPSYMT,XPSYMT,YPSYMT,ZPSYMT,
         10                          *                  NPSET,LPSET1,LPSET2,LPSET3,LPSET4,
         11                          *                  COVER1,COVER2,COVER3,
         12                          *                  NPSND,LPSND,NPTSND,
         13                          *                  NPRCV,LPRCV,NPTRCV,IPSET,IPSRC,
         14                          *                  FXYZ,RX,RY,MWRK,WRKN,
         15                          *                  NMRF,IFATTR,OMGMRF,AMRF,
         16                          *                  IVOF,IMASS,RHO3D,NSP,NS,LOCAL,
         17                          *                  NFACE,LFACE,AVEC,FFA,NFINLT,LFINLT,
         18                          *                  NFFREE,LFFREE,NPFREE,LPFREE,
         19                          *                  XPFREE,YPFREE,ZPFREE,
         20                          *                  NESET,NESND,NERCV,NBESET,LBESET,
         21                          *                  LESET1,LESET2,LESET3,
         22                          *                  EOVER1,EOVER2,EOVER3,
         23                          *                  LESND,NETSND,LERCV,NETRCV,IESET,IESRC,
         24                          *                  SN,SNESET,OSBCOE,XNESET,YNESET,ZNESET,
         25                          *                  SOSP,SOSWRK,WRKOS1,WRKOS2,FESRC,FLE,
         26                          *                  MEP,NEP,IENP,JENP,
         27                          *                  IUT0,IERR,DNXYZ,NUMVALID,LSTVALID)
         28                           IMPLICIT NONE
         29                     C
         30                           INTEGER*4 ICAVI
         31                           REAL*4    FESRC(NE),FLE(NE)
         32                     C
         33                     CCCC  [INPUT:LOOP]
         34                           INTEGER*4 MCOLOR,MCPART
         35                           INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
         36                     C
         37                     CCCC  [INPUT]
         38                           INTEGER*4 JSET,IPRESS,
         39                          *          ME,MP,N1,N2,NE,NP,NEX(8),NODE(N2,NE),
         40                          *          NFRAME,IEATTR(NE),IPATTR(NP),IUT0
         41                           INTEGER*4 MEP,NEP(NP),IENP(MEP,NP),JENP(MEP,NP)
         42                           REAL*4    S(NE),AS(NE),PG(NE),DNXYZP(MEP,3,NP),
         43                          *          DNXI(N1,ME),DNYI(N1,ME),DNZI(N1,ME),CM(NP),
         44                          *          X(NP),Y(NP),Z(NP),OMEGA,TIMER,DT,FSMACH,ADIAG(NP),
         45                          *          UFRAME(NFRAME),VFRAME(NFRAME),WFRAME(NFRAME)
         46                     C
         47                     CCCC  [INPUT:OVERSET NODE DATA]
         48                           INTEGER*4  NPSET,NPSND,NPRCV,
         49                          *           LPSET1(NPSET),LPSET2(NPSET),
         50                          *           LPSET3(NPSET),LPSET4(NPSET),
         51                          *           LPSND(NDOM),NPTSND(NDOM),LPRCV(NDOM),NPTRCV(NDOM),
         52                          *           IPSET(MBPDOM,NDOM),IPSRC(MBPDOM,NDOM)
         53                           REAL*4     COVER1(NPSET),COVER2(NPSET),COVER3(NPSET)
         54                     C
         55                     CCCC  [INPUT:OVERSET ELEMENT DATA]
         56                           INTEGER*4 NESET,NESND,NERCV,NBESET,LBESET(2,NBESET),
         57                          *          LESET1(NESET),LESET2(NESET),LESET3(NESET),
         58                          *          LESND(NDOM),NETSND(NDOM),LERCV(NDOM),NETRCV(NDOM),
         59                          *          IESET(MBPDOM,NDOM),IESRC(MBPDOM,NDOM)
         60                           REAL*4    EOVER1(NESET),EOVER2(NESET),EOVER3(NESET),
         61                          *          SN(N1,NE),SNESET(N1,NE),OSBCOE(NP),
         62                          *          XNESET(NBESET),YNESET(NBESET),ZNESET(NBESET),
         63                          *          SOSP(NP),SOSWRK(NE),WRKOS1(NE),WRKOS2(NE)
         64                     C
         65                     CCC [INPUT:INTER CONNECT NODES]
         66                           INTEGER*4 IPART,NDOM,MBPDOM,
         67                          *          LDOM(NDOM),NBPDOM(NDOM),
         68                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM)
         69                     C
         70                     CCC [INPUT:B.C. NODES]
         71                           INTEGER*4 NPFIX,LPFIX(NPFIX),LEFIX(NE),
         72                          *          NPSYMT,LPSYMT(NPSYMT)
         73                           REAL*4    XPSYMT(NPSYMT),YPSYMT(NPSYMT),ZPSYMT(NPSYMT)
         74                     C
         75                     C     [INPUT:VOF]
         76                           INTEGER*4 IVOF,IMASS,NFACE,NSP,NS,NFINLT,NFFREE,NPFREE
         77                           INTEGER*4 LOCAL,LFACE,LFINLT,LFFREE,LPFREE
         78                           REAL*4    RHO3D,AVEC,FFA,
         79                          *          XPFREE,YPFREE,ZPFREE
         80                     C
         81                     C     [INPUT:MRF]
         82                           INTEGER*4 NMRF
         83                           INTEGER*4 IFATTR(*)
         84                           REAL*4    OMGMRF(NMRF),AMRF(3,NMRF)
         85                     C
         86                     CCC [OUTPUT]
         87                           INTEGER*4 IERR
         88                           REAL*4    FXYZ(3,NP)
         89                     C
         90                     CCC [WORK]
         91                           REAL*4    RX(0:N2,ME),RY(0:N2,ME)
         92                           INTEGER*4 MWRK
         93                           REAL*4    WRKN(MWRK,9)
         94                     
         95                           REAL*4    DNXYZ(8,3,ME)
         96                     C
         97                           INTEGER*4 LSTVALID(MP)
         98                           INTEGER*4 NUMVALID
         99                     C
        100                     CCC [LOCAL]
        101                           INTEGER*4 IP,IE
        102                           REAL*4    COEF
        103                     C
        104                           INTEGER*4 IMODE
        105                           DATA IMODE   / 1 /
        106                     C
        107                           CHARACTER*60 ERMSGC
        108                          & /' ## SUBROUTINE CALLAP: FATAL      ERROR REPORT   ; RETURNED' /
        109                     C
        110                     #ifdef cputime
        111                           include 'mpif.h'
        112                     C
        113                           INTEGER*4 NUMLAP
        114                           REAL*4 DTLAPA,DTLAPR,DTLAP2
        115                           COMMON /CPULAP/ NUMLAP,DTLAPA,DTLAPR,DTLAP2
        116                           REAL*4 DTCPU,TBUF1,TBUF2,TBUF3
        117                     #endif
        118                     C
        119                     C     CAL. LAPLASIAN (DIVERGENCE OF GRADIENT)
        120                     C     OF VARIABLE DEFINED AT ELEMENTS
        121                     C
        122                     C     WRITTEN BY Y.YAMADE 2012.07.18
        123                     C
        124                     C
        125                     C     ARGUMENT LISTINGS
        126                     C
        127                     C (1) INPUT
        128                     C INT *4 MLOOP        ; MAX. NUMBER OF COLORS
        129                     C INT *4 NLOOP        ; NUMBER OF COLORS
        130                     C INT *4 LLOOP(I,4)   ; ADRESS OF COLOR LOOPS
        131                     C INT *4 JSET         ; OVERSET FLAG (0:OFF,LARGER THAN 1:ON)
        132                     C INT *4 ME           ; MAX. NUMBER OF TOTAL ELEMENTS
        133                     C INT *4 N            ; =8
        134                     C INT *4 N1           ; THE DIMENSION SIZE OF THE FIRST ELEMENTS OF THE
        135                     C INT *4 NE           ; NUMBER OF ELEMENTS
        136                     C INT *4 NP           ; NUMBER OF NODES
        137                     C INT *4 NEX       (I); INCLUDES NUMBER OF ELEMENTS AND NUMBER OF LOCAL NODES
        138                     C INT *4 NE           ; NUMBER OF ELEMENTS
        139                     C INT *4 NP           ; NUMBER OF NODES
        140                     C INT *4 NODE   (I,IE); NODE TABLE
        141                     C INT *4 NFRAME       ; NUMBER OF FRAMES
        142                     C INT *4 IEATTR   (IE); ELEMENT ATTIRBUTE DATA (-1:ROTATING, 0:STATIC)
        143                     C INT *4 IPATTR   (IP); NODE    ATTIRBUTE DATA (-1:ROTATING, 0:STATIC)
        144                     C INT *4 IUT0         ; FILE NUMBER TO REPORT ERROR OCCURENCE
        145                     C REAL*4 S        (IP); INPUT DATA
        146                     C REAL*4 DNX    (I,IE); INTEGRATED ELEMENT VECTOR OF NX
        147                     C REAL*4 DNY    (I,IE); INTEGRATED ELEMENT VECTOR OF NY
        148                     C REAL*4 DNZ    (I,IE); INTEGRATED ELEMENT VECTOR OF NZ
        149                     C REAL*4 DNXI   (I,IE); ELEMENT CENTER VALUE OF NX
        150                     C REAL*4 DNYI   (I,IE); ELEMENT CENTER VALUE OF NY
        151                     C REAL*4 DNZI   (I,IE); ELEMENT CENTER VALUE OF NZ
        152                     C REAL*4 CM       (IP); INVERSED LUMPED MASS MATRIX
        153                     C REAL*4 X        (IP); X-CORDINATE
        154                     C REAL*4 Y        (IP); Y-CORDINATE
        155                     C REAL*4 OMEGA        ; ANGULAR MOMENTUM
        156                     C REAL*4 TIMER        ; CURRENT TIME
        157                     C REAL*4 ADIAG    (NP); DIAGONAL TERM IN MOMENTUM EQ. (IN STEADY MODE)
        158                     C REAL*4 UFRAME (1,IF); X-DIR. VELOCITY    OF TRANSLATING FRAME 'IF'
        159                     C REAL*4 VFRAME (1,IF); Y-DIR. VELOCITY    OF TRANSLATING FRAME 'IF'
        160                     C REAL*4 WFRAME (1,IF); Z-DIR. VELOCITY    OF TRANSLATING FRAME 'IF'
        161                     C REAL*4 UFRAME (2,IF); X-DIR. ACCELERAION OF TRANSLATING FRAME 'IF'
        162                     C REAL*4 VFRAME (2,IF); Y-DIR. ACCELERAION OF TRANSLATING FRAME 'IF'
        163                     C REAL*4 WFRAME (2,IF); Z-DIR. ACCELERAION OF TRANSLATING FRAME 'IF'
        164                     C
        165                     C === B.C.-[1] ===    ; INTERCONNECT B.C.
        166                     C INT *4 IPART        ; SUB-DOMAIN NUMBER THAT THIS TASK SHOULD TAKE/IS
        167                     C                       TAKING CARE OF. IPART BEING SET ZERO MEANS THAT
        168                     C                       THE PROGRAM SHOULD RUN/IS RUNNING IN SERIAL
        169                     C                       MODE.
        170                     C INT *4 NDOM         ; NUMBER OF THE NERIBERING SUB-DOMAINS
        171                     C INT*4  MBPDOM       ; THE MAXIMUM NUMBER OF THE INTER-CONNECT
        172                     C                       BOUNDARY NODES FOR ONE NEIBERING SUB-DOMAIN
        173                     C INT *4 LDOM   (IDOM); NEIBERING SUB-DOMAIN NUMBER
        174                     C INT *4 NBPDOM (IDOM); NUMBER OF INTER-CONNECT BOUNDARY NODES
        175                     C                       SHARING WITH THE IDOM'TH NEIBERING SUB-DOMAIN,
        176                     C                       LDOM(IDOM)
        177                     C INT *4 IPSLF(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
        178                     C                       CALLING TASK'S SUB-DOMAIN, FOR THE IDOM'TH
        179                     C                       NEIBERING SUB-DOMAIN, LDOM(IDOM)
        180                     C INT *4 IPSND(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
        181                     C                       SUB-DOMAIN THAT IS RECEIVING THE CALLING
        182                     C                       TASK'S RESIDUALS.
        183                     C
        184                     C === B.C.-[2] ===    ; GRADIENT-ZETO B.C.
        185                     C INT *4 NPFIX        ; NUMBER OF FIX BOUNDARY NODES
        186                     C INT *4 LPFIX    (IB); FIX BOUNDARY NODES
        187                     C
        188                     C === B.C.-[3] ===    ; SYMMETRIC B.C.
        189                     C INT *4 NPSYMT       ; NUMBER OF SYMMETRIC BOUNDARY NODES
        190                     C INT *4 LPSYMT   (IB); SYMMETRIC BOUNDARY NODES
        191                     C REAL*4 XPSYMT   (IB); X-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
        192                     C REAL*4 YPSYMT   (IB); Y-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
        193                     C REAL*4 ZPSYMT   (IB); Z-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
        194                     C
        195                     C === B.C.-[4] ===    ; OVERSET B.C.
        196                     C INT *4 NPSET        : NUMBER OF OVERSET BOUNDARY NODES
        197                     C INT *4 NPSND        ; NUMBER OF DOMAINS TO SEND OVERSET NODE VALUE
        198                     C INT *4 NPRCV        ; NUMBER OF DOMAINS TO RECEIVE OVERSET NODE VALUE
        199                     C INT *4 LPSET1  (IBP); OVERSET BOUNDARY NODES
        200                     C INT *4 LPSET2  (IBP); ELEMENT NUMBER TO CALCULATE OVERSET VALUES
        201                     C INT *4 LPSET3  (IBP); DOMAIN NUMBER TO SEND/RECEIVE OVERSET VALUES
        202                     C                   0 --- CALCULATE AND SET OVERSET VALUE WITHIN THE
        203                     C                         SELF-DOMAIN
        204                     C          (POS. INT.)--- SEND    OVERSET VALUE TO   DOMAIN  LPSET3(IB)
        205                     C                         AFTER CALCULATING IT WITHIN THE SELF-DOMAIN
        206                     C          (NEG. INT.)--- RECEIVE OVERSET VALUE FROM DOMAIN -LPSET3(IB)
        207                     C
        208                     C INT *4 LPSND  (IDOM); DOMAIN NUMBER     TO SEND OVERSET NODE VALUE
        209                     C INT *4 NPTSND (IDOM); NUMBER OF OVERSET NODE POINTS TO SEND TO
        210                     C                     ; DOMAIN 'LPSND(IDOM)'
        211                     C INT *4 LPRCV  (IDOM); DOMAIN NUMBER     TO RECEIVE OVERSET NODE VALUE
        212                     C INT *4 NPTRCV (IDOM); NUMBER OF OVERSET POINTS TO RECEIVE FROM
        213                     C                       DOMAIN 'LPRCV(IDOM)'
        214                     C INT *4 IPSET(IPT,IDOM); OVERSET NODE NUMBER IN THE DOMAIN RECEIVING
        215                     C                         THE OVERSET VALUES.
        216                     C INT *4 IPSRC(IPT,IDOM); INDICATES POSITION IN THE OVERSET-VALUES
        217                     C                         PASSING ARRAYS WHEN OVERSET NODE DATA
        218                     C                         ARE COMPILED SEQUENTIALLY
        219                     C REAL*4  COVER1 (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
        220                     C REAL*4  COVER2 (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
        221                     C REAL*4  COVER3 (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
        222                     C
        223                     C (2) OUTPUT
        224                     C REAL*4 SA       (IP); LAPLASIAN OF S
        225                     C INT *4 IERR         ; RETURN CODE TO REPORT ERROR OCCURRENCE
        226                     C                   0 --- NORMAL TERMINATION
        227                     C                   1 --- A FATAL ERROR HAS OCCURRED
        228                     C
        229                     C (3) WORK
        230                     C REAL*4 FX       (IP); X-COMPONET OF GRADIENT OF S
        231                     C REAL*4 FY       (IP); Y-COMPONET OF GRADIENT OF S
        232                     C REAL*4 FZ       (IP); Z-COMPONET OF GRADIENT OF S
        233                     C REAL*4 RX     (I,IE); WORK REGION PASSED FOR CALLAP
        234                     C REAL*4 RY     (I,IE); WORK REGION PASSED FOR CALLAP
        235                     C
        236                     C
        237                     
        238                     #ifdef cputime
        239                           NUMLAP=NUMLAP+1
        240                     C     CALL CPU_TIME( TBUF1 )
        241                           TBUF1 = MPI_WTIME()
        242                     #endif
        243                           ICAVI=0
        244                     CC    IF(IPRESS.EQ.3) ICAVI=1
        245                           IERR=0
        246                     C
        247                           CALL USTSTA(25)
        248                           CALL GRAD3X(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
        249                          *            JSET,ICAVI,
        250                          *            ME,MP,N1,N2,NE,NP,NEX,NODE,IEATTR,IPATTR,
        251                          *            S,DNXYZP,CM,X,Y,Z,OMEGA,TIMER,ADIAG,
        252                          *            NFRAME,UFRAME,VFRAME,WFRAME,
        253                          *            IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
        254                          *            NPFIX,LPFIX,LEFIX,
        255                          *            NPSYMT,LPSYMT,XPSYMT,YPSYMT,ZPSYMT,
        256                          *            NPSET,LPSET1,LPSET2,LPSET3,LPSET4,
        257                          *            COVER1,COVER2,COVER3,
        258                          *            NPSND,LPSND,NPTSND,
        259                          *            NPRCV,LPRCV,NPTRCV,IPSET,IPSRC,
        260                          *            FXYZ,RX,RY,MWRK,WRKN,
        261                          *            NMRF,IFATTR,OMGMRF,AMRF,
        262                          *            IVOF,IMASS,RHO3D,NSP,NS,LOCAL,
        263                          *            NFACE,LFACE,AVEC,FFA,NFINLT,LFINLT,
        264                          *            NFFREE,LFFREE,NPFREE,LPFREE,
        265                          *            XPFREE,YPFREE,ZPFREE,
        266                          *            NESET,NESND,NERCV,NBESET,LBESET,
        267                          *            LESET1,LESET2,LESET3,
        268                          *            EOVER1,EOVER2,EOVER3,
        269                          *            LESND,NETSND,LERCV,NETRCV,IESET,IESRC,
        270                          *            SN,SNESET,OSBCOE,XNESET,YNESET,ZNESET,
        271                          *            SOSP,SOSWRK,WRKOS1,WRKOS2,
        272                          *            MEP,NEP,IENP,JENP,
        273                          *            IUT0,IERR,NUMVALID,LSTVALID)
        274                           CALL USTEND(25)
        275                     C
        276                     C
        277                     C    COMPUTE DIV(U) AT ELEMENTS
        278                     C
        279                     C          OPERATION COUNTS:   26 FLOP /ELEMENT
        280                     C          DATA LOADINGS   :   40 WORDS/ELEMENT
        281                     C                           (  16  WORDS CONTIGUOUSLY,
        282                     C                              12 WORDS BY STRIDE, AND
        283                     C                              12 WORDS BY LIST )
        284                     C
        285                     CC      DO 100 IP=1,NP
        286                     CC         WRKN(IP,1)=FXYZ(1,IP)
        287                     CC         WRKN(IP,2)=FXYZ(2,IP)
        288                     CC         WRKN(IP,3)=FXYZ(3,IP)
        289                     CC 100  CONTINUE
        290                     C
        291                     CC    CALL FILD3X(IMODE,ME,NE,NP,NEX,N1,N2,
        292                     CC   &            WRKN(1,1),WRKN(1,2),WRKN(1,3),
        293                     CC   &            AS,NODE,DNXI,DNYI,DNZI,IUT0,IERR)
        294                           CALL USTSTA(26)
        295                           CALL FLD3X2(IMODE,ME,NE,NP,NEX,N1,N2,FXYZ,
        296                          &            AS,NODE,DNXI,DNYI,DNZI,IUT0,IERR,
        297                          &            DNXYZ)
        298                     C      CALL FLD3X2(IMODE,ME,NE,NP,NEX,N1,N2,FXYZ,
        299                     C     &            AS,NODE,DNXI,DNYI,DNZI,IUT0,IERR)
        300                           CALL USTEND(26)
        301                     C
        302                     C
        303                     C
        304                     C
        305                     C    LOW MACH ASSUMPTION
        306                     C
        307                     C          OPERATION COUNTS:    FLOP /ELEMENT
        308                     C          DATA LOADINGS   :    WORDS/ELEMENT
        309                     C                           (    WORDS CONTIGUOUSLY,
        310                     C                                WORDS BY STRIDE, AND
        311                     C                                WORDS BY LIST )
        312                     C
        313                           COEF=FSMACH*FSMACH/(DT*DT)
        314     1                     IF (IPRESS.EQ.2) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.00, ITR: 384, MVE: 7)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      S, AS
                              <<< Loop-information  End >>>
        315     2  pp   2v                DO 1000 IE=1,NE
        316     2   p   2v                    AS(IE)=AS(IE)-COEF*S(IE)
        317     2   p   2v       1000     CONTINUE
        318     1                     ELSE IF (IPRESS.EQ.3) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 640
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.14, ITR: 320, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      S, AS, FLE, FESRC
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 0
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 6
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        319     2  pp   2v                DO 1010 IE=1,NE
        320     2   p   2v                    AS(IE)=AS(IE)-(FLE(IE)*COEF+FESRC(IE)/DT)*S(IE)
        321     2               CC            AS(IE)=AS(IE)-(COEF+FESRC(IE)/DT)*S(IE)
        322     2   p   2v       1010     CONTINUE
        323     1                     ENDIF
        324                     c
        325                     !ocl simd
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 500
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 0.82, ITR: 96, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AS, LEFIX, PG
                              <<< Loop-information  End >>>
        326     1  pp   2v            DO 1100 IE=1, NE
        327     2   p   2v               IF (LEFIX(IE).EQ.1) THEN
        328     2   p   2v                  AS(IE)=0.0E0
        329     2   p   2v               ELSE
        330     2   p   2v                  AS(IE)=AS(IE)/PG(IE)
        331     2   p   2v                ENDIF
        332     1   p   2v       1100  CONTINUE
        333                     C
        334                     #ifdef cputime
        335                     C     CALL CPU_TIME( TBUF2 )
        336                           TBUF2 = MPI_WTIME()
        337                           DTCPU=TBUF2-TBUF1
        338                           DTLAPA=DTLAPA+DTCPU
        339                           DTLAPR=DTLAPR+DTCPU*DTCPU
        340                     #endif
        341                     C
        342                           RETURN
        343                           END

 Diagnostic messages: program name(CALLAP)
   jwd8220o-i  "callap.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "callap.f", line 101: この名前'IP'は、宣言だけされていて引用されていません。
   jwd2006i-i  "callap.f", line 116: この名前'TBUF3'は、宣言だけされていて引用されていません。
   jwd5001p-i  "callap.f", line 315: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "callap.f", line 315: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "callap.f", line 315: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "callap.f", line 315: ループの繰返し数が384回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "callap.f", line 319: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "callap.f", line 319: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "callap.f", line 319: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "callap.f", line 319: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8206o-i  "callap.f", line 320: 除算を逆数の乗算に変更しました。
   jwd5001p-i  "callap.f", line 326: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "callap.f", line 326: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "callap.f", line 326: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "callap.f", line 326: ループの繰返し数が96回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 4372
   Statements : 3329
   Stack(byte): 2512
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 4372
   Total statements : 3329
   Total stack(byte): 2512
   Total prefetch num: 0

