
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:52:52 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : bcfix2.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "BCFIX2"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE BCFIX2
          2                          &   (ME,MP,NE,NP,N1,N2,NEX,NODE,NPFIX,LPFIX,LWORK,
          3                          &    AAA,B,PN,SN,CM,IUT0,IERR)
          4                     C
          5                           IMPLICIT NONE
          6                     C
          7                           INTEGER*4 ME,MP,NE,NP,N1,N2,NEX,NODE,NPFIX,LPFIX,LWORK,IUT0,IERR
          8                     C
          9                           REAL*4    AAA,B,PN,SN,CM
         10                     C
         11                           INTEGER*4 NETET,NEPRD,NEWED,NEHEX,NTET,NPRD,NWED,NHEX,
         12                          *          IES1,IEE1,IES2,IEE2,IES3,IEE3,IES4,IEE4,IP,IB,I,IE
         13                     C
         14                           DIMENSION NODE(N2,ME),NEX(8),LPFIX(MP),LWORK(MP)
         15                           DIMENSION AAA(N1,N2,ME)
         16                           DIMENSION B(NP),PN(NP),SN(N1,NE),CM(MP)
         17                     C
         18                           NETET=NEX(1)
         19                           NEPRD=NEX(2)
         20                           NEWED=NEX(3)
         21                           NEHEX=NEX(4)
         22                           NE   =NETET+NEPRD+NEWED+NEHEX
         23                           NTET =NEX(5)
         24                           NPRD =NEX(6)
         25                           NWED =NEX(7)
         26                           NHEX =NEX(8)
         27                     C     * TET *
         28                           IES1=1
         29                           IEE1=NETET
         30                     C     * PRD *
         31                           IES2=NETET+1
         32                           IEE2=NETET+NEPRD
         33                     C     * WED *
         34                           IES3=NETET+NEPRD+1
         35                           IEE3=NETET+NEPRD+NEWED
         36                     C     * HEX *
         37                           IES4=NETET+NEPRD+NEWED+1
         38                           IEE4=NETET+NEPRD+NEWED+NEHEX
         39                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWORK
                              <<< Loop-information  End >>>
         40     1  pp   4v            DO 500 IP=1,NP
         41     1   p   4v               LWORK(IP)=0
         42     1   p   4v       500  CONTINUE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPFIX
                              <<< Loop-information  End >>>
         43     1                     DO 501 IB=1,NPFIX
         44     1                        IP=LPFIX(IB)
         45     2                        IF(IP.LE.0.OR.IP.GT.NP)THEN
         46     2                           WRITE(IUT0,*) 'BCFIX : ERROR OCCURED'
         47     2                           IERR=1
         48     2                           RETURN
         49     2                        END IF
         50     1                        LWORK(IP)=1
         51     1                501  CONTINUE
         52                     C
         53                     C     === DIRICHLET BOUNDARY CONDITION FOR MATRIX ===
         54                     C     * TET *
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.71, ITR: 176, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AAA, NODE, SN
                              <<< Loop-information  End >>>
         55     1   p    v            DO 101 I=1,NTET
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, SN, AAA
                              <<< Loop-information  End >>>
         56     2  pp                    DO 100 IE=IES1,IEE1
         57     2   p    v                  IP=NODE(I,IE)
         58     3   p    v                  IF(LWORK(IP).GE.1)THEN
         59     3   p    v                     AAA(I,1,IE)=0.0E0
         60     3   p    v                     AAA(I,2,IE)=0.0E0
         61     3   p    v                     AAA(I,3,IE)=0.0E0
         62     3   p    v                     AAA(I,4,IE)=0.0E0
         63     3   p    v                     AAA(I,I,IE)=SN(I,IE)
         64     3   p    v                  END IF
         65     2   p            100     CONTINUE
         66     1   p            101  CONTINUE
         67                     C     * PRD *
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.62, ITR: 176, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AAA, NODE, SN
                              <<< Loop-information  End >>>
         68     1   p    v            DO 201 I=1,NPRD
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, SN, AAA
                              <<< Loop-information  End >>>
         69     2  pp                    DO 200 IE=IES2,IEE2
         70     2   p    v                  IP=NODE(I,IE)
         71     3   p    v                  IF(LWORK(IP).GE.1)THEN
         72     3   p    v                     AAA(I,1,IE)=0.0E0
         73     3   p    v                     AAA(I,2,IE)=0.0E0
         74     3   p    v                     AAA(I,3,IE)=0.0E0
         75     3   p    v                     AAA(I,4,IE)=0.0E0
         76     3   p    v                     AAA(I,5,IE)=0.0E0
         77     3   p    v                     AAA(I,I,IE)=SN(I,IE)
         78     3   p    v                  END IF
         79     2   p            200     CONTINUE
         80     1   p            201  CONTINUE
         81                     C     * WED *
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.55, ITR: 144, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AAA, NODE, SN
                              <<< Loop-information  End >>>
         82     1   p    v            DO 301 I=1,NWED
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, SN, AAA
                              <<< Loop-information  End >>>
         83     2  pp                    DO 300 IE=IES3,IEE3
         84     2   p    v                  IP=NODE(I,IE)
         85     3   p    v                  IF(LWORK(IP).GE.1)THEN
         86     3   p    v                     AAA(I,1,IE)=0.0E0
         87     3   p    v                     AAA(I,2,IE)=0.0E0
         88     3   p    v                     AAA(I,3,IE)=0.0E0
         89     3   p    v                     AAA(I,4,IE)=0.0E0
         90     3   p    v                     AAA(I,5,IE)=0.0E0
         91     3   p    v                     AAA(I,6,IE)=0.0E0
         92     3   p    v                     AAA(I,I,IE)=SN(I,IE)
         93     3   p    v                  END IF
         94     2   p            300     CONTINUE
         95     1   p            301  CONTINUE
         96                     C     * HEX *
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 2)
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.63, ITR: 128, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, AAA, SN
                              <<< Loop-information  End >>>
         97     1   p    v            DO 401 I=1,NHEX
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<<  [OPTIMIZATION]
                              <<<    INTERCHANGED(nest: 1)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE, SN, AAA
                              <<< Loop-information  End >>>
         98     2  pp                    DO 400 IE=IES4,IEE4
         99     2   p    v                  IP=NODE(I,IE)
        100     3   p    v                  IF(LWORK(IP).GE.1)THEN
        101     3   p    v                     AAA(I,1,IE)=0.0E0
        102     3   p    v                     AAA(I,2,IE)=0.0E0
        103     3   p    v                     AAA(I,3,IE)=0.0E0
        104     3   p    v                     AAA(I,4,IE)=0.0E0
        105     3   p    v                     AAA(I,5,IE)=0.0E0
        106     3   p    v                     AAA(I,6,IE)=0.0E0
        107     3   p    v                     AAA(I,7,IE)=0.0E0
        108     3   p    v                     AAA(I,8,IE)=0.0E0
        109     3   p    v                     AAA(I,I,IE)=SN(I,IE)
        110     3   p    v                  END IF
        111     2   p            400     CONTINUE
        112     1   p            401  CONTINUE
        113                     C
        114                     C     === DIRICHLET BOUNDARY CONDITION FOR RIGHT HAND SIDE VECTOR ===
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 572
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.44, ITR: 192, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      PN, CM, LWORK, B
                              <<< Loop-information  End >>>
        115     1  pp   2v            DO I=1,NP
        116     2   p   2v               IF(LWORK(I).GE.1)THEN
        117     2   p   2v                  B(I)=PN(I)/CM(I)
        118     2   p   2v               END IF
        119     1   p   2v            END DO
        120                     C
        121                           RETURN
        122                           END

 Diagnostic messages: program name(BCFIX2)
   jwd8220o-i  "bcfix2.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "bcfix2.f", line 40: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "bcfix2.f", line 40: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "bcfix2.f", line 40: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "bcfix2.f", line 40: ループを展開数4回でアンローリングしました。
   jwd5131p-i  "bcfix2.f", line 43: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "bcfix2.f", line 43: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "bcfix2.f", line 43: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd8211o-i  "bcfix2.f", line 55: ループを入れ換えました。(行:56)
   jwd6001s-i  "bcfix2.f", line 55: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "bcfix2.f", line 55: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "bcfix2.f", line 55: ループの繰返し数が176回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8211o-i  "bcfix2.f", line 56: ループを入れ換えました。(行:55)
   jwd5001p-i  "bcfix2.f", line 56: このDOループを並列化しました。(名前:IE)
   jwd8209o-i  "bcfix2.f", line 63: 多項式の演算順序を変更しました。
   jwd8211o-i  "bcfix2.f", line 68: ループを入れ換えました。(行:69)
   jwd6001s-i  "bcfix2.f", line 68: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "bcfix2.f", line 68: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "bcfix2.f", line 68: ループの繰返し数が176回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8211o-i  "bcfix2.f", line 69: ループを入れ換えました。(行:68)
   jwd5001p-i  "bcfix2.f", line 69: このDOループを並列化しました。(名前:IE)
   jwd8209o-i  "bcfix2.f", line 77: 多項式の演算順序を変更しました。
   jwd8211o-i  "bcfix2.f", line 82: ループを入れ換えました。(行:83)
   jwd6001s-i  "bcfix2.f", line 82: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "bcfix2.f", line 82: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "bcfix2.f", line 82: ループの繰返し数が144回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8211o-i  "bcfix2.f", line 83: ループを入れ換えました。(行:82)
   jwd5001p-i  "bcfix2.f", line 83: このDOループを並列化しました。(名前:IE)
   jwd8209o-i  "bcfix2.f", line 92: 多項式の演算順序を変更しました。
   jwd8211o-i  "bcfix2.f", line 97: ループを入れ換えました。(行:98)
   jwd6001s-i  "bcfix2.f", line 97: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "bcfix2.f", line 97: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "bcfix2.f", line 97: ループの繰返し数が128回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8211o-i  "bcfix2.f", line 98: ループを入れ換えました。(行:97)
   jwd5001p-i  "bcfix2.f", line 98: このDOループを並列化しました。(名前:IE)
   jwd8209o-i  "bcfix2.f", line 109: 多項式の演算順序を変更しました。
   jwd5001p-i  "bcfix2.f", line 115: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "bcfix2.f", line 115: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "bcfix2.f", line 115: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "bcfix2.f", line 115: ループの繰返し数が192回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 122
   Statements : 99
   Stack(byte): 1616
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 122
   Total statements : 99
   Total stack(byte): 1616
   Total prefetch num: 0

