
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:37 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : ale_calyng.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "ALE_CALYNG"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE ALE_CALYNG(NP,NE,NPMVB,LPMVB,
          2                          *                      STPWR,EJ,DELTA,
          3                          *                      NLYNG,EYNG,ME,N2,NODE,NPBODY,LPBODY,
          4                          *                      LEWRK,LPWRK,AWRK,
          5                          *                      IPART,NDOM,MBPDOM,LDOM,NBPDOM,
          6                          *                      IPSLF,IPSND,RX,RY,MAXBUF,IUT0,IERR)
          7                     C
          8                           IMPLICIT NONE
          9                     C
         10                           INTEGER*4 NP,NE,ME,N2,NODE(N2,NE),NPMVB
         11                           INTEGER*4 LPMVB(3,NPMVB),NLYNG,NPBODY,LPBODY(NPBODY)
         12                           REAL*4    STPWR,DELTA(NE),EJ(NE),EYNG
         13                     C
         14                           INTEGER*4 IPART,NDOM,MBPDOM,MAXBUF
         15                           INTEGER*4 LDOM(NDOM),NBPDOM(NDOM),
         16                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM),
         17                          *          RX(ME*8),RY(ME*8)
         18                           INTEGER*4 IUT0,IERR
         19                     
         20                     C     WORK
         21                           INTEGER*4 I,J,IBP,IP,IE,IDUM,LEWRK(NE),LPWRK(NP)
         22                           REAL*4    AVOL,AWRK(NP)
         23                           CHARACTER*60 ERMSGC
         24                          & /' ## SUBROUTINE ALE_CALYNG: ERROR OCCURED         ; RETURNED' /
         25                     C
         26                           AVOL=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1600
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
         27     1  pp    v            DO 100 IE=1,NE
         28     1   p    v               AVOL=AVOL+DELTA(IE)/FLOAT(NE)
         29     1   p    v       100  CONTINUE
         30                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 44
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DELTA, EJ
                              <<< Loop-information  End >>>
         31     1  pp    v            DO 200 IE=1,NE
         32     1   p    v               EJ(IE)=(AVOL/DELTA(IE))**STPWR
         33     1   p    v       200  CONTINUE
         34                     C
         35                           IF (NLYNG.EQ.0) GOTO 3000
         36                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEWRK
                              <<< Loop-information  End >>>
         37     1  pp   4v            DO 1000 IE=1,NE
         38     1   p   4v               LEWRK(IE)=0
         39     1   p   4v       1000 CONTINUE
         40                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPWRK
                              <<< Loop-information  End >>>
         41     1  pp   4v            DO 1100 IP=1,NP
         42     1   p   4v               LPWRK(IP)=0
         43     1   p   4v       1100 CONTINUE
         44                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPBODY
                              <<< Loop-information  End >>>
         45     1   s   4v            DO 1200 IBP=1,NPBODY
         46     1   p   4v               IP=LPBODY(IBP)
         47     1   m   4v               LPWRK(IP)=1
         48     1   p   4v       1200 CONTINUE
         49                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPWRK, AWRK
                              <<< Loop-information  End >>>
         50     1                     DO 2000 J=1,NLYNG
         51     1               CC
         52     1               CC    FIND ELEMENTS ATTACHED TO BODY BOUNDARY NODE
         53     1               CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 67
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEWRK
                              <<< Loop-information  End >>>
         54     2  pp                    DO 2100 IE=1,NE
         55     2   p                       IF(LEWRK(IE).EQ.1) GOTO 2100
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    FULL UNROLLING
                              <<< Loop-information  End >>>
         56     3   p   f                   DO 2200 I=1,8
         57     3   p   f                      IP=NODE(I,IE)
         58     3   p   f                      IF(IP.EQ.0)       GOTO 2200
         59     3   p   f                      IF(LPWRK(IP).EQ.0) GOTO 2200
         60     3   p   f                      LEWRK(IE)=1
         61     3   p   f                      GOTO 2100
         62     3   p   f        2200       CONTINUE
         63     2   p            2100    CONTINUE
         64     1               CC
         65     1               CC    UPDATE BODY BOUNDARY NODE
         66     1               CC
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEWRK
                              <<< Loop-information  End >>>
         67     2       2                DO 2300 IE=1,NE
         68     2       2                   IF(LEWRK(IE).EQ.0) GOTO 2300
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
         69     3   s   2v                  DO 2400 I=1,8
         70     3   p   2v                     IP=NODE(I,IE)
         71     3   p   2v                     IF(IP.EQ.0) GOTO 2400
         72     3   m   2v                     LPWRK(IP)=1
         73     3   p   2v       2400       CONTINUE
         74     2       2        2300    CONTINUE
         75     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 843
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.33, ITR: 384, MVE: 5)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPWRK, AWRK
                              <<< Loop-information  End >>>
         76     2  pp   2v               DO 2500 IP=1,NP
         77     2   p   2v                  AWRK(IP)=FLOAT(LPWRK(IP))
         78     2   p   2v       2500    CONTINUE
         79     1               C
         80     1                        IDUM=1
         81     1                        CALL DDCOMX(IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
         82     1                    *               AWRK,AWRK,AWRK,NP,IUT0,IERR,RX,RY,MAXBUF)
         83     2                        IF(IERR.NE.0) THEN
         84     2                           WRITE(IUT0,*)
         85     2                           WRITE(IUT0,*) ERMSGC
         86     2                           RETURN
         87     2                        ENDIF
         88     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 160, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AWRK, LPWRK
                              <<< Loop-information  End >>>
         89     2  pp   2v               DO 2600 IP=1,NP
         90     3   p   2v                  IF (AWRK(IP).GT.0.0) THEN
         91     3   p   2v                     LPWRK(IP)=1
         92     3   p   2v                  ELSE
         93     3   p   2v                     LPWRK(IP)=0
         94     3   p   2v                  ENDIF
         95     2   p   2v       2600    CONTINUE
         96     1               C
         97     1                2000 CONTINUE
         98                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1231
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.50, ITR: 288, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      EJ, LEWRK
                              <<< Loop-information  End >>>
         99     1  pp   2v            DO 2700 IE=1,NE
        100     1   p   2v               IF (LEWRK(IE).EQ.0) GOTO 2700
        101     1   p   2v               EJ(IE)=EYNG
        102     1   p   2v       2700 CONTINUE
        103                     C
        104                      3000 CONTINUE
        105                     C
        106                           RETURN
        107                           END

 Diagnostic messages: program name(ALE_CALYNG)
   jwd8220o-i  "ale_calyng.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "ale_calyng.f", line 11: この仮引数'LPMVB'は、副プログラム中で使用されていません。
   jwd5004p-i  "ale_calyng.f", line 27: リダクション演算を含むDOループを並列化しました。(名前:IE)
   jwd6004s-i  "ale_calyng.f", line 27: リダクション演算を含むDOループをSIMD化しました。(名前:IE)
   jwd8206o-i  "ale_calyng.f", line 28: 除算を逆数の乗算に変更しました。
   jwd5001p-i  "ale_calyng.f", line 31: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "ale_calyng.f", line 31: このDOループをSIMD化しました。(名前:IE)
   jwd8666o-i  "ale_calyng.f", line 31: 浮動小数点レジスタが不足しているため、ソフトウェアパイプライニングを適用できません。
   jwd5001p-i  "ale_calyng.f", line 37: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "ale_calyng.f", line 37: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "ale_calyng.f", line 37: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "ale_calyng.f", line 37: ループを展開数4回でアンローリングしました。
   jwd5001p-i  "ale_calyng.f", line 41: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_calyng.f", line 41: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "ale_calyng.f", line 41: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "ale_calyng.f", line 41: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "ale_calyng.f", line 45: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "ale_calyng.f", line 45: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_calyng.f", line 45: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "ale_calyng.f", line 47: 配列'LPWRK'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5131p-i  "ale_calyng.f", line 50: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5001p-i  "ale_calyng.f", line 54: このDOループを並列化しました。(名前:IE)
   jwd8670o-i  "ale_calyng.f", line 54: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "ale_calyng.f", line 56: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "ale_calyng.f", line 56: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8203o-i  "ale_calyng.f", line 56: ループをフルアンローリングしました。
   jwd5208p-i  "ale_calyng.f", line 67: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:LPWRK)
   jwd8670o-i  "ale_calyng.f", line 67: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "ale_calyng.f", line 67: ループを展開数2回でアンローリングしました。
   jwd6001s-i  "ale_calyng.f", line 69: このDOループをSIMD化しました。(名前:I)
   jwd5209p-i  "ale_calyng.f", line 72: 配列'LPWRK'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "ale_calyng.f", line 76: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_calyng.f", line 76: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "ale_calyng.f", line 76: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_calyng.f", line 76: ループの繰返し数が384回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "ale_calyng.f", line 89: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "ale_calyng.f", line 89: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "ale_calyng.f", line 89: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_calyng.f", line 89: ループの繰返し数が160回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "ale_calyng.f", line 99: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "ale_calyng.f", line 99: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "ale_calyng.f", line 99: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "ale_calyng.f", line 99: ループの繰返し数が288回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 107
   Statements : 73
   Stack(byte): 16192
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 107
   Total statements : 73
   Total stack(byte): 16192
   Total prefetch num: 0

