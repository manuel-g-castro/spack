      SUBROUTINE ALE_MSHINF(
     *     MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
     *     N1,N2,NE,NP,NEX,NS,NSP,N2D,NELM,LOCAL,NODE,
     *     X,Y,Z,XD,YD,ZD,
     *     IPART,MDOM,NDOM,LDOM,NBPDOM,MBPDOM,IPSLF,IPSND,
     *     MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST,MELM,ME,
     *     SNI,DNXI,DNYI,DNZI,SN,DNXYZ,DELTA,
     *     EAP1,EAP2,EAP3,EBP,MEP,MP,IENP,JENP,NEP,
     *     NEBODY,NEHEAT,NSTET,NSPRD,NSWED,NSHEX,LEBODY,LEHEAT,
     *     SBODY,DXBODY,DYBODY,DZBODY,SHEAT,
     *     IFILTR,FILTER,
     *     IMODEL,JPRESS,NEWALL,LEWALL,NEAR,DSNEAR,
     *     NCRS,NAVDYN,NPFREE,NPSLD2,
     *     LTAB,LPFREE,LPSLD2,GAMDYN,APRS,APRS0,ATEST0,
     *     AAVER0,ATESPC,AAVEPC,
#ifdef RCAPCPL
     *     NPCPL,LPCPL,XPCPL,YPCPL,ZPCPL,
#endif
     *     MPWLAD,NPWALL,NEWLAD,NPWLAD,LPWALL,
     *     XNWALL,YNWALL,ZNWALL,LEWLAD,LPWLAE,LPWLAD,DPWLAD,
     *     MAXBUF,MWRK,RX,RY,WRKN,WRK01,WRK02,WRK03,WRK04,
     *     WRK05,WRK06,DWRK01,DWRK02,DWRK03,DWRK04,DWRK05,
     *     LWRK01,LWRK02,LEWRK,IWRTIM,
#ifdef cputime
     *     DTALE,IUT6,IUT0,IERR)
#else
     *     IUT6,IUT0,IERR)
#endif
C
      IMPLICIT NONE
C
      INTEGER*4 MCOLOR,MCPART
      INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
      INTEGER*4 N1,N2,NE,NP,NEX,NS,NSP,N2D,NELM
      INTEGER*4 LOCAL(NSP,NS,4),NODE(N2,NE)
      REAL*4    X(NP),Y(NP),Z(NP)
      REAL*8    XD(NP),YD(NP),ZD(NP)
      INTEGER*4 IPART,MDOM,NDOM,MBPDOM
      INTEGER*4 LDOM(MDOM),NBPDOM(MDOM),
     *          IPSLF(MBPDOM,MDOM),IPSND(MBPDOM,MDOM)
C
C     [INTEGRAL ELEMENT MATRICES]
      INTEGER*4 MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST,MELM,ME
      REAL*4    SNI(N1,NE+1),DNXI(N1,NE+1),DNYI(N1,NE+1),DNZI(N1,NE+1),
     *          SN (N1,NE+1),DNXYZ(3,N1,NE+1),
     *          DELTA(NE+1)
      REAL*4    EAP1(N2,MEP,NP),EAP2(3,N2,MEP,NP),EAP3(6,N2,MEP,NP)
      REAL*4    EBP(3,N2,MEP,NP)
      INTEGER*4 MEP,MP
      INTEGER*4 IENP(MEP,MP),JENP(MEP,MP),NEP(MP)
C
C     [INTEGRAL ELEMENT VECTORS NEEDED]
      INTEGER*4 NEBODY,NEHEAT,NSTET,NSPRD,NSWED,NSHEX
      INTEGER*4 LEBODY(2,NEBODY),LEHEAT(2,NEHEAT)
      REAL*4    SBODY(N1,NEBODY),DXBODY(N1,NEBODY),DYBODY(N1,NEBODY),
     *          DZBODY(N1,NEBODY),SHEAT(N1,NEHEAT)
C
C     [COMPUTE ELEMENT FILTER WIDTH]
      INTEGER*4 IFILTR
      REAL*4    FILTER(ME)
C
C     [SEARCH NEAREST WALL SURFACE FOR ALL ELEMENTS]
      INTEGER*4 IMODEL,JPRESS,NEWALL
      INTEGER*4 LEWALL(2,NEWALL),NEAR(NE),DSNEAR(NE)
C
C     [CAL. L.H.S. FOR PRS. EQ. AND DSM]
      INTEGER*4 NCRS,NAVDYN,NPFREE,NPSLD2
      INTEGER*4 LTAB(N1,N2,NE),
     *          LPFREE(NPFREE),LPSLD2(NPSLD2)
      REAL*4    GAMDYN,APRS (N1,N2,ME),APRS0 (NP),ATEST0(NP),AAVER0(NP),
     *          ATESPC,AAVEPC
#ifdef RCAPCPL
C     [REVOCAP COUPLER: OBTAIN NODE LIST]
      INTEGER*4 NPCPL
      INTEGER*4 LPCPL(NPCPL)
      REAL*4    XPCPL(NPCPL),YPCPL(NPCPL),ZPCPL(NPCPL)
#endif
C
C     [SEARCHING WALL ADJACENT NODES]
      INTEGER*4 MPWLAD,NPWALL,NEWLAD,NPWLAD
      INTEGER*4 LPWALL(NPWALL),
     *          XNWALL(NEWALL),YNWALL(NEWALL),ZNWALL(NEWALL),
     *          LEWLAD(NEWLAD),LPWLAE(7,NEWLAD),LPWLAD(MPWLAD),
     *          DPWLAD(MPWLAD)
C
      INTEGER*4 IUT6,IUT0,IERR
C
C     [WORK]
      INTEGER*4 MAXBUF,MWRK,IFNDNW,MLST,IDUM,IE,IELM,J,IERRA
      INTEGER*4 LWRK01(MWRK),LWRK02(MWRK),LEWRK(2,MWRK)
      REAL*4    RX(N1,NE),RY(N1,NE),WRKN(MWRK*9),
     :          WRK01(MWRK),WRK02(MWRK),WRK03(MWRK),
     *          WRK04(MWRK),WRK05(MWRK),WRK06(MWRK)
      REAL*8    DWRK01,DWRK02,DWRK03,DWRK04,DWRK05
C
      CHARACTER*10 BLANK / ' ' /
      CHARACTER*60 ERMSGC /' ## SUBROUTINE ALE_MSHINF: FATAL
     * ERROR REPORT   ; RETURNED' /
      INTEGER*4 IWRTIM
      REAL*4    TWRK1,TWRK2,TWRK3,TWRK4,TWRK5,TWRK6,TWRK7,TWRK8
#ifdef cputime
      REAL*4    DTALE(8)
      include 'mpif.h'
#endif
C
C     <<<<< INTEGRAL ELEMENT MATRICES >>>>>
C
#ifdef cputime
C     CALL CPU_TIME(TWRK1)
      TWRK1 = MPI_WTIME()
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.ELM3DX:START',IUT6)
#endif
C
      DO 2300 IE = 1, NE
         DELTA(IE) = 0.0
 2300 CONTINUE
C
      CALL ELM3DX(MGAUSS,IGAUSH,IGAUSW,IGAUSP,IGAUST,
     *            MELM,ME,N1,N2,NE,NP,NEX,XD,YD,ZD,NODE,
     *            SNI ,DNXI,DNYI,DNZI,SN,RX,RY,WRKN,DELTA,
     *            EAP1,EAP2,EAP3,EBP,MEP,MP,IENP,JENP,NEP,
     *            DWRK01,DWRK02,DWRK03,DWRK04,DWRK05,IUT0,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
         WRITE(IUT0,*) BLANK
         WRITE(IUT0,*) ERMSGC
         RETURN
      ENDIF
C
      DO 2400 IE=1,NE
         DO 2410 J=1,N1
            DNXYZ(1,J,IE)=RX(J,IE)
            DNXYZ(2,J,IE)=RY(J,IE)
            DNXYZ(3,J,IE)=WRKN(J+N1*(IE-1))
 2410    CONTINUE
 2400 CONTINUE
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.ELM3DX:END  ',IUT6)
C     CALL CPU_TIME(TWRK2)
      TWRK2 = MPI_WTIME()
      DTALE(1)=DTALE(1)+(TWRK2-TWRK1)
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.ELM3BX:START',IUT6)
#endif
C
C     <<<<< INTEGRAL ELEMENT VECTORS NEEDED >>>>>
C
      CALL ELM3BX
     *   ( N1,N2,NP,XD,YD,ZD,NODE,NE,NEX,NSTET,NSPRD,NSWED,NSHEX,
     *     LEBODY,NEBODY,SBODY,DXBODY,DYBODY,DZBODY,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
          WRITE(IUT0,*) BLANK
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
C
      CALL ELM3BX
     *   ( N1,N2,NP,XD,YD,ZD,NODE,NE,NEX,NSTET,NSPRD,NSWED,NSHEX,
     *     LEHEAT,NEHEAT,SHEAT,RX,RX,RX,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
          WRITE(IUT0,*) BLANK
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.ELM3BX:END  ',IUT6)
C     CALL CPU_TIME(TWRK3)
      TWRK3 = MPI_WTIME()
      DTALE(2)=DTALE(2)+(TWRK3-TWRK2)
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.FLT3DX:START',IUT6)
#endif
C
C     <<<<< COMPUTE ELEMENT FILTER WIDTH >>>>>
C
      IF(IFILTR.EQ.3) THEN
         DO 3000 IE = 1, NE
            FILTER(IE) = DELTA(IE)
 3000    CONTINUE
      ELSE
         CALL FLT3DX(IFILTR,X,Y,Z,NODE,NE,NP,N2,NEX,FILTER)
      END IF  
#ifdef cputime
C     CALL CPU_TIME(TWRK4)
      TWRK4 = MPI_WTIME()
      DTALE(3)=DTALE(3)+(TWRK4-TWRK3)
#endif
C
C     <<<<< SEARCH NEAREST WALL SURFACE FOR ALL ELEMENTS >>>>>
C
      IF(IMODEL.EQ.1 .AND. NEWALL.GE.1) THEN
         IF(IPART.GE.1)
     *        CALL NERWLX(X,Y,Z,NODE,NE,NP,N1,NEX,NS,NSP,
     *                    LOCAL,LEWALL,NEWALL,NEAR,DSNEAR,
     *                    WRK01,WRK02,WRK03)
      ENDIF   
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.FLT3DX:END  ',IUT6)
C     CALL CPU_TIME(TWRK5)
      TWRK5 = MPI_WTIME()
      DTALE(4)=DTALE(4)+(TWRK5-TWRK4)
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.CALLHS:START',IUT6)
#endif
C  
C     <<<<< CAL. L.H.S. FOR PRS. EQ. AND DSM >>>>>
C
      IF(IMODEL.EQ.2 .OR. JPRESS.EQ.1) THEN
      CALL CALLHS(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
     *            ME,NE,NP,NEX,N1,N2,NODE,
     *            APRS,APRS0,ATEST0,AAVER0,
     *            NCRS,ATESPC,AAVEPC,LTAB,
     *            FILTER,GAMDYN,NAVDYN,NELM,
     *            EAP1,EAP3,IENP,JENP,NEP,MEP,MP,
     *            IPART,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
     *            NPFREE,LPFREE,NPSLD2,LPSLD2,LWRK01,
     *            RX,RY,LWRK02,IUT0,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
          WRITE(IUT0,*) BLANK
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
      ENDIF
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.CALLHS:END  ',IUT6)
C     CALL CPU_TIME(TWRK6)
      TWRK6 = MPI_WTIME()
      DTALE(5)=DTALE(5)+(TWRK6-TWRK5)
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.SRFNVX:START',IUT6)
#endif
#ifdef RCAPCPL
C  
C     <<<<< REVOCAP COUPLER: OBTAIN NODE LIST >>>>>
C
      CALL SRFNVX(IPART,NE,NP,N2,NEX,NS,NSP,N2D,
     *            LOCAL,NODE,XD,YD,ZD,
     *            MWRK,NPCPL,LPCPL,LEWRK,
     *            MDOM,NDOM,LDOM,NBPDOM,MBPDOM,IPSLF,IPSND,
     *            XPCPL,YPCPL,ZPCPL,
     *            LWRK01,WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,
     *            RX,RY,IUT6,IUT0,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
          WRITE(IUT0,*) BLANK
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
#endif
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.SRFNVX:END  ',IUT6)
C     CALL CPU_TIME(TWRK7)
      TWRK7 = MPI_WTIME()
      DTALE(6)=DTALE(6)+(TWRK7-TWRK6)
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.FINDNW:START',IUT6)
#endif
C
C     <<<<< SEARCHING WALL ADJACENT NODES >>>>>
C
      IFNDNW=1
      MLST=2
      IDUM=2
      CALL FINDNW(IFNDNW,MLST,ME,NE,NP,N2,NEX,NS,NSP,N2D,
     *            X,Y,Z,MPWLAD,
     *            LPWALL,NPWALL,
     *            LEWALL,NEWALL,XNWALL,YNWALL,ZNWALL,
     *            LEWLAD,NEWLAD,LPWLAE,LPWLAD,NPWLAD,
     *            DPWLAD,
     *            LOCAL,NODE,
     *            LWRK01,LWRK02,
     *            IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,
     *            MBPDOM,WRK01,RX,RY,MAXBUF,
     *            IUT0,IUT6,IERR)
      CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
      IF(IERRA.NE.0) THEN
          WRITE(IUT0,*) BLANK
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
#ifdef cputime
      IF (IWRTIM.EQ.1) CALL CLTIME('SUB.FINDNW:END  ',IUT6)
C     CALL CPU_TIME(TWRK8)
      TWRK8 = MPI_WTIME()
      DTALE(7)=DTALE(7)+(TWRK8-TWRK7)
#endif
C
      RETURN
      END
