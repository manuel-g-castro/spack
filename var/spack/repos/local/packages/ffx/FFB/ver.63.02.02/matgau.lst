
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:11 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : matgau.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "MATGAU"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : MATGAU                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY Y.GUO               C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE MATGAU(MDIM,NDIM,A,B,XX,IPVT,IUT0,IERR)
         16                     C
         17                           IMPLICIT NONE
         18                     C
         19                           INTEGER*4 MDIM,NDIM,IPVT,IUT0,IERR
         20                           REAL*4    A,B,XX
         21                     C
         22                           INTEGER*4 I,J,MAXI,I2,J2,IBUF,IPVTI,IPVTI2
         23                           REAL*4    AII,AIIMAX,RAII,FACT,BI,EPS
         24                     C
         25                           DIMENSION A(MDIM,MDIM),B(MDIM),XX(MDIM),IPVT(MDIM)
         26                     C
         27                           DATA EPS / 1.0E-30 /
         28                     C
         29                     C      SOLVING LINEAR EQUATIONS BY DIRECT METHOD (GAUSS METHOD)
         30                     C
         31                     C
         32                     C     ARGUMENT LISTINGS
         33                     C       (1) INPUT
         34                     C          MDIM        ; SPECIFIES THE MAXIMUM DIMENSION OF THE MATRIX
         35                     C          NDIM        ; SPECIFIES THE DIMENSION OF THE MATRIX
         36                     C          A      (I,J); THE MATRIX
         37                     C          IUT0        ; DEVICE NO. TO REPORT ERROR OCCURENCE
         38                     C
         39                     C       (2) OUTPUT
         40                     C          IERR        ; RETURN CODE TO REPORT ERROR OCCURENCE
         41                     C                   0 --- NORMAL TERMINATION
         42                     C                   1 --- A FATAL ERROR HAS OCCURED
         43                     C
         44                     C       (3) INPUT-OUTPUT
         45                     C          B        (I); THE RIGHT-HAND SIDE VECTOR
         46                     C                       ALSO HOLDS THE SOLUTION VECTOR
         47                     C
         48                     C       (4) WORK
         49                     C          XX       (I); STORE THE SOLUTION VECTOR TEMPORARILY
         50                     C          IPVT     (I); STORE THE POSITION OF MATRIX COEFFIENT THAT
         51                     C                       HAS THE MAXIMUM ABSOLUTE VALUE TEMPORARILY
         52                     C
         53                           IERR = 0
         54                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.75, ITR: 192, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IPVT
                              <<< Loop-information  End >>>
         55     1  pp   2v            DO 100 J = 1 , NDIM
         56     1   p   2v                IPVT(J) = J
         57     1   p   2v        100 CONTINUE
         58                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      A
                              <<< Loop-information  End >>>
         59     1                     DO 600 I = 1 , NDIM
         60     1               C
         61     1                         AIIMAX = 0.E0
         62     1                         MAXI   = I
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      IPVT
                              <<< Loop-information  End >>>
         63     2   s   2s                DO 200 I2 = I , NDIM
         64     2   p   2v                    AII = ABS(A(I,IPVT(I2)))
         65     2   s   2s                    IF(AIIMAX.LE.AII) AIIMAX = AII
         66     2   m   2m                    IF(AIIMAX.EQ.AII) MAXI = I2
         67     2   p   2v        200     CONTINUE
         68     1               C
         69     1                         IBUF = IPVT(I)
         70     1                         IPVT(I) = IPVT(MAXI)
         71     1                         IPVT(MAXI) = IBUF
         72     1               C
         73     1                         IPVTI = IPVT(I)
         74     1                         AII = A(I,IPVTI)
         75     1               C
         76     2                         IF(ABS(AII).GE.EPS) THEN
         77     2                             RAII = 1.E0/AII
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1143
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.00, ITR: 512, MVE: 9)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      A
                              <<< Loop-information  End >>>
         78     3  pp   2v                    DO 300 J = I , NDIM
         79     3   p   2v                        A(J,IPVTI) = A(J,IPVTI)*RAII
         80     3   p   2v        300         CONTINUE
         81     2                             B(IPVTI) = B(IPVTI)*RAII
         82     3                             DO 500 I2 = I+1 , NDIM
         83     3                                 IPVTI2 = IPVT(I2)
         84     3                                 FACT = A(I,IPVTI2)
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 843
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      A
                              <<< Loop-information  End >>>
         85     4  pp   2v                        DO 400 J=I,NDIM
         86     4   p   2v                            A(J,IPVTI2) = A(J,IPVTI2)-A(J,IPVTI)*FACT
         87     4   p   2v        400             CONTINUE
         88     3                                 B(IPVTI2) = B(IPVTI2)-B(IPVTI)*FACT
         89     3                 500         CONTINUE
         90     2                         ELSE
         91     2                             WRITE(IUT0,*)
         92     2                             WRITE(IUT0,*)' MATGAU: FATAL ERROR OCCURED         '
         93     2                             WRITE(IUT0,*)'       : DIAGONAL TERM BECAME ZERO   '
         94     2                             WRITE(IUT0,*)'       : WHEN SOLVING MATRIX EQUATION'
         95     2                             WRITE(IUT0,*)'       : WITH GAUSS METHOD           '
         96     2                             IERR = 1
         97     2                             RETURN
         98     2                         ENDIF
         99     1               C
        100     1                 600 CONTINUE
        101                     C
        102                           XX(NDIM) = B(IPVT(NDIM))
        103     1                     DO 800 I = NDIM-1 , 1 , -1
        104     1                         IPVTI = IPVT(I)
        105     1                         BI = B(IPVTI)
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1143
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
        106     2  pp    v                DO 700 J2 = I+1 , NDIM
        107     2   p    v                    BI = BI-A(J2,IPVTI)*XX(J2)
        108     2   p    v        700     CONTINUE
        109     1                         XX(I) = BI
        110     1                 800 CONTINUE
        111                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      XX, B
                              <<< Loop-information  End >>>
        112     1  pp   4v            DO 900 I = 1 , NDIM
        113     1   p   4v                B(I) = XX(I)
        114     1   p   4v        900 CONTINUE
        115                     C
        116                     C
        117                           RETURN
        118                           END

 Diagnostic messages: program name(MATGAU)
   jwd5001p-i  "matgau.f", line 55: このDOループを並列化しました。(名前:J)
   jwd6001s-i  "matgau.f", line 55: このDOループをSIMD化しました。(名前:J)
   jwd8204o-i  "matgau.f", line 55: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "matgau.f", line 55: ループの繰返し数が192回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5131p-i  "matgau.f", line 59: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6229s-i  "matgau.f", line 63: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "matgau.f", line 63: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "matgau.f", line 63: ループを展開数2回でアンローリングしました。
   jwd5202p-i  "matgau.f", line 65: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:AIIMAX)
   jwd6202s-i  "matgau.f", line 65: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:AIIMAX)
   jwd5001p-i  "matgau.f", line 78: このDOループを並列化しました。(名前:J)
   jwd6001s-i  "matgau.f", line 78: このDOループをSIMD化しました。(名前:J)
   jwd8204o-i  "matgau.f", line 78: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "matgau.f", line 78: ループの繰返し数が512回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5208p-i  "matgau.f", line 82: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:B)
   jwd5208p-i  "matgau.f", line 82: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:A)
   jwd5001p-i  "matgau.f", line 85: このDOループを並列化しました。(名前:J)
   jwd6001s-i  "matgau.f", line 85: このDOループをSIMD化しました。(名前:J)
   jwd8663o-i  "matgau.f", line 85: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "matgau.f", line 85: ループを展開数2回でアンローリングしました。
   jwd5208p-i  "matgau.f", line 103: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:XX)
   jwd5004p-i  "matgau.f", line 106: リダクション演算を含むDOループを並列化しました。(名前:J2)
   jwd6004s-i  "matgau.f", line 106: リダクション演算を含むDOループをSIMD化しました。(名前:J2)
   jwd5001p-i  "matgau.f", line 112: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "matgau.f", line 112: このDOループをSIMD化しました。(名前:I)
   jwd8204o-i  "matgau.f", line 112: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "matgau.f", line 112: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 118
   Statements : 63
   Stack(byte): 16112
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 118
   Total statements : 63
   Total stack(byte): 16112
   Total prefetch num: 0

