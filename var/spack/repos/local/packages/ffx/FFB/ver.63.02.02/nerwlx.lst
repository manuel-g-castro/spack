
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:13 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : nerwlx.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "NERWLX"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : NERWLX                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY Y.YAMADE            C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE NERWLX(X,Y,Z,NODE,NE,NP,N2,NEX,NS,NSP,
         16                          *                  LOCAL,LEWALL,NEWALL,NEAR,DSNEAR,WRK1,WRK2,WRK3)
         17                     C
         18                           IMPLICIT NONE
         19                     C
         20                           INTEGER*4 NODE,NE,NP,N2,NEX,NS,NSP,LOCAL,LEWALL,NEWALL,NEAR
         21                           REAL*4    X,Y,Z,DSNEAR,WRK1,WRK2,WRK3
         22                     C
         23                           INTEGER*4 I,IS,IE,NNPE,IEWALL,IEW,IETYPE,IPW1,IPW2,IPW3,IPW4
         24                           REAL*4    XWG,YWG,ZWG,D
         25                     C
         26                           DIMENSION X(NP),Y(NP),Z(NP),NODE(N2,NE),NEX(8),LOCAL(NSP,NS,4),
         27                          1          LEWALL(2,NEWALL),NEAR(NE),DSNEAR(NE),
         28                          2          WRK1(NE),WRK2(NE),WRK3(NE)
         29                     C
         30                     C
         31                     C      SEARCH THE NEAREST WALL SURFACE FOR ALL THE ELEMENTS
         32                     C         ( 3-D CALCULATION : SINGLE WORD & MULTI ELEMENT VERSION )
         33                     C                                           CODED BASED ON 'NEARWL'
         34                     C
         35                     C
         36                     C     ARGUMENT LISTINGS
         37                     C       (1) INPUT
         38                     C          X       (IP); X-COORDINATE OF GLOBAL NODES
         39                     C          Y       (IP); Y-COORDINATE OF GLOBAL NODES
         40                     C          Z       (IP); Z-COORDINATE OF GLOBAL NODES
         41                     C          NODE  (I,IE); NODE NO. TABLE BASED ON ELEMENT
         42                     C          NE          ; NUMBER OF TOTAL ELEMENTS
         43                     C          NP          ; NUMBER OF TOTAL    NODES
         44                     C          N           ; NUMBER OF NODES ASSIGNED TO ONE ELEMENT
         45                     C          LOCAL (I,IS); NODE NUMBER TABLE DEFINING ELEMENT SURFACES
         46                     C          LEWALL(I,IBE); WALL BOUNDARY ELEMENT AND ITS SURFACE
         47                     C          NEWALL      ; NUMBER OF WALL BOUNDARY SURFACES
         48                     C
         49                     C       (2) OUTPUT
         50                     C          NEAR    (IE); NEAREST WALL SURFACE
         51                     C          DSNEAR  (IE); DISTANCE TO THE NEAREST WALL SURFACE
         52                     C
         53                     C       (4) WORK
         54                     C          WRK1    (IE); STORES ELEMENT CENTER X-COORDINATES
         55                     C          WRK2    (IE); STORES ELEMENT CENTER Y-COORDINATES
         56                     C          WRK3    (IE); STORES ELEMENT CENTER Z-COORDINATES
         57                     C
         58                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2
                              <<< Loop-information  End >>>
         59     1  pp                 DO 100 IE = 1 , NE
         60     2   p                    IF(     NODE(8,IE).GE.1) THEN ! HEX
         61     2   p                       NNPE = 8
         62     2   p                    ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         63     2   p                       NNPE = 6
         64     2   p                    ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         65     2   p                       NNPE = 5
         66     2   p                    ELSE                          ! TET
         67     2   p                       NNPE = 4
         68     2   p                    ENDIF
         69     1   p                    WRK1(IE) = 0.0E0
         70     1   p                    WRK2(IE) = 0.0E0
         71     1   p                    WRK3(IE) = 0.0E0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NODE
                              <<< Loop-information  End >>>
         72     2   p   8v               DO 101 I=1,NNPE
         73     2   p   8v                  WRK1(IE) = WRK1(IE) + X(NODE(I,IE))
         74     2   p   8v                  WRK2(IE) = WRK2(IE) + Y(NODE(I,IE))
         75     2   p   8v                  WRK3(IE) = WRK3(IE) + Z(NODE(I,IE))
         76     2   p   8v       101     CONTINUE
         77     1   p                    WRK1(IE) = WRK1(IE)/FLOAT(NNPE)
         78     1   p                    WRK2(IE) = WRK2(IE)/FLOAT(NNPE)
         79     1   p                    WRK3(IE) = WRK3(IE)/FLOAT(NNPE)
         80     1   p             100 CONTINUE
         81                     C
         82                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK1, WRK2, WRK3, DSNEAR, NEAR
                              <<< Loop-information  End >>>
         83     1                     DO 210 IEWALL = 1 , NEWALL
         84     1                         IEW  = LEWALL(1,IEWALL)
         85     1                         IS   = LEWALL(2,IEWALL)
         86     2                         IF(     NODE(8,IEW).GE.1) THEN ! HEX
         87     2                            IETYPE = 4
         88     2                         ELSE IF(NODE(6,IEW).GE.1) THEN ! PRS
         89     2                            IETYPE = 3
         90     2                         ELSE IF(NODE(5,IEW).GE.1) THEN ! PYR
         91     2                            IETYPE = 2
         92     2                         ELSE                           ! TET
         93     2                            IETYPE = 1
         94     2                         ENDIF
         95     2                         IF(LOCAL(4,IS,IETYPE).GE.1) THEN      ! QUADRILATERAL
         96     2                            IPW1 = NODE(LOCAL(1,IS,IETYPE),IEW)
         97     2                            IPW2 = NODE(LOCAL(2,IS,IETYPE),IEW)
         98     2                            IPW3 = NODE(LOCAL(3,IS,IETYPE),IEW)
         99     2                            IPW4 = NODE(LOCAL(4,IS,IETYPE),IEW)
        100     2                            XWG = ( X(IPW1)+X(IPW2)+X(IPW3)+X(IPW4) )/4.0E0
        101     2                            YWG = ( Y(IPW1)+Y(IPW2)+Y(IPW3)+Y(IPW4) )/4.0E0
        102     2                            ZWG = ( Z(IPW1)+Z(IPW2)+Z(IPW3)+Z(IPW4) )/4.0E0
        103     2                         ELSE                                  ! TRIANGLE
        104     2                            IPW1 = NODE(LOCAL(1,IS,IETYPE),IEW)
        105     2                            IPW2 = NODE(LOCAL(2,IS,IETYPE),IEW)
        106     2                            IPW3 = NODE(LOCAL(3,IS,IETYPE),IEW)
        107     2                            XWG = ( X(IPW1)+X(IPW2)+X(IPW3) )/3.0E0
        108     2                            YWG = ( Y(IPW1)+Y(IPW2)+Y(IPW3) )/3.0E0
        109     2                            ZWG = ( Z(IPW1)+Z(IPW2)+Z(IPW3) )/3.0E0
        110     2                         ENDIF
        111     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 517
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.71, ITR: 160, MVE: 3)
                              <<<    UNSWITCHING
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      WRK3, WRK1, WRK2, DSNEAR, NEAR
                              <<< Loop-information  End >>>
        112     2  pp    v                DO 200 IE = 1 , NE
        113     2   p    v                    D = (WRK1(IE)-XWG)**2+(WRK2(IE)-YWG)**2+(WRK3(IE)-ZWG)**2
        114     3   p    v                    IF(IEWALL.EQ.1 .OR. D.LE.DSNEAR(IE)) THEN
        115     3   p    v                        DSNEAR(IE) = D
        116     3   p    v                        NEAR  (IE) = IEWALL
        117     3   p    v                    ENDIF
        118     2   p    v        200     CONTINUE
        119     1                 210 CONTINUE
        120                     C
        121                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 728
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.91, ITR: 320, MVE: 6)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DSNEAR
                              <<< Loop-information  End >>>
        122     1  pp   2v            DO 300 IE = 1 , NE
        123     1   p   2v                DSNEAR(IE) = SQRT(DSNEAR(IE))
        124     1   p   2v        300 CONTINUE
        125                     C
        126                     C
        127                           RETURN
        128                           END

 Diagnostic messages: program name(NERWLX)
   jwd8220o-i  "nerwlx.f", line 15: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "nerwlx.f", line 26: この仮引数'NEX'は、副プログラム中で使用されていません。
   jwd5001p-i  "nerwlx.f", line 59: このDOループを並列化しました。(名前:IE)
   jwd6004s-i  "nerwlx.f", line 72: リダクション演算を含むDOループをSIMD化しました。(名前:I)
   jwd8666o-i  "nerwlx.f", line 72: 浮動小数点レジスタが不足しているため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "nerwlx.f", line 72: ループを展開数8回でアンローリングしました。
   jwd8208o-i  "nerwlx.f", line 74: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8208o-i  "nerwlx.f", line 75: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd8206o-i  "nerwlx.f", line 77: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "nerwlx.f", line 78: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "nerwlx.f", line 79: 除算を逆数の乗算に変更しました。
   jwd5208p-i  "nerwlx.f", line 83: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NEAR)
   jwd5208p-i  "nerwlx.f", line 83: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:DSNEAR)
   jwd8209o-i  "nerwlx.f", line 100: 多項式の演算順序を変更しました。
   jwd8209o-i  "nerwlx.f", line 101: 多項式の演算順序を変更しました。
   jwd8209o-i  "nerwlx.f", line 102: 多項式の演算順序を変更しました。
   jwd8206o-i  "nerwlx.f", line 107: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "nerwlx.f", line 108: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "nerwlx.f", line 109: 除算を逆数の乗算に変更しました。
   jwd8321o-i  "nerwlx.f", line 112: ループをループアンスイッチングしました。
   jwd5001p-i  "nerwlx.f", line 112: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "nerwlx.f", line 112: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "nerwlx.f", line 112: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "nerwlx.f", line 112: ループの繰返し数が160回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "nerwlx.f", line 113: 多項式の演算順序を変更しました。
   jwd5001p-i  "nerwlx.f", line 122: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "nerwlx.f", line 122: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "nerwlx.f", line 122: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "nerwlx.f", line 122: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 128
   Statements : 70
   Stack(byte): 1952
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 128
   Total statements : 70
   Total stack(byte): 1952
   Total prefetch num: 0

