
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:24 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : setos2.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SETOS2"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SETOS2(IPART,NPART,N2,NE,NP,MFRM,MDOM,
          2                          *                  MCOMM,
          3                          *                  NPSET,LPSET1,LPSET4,
          4                          *                  NESET,LESET1,LESET4,
          5                          *                  X,Y,Z,NODE,
          6                          *                  OMEGA,TIME,IPATTR,IEATTR,IFATTR,
          7                          *                  NFRMS,LFRMS,NFRMR,LFRMR,
          8                          *                  NDOMS,LISTS,LDOMS,LOSFMS,NBDOMS,LOSPS,LTYPES,
          9                          *                  XOVERS,YOVERS,ZOVERS,
         10                          *                  NDOMR,LISTR,LDOMR,LOSFMR,NBDOMR,LOSPR,LTYPER,
         11                          *                  XOVERR,YOVERR,ZOVERR,
         12                          *                  MMRF,OMGMRF,AMRF,BNDBOX,OSBOXG,
         13                          *                  IUT6,IUT0,IERR)
         14                           IMPLICIT NONE
         15                     C
         16                     C[INPUT]
         17                           INTEGER*4 IPART,NPART,N2,NE,NP,MFRM,MDOM,NODE(N2,NE)
         18                           INTEGER*4 MCOMM
         19                           INTEGER*4 NPSET,LPSET1(NPSET),LPSET4(NPSET)
         20                           INTEGER*4 NESET,LESET1(NESET),LESET4(NESET)
         21                           INTEGER*4 IPATTR(NP),IEATTR(NE),IFATTR(*)
         22                           INTEGER*4 NFRMS(NPART),LFRMS(MFRM,NPART),
         23                          *          NFRMR(NPART),LFRMR(MFRM,NPART)
         24                           REAL*4    X(NP),Y(NP),Z(NP),OMEGA,TIME,
         25                          *          BNDBOX(6,NPART),OSBOXG(6,NPART)
         26                           INTEGER*4 MMRF
         27                           REAL*4    OMGMRF(MMRF),AMRF(3,MMRF)
         28                     C
         29                     C[OUTPUT]
         30                           INTEGER*4 NDOMS,NDOMR
         31                           INTEGER*4 LDOMS (MDOM),LISTS(MDOM),LOSFMS(MCOMM),
         32                          *          NBDOMS(MDOM),LOSPS(MCOMM),LTYPES(MCOMM),
         33                          *          LDOMR (MDOM),LISTR(MDOM),LOSFMR(MCOMM),
         34                          *          NBDOMR(MDOM),LOSPR(MCOMM),LTYPER(MCOMM)
         35                           REAL*4    XOVERS(MCOMM),YOVERS(MCOMM),
         36                          *          ZOVERS(MCOMM),XOVERR(MCOMM),
         37                          *          YOVERR(MCOMM),ZOVERR(MCOMM)
         38                           INTEGER*4 IUT6,IUT0,IERR
         39                     C
         40                     C[LOCAL]
         41                           INTEGER*4 JPART,I,J,IFRM,JFRM,IP,IE,IBP,IBE,INEW,LWRK(MDOM)
         42                           INTEGER*4 NUM1,IERRA,ICHECK,II
         43                           INTEGER*4 IP1,IP2,IP3,IP4,IP5,IP6,IP7,IP8
         44                           DATA NUM1 /1/
         45                           REAL*4    XBUF0,YBUF0,ZBUF0
         46                           REAL*4    XBUF ,YBUF ,ZBUF
         47                           REAL*4    TH,COSTH,SINTH
         48                           REAL*4 O1,O2,C0,S0,C1,S1,C2,S2,AX,AY
         49                           REAL*4 UBUF,VBUF,WBUF
         50                           REAL*4 UR3,VR3,WR3
         51                           REAL*4 XR1,YR1,ZR1
         52                           REAL*4 XR2,YR2,ZR2
         53                     C
         54                     C
         55                     C     VERSION 2011.07.15 WRITTEN BY Y.YAMADE
         56                     C
         57                     C     ARGUMENT LIST
         58                     C
         59                     C[INPUT]
         60                     C IPART          : DOMAIN NUMBER (1 - NPART)
         61                     C NPART          : NUMBER OF DOMAINS
         62                     C NE             : NUMBER OF ELEMENTS
         63                     C NP             : NUMBER OF NODES
         64                     C MFRM           : MAX. NUMBER OF FRAMES
         65                     C MDOM           : MAX. NUMBER OF DOMAIN TO BE COMMUNICATED
         66                     C NPSET          : NUMBER OF OVERSET NOUSES
         67                     C LPSET1(IBP)    : OVERSET NODES LIST
         68                     C NFRMS(  IPART) : NUMBER OF FRAMES FOR SENDING   IN THE DOMAIN OF IPART
         69                     C LFRMS(I,IPART) : FRAME LIST       FOR SENDING   IN THE DOMAIN OF IPART
         70                     C NFRMR(  IPART) : NUMBER OF FRAMES FOR RECEIVING IN THE DOMAIN OF IPART
         71                     C LFRMR(I,IPART) : FRAME LST        FOR RECEIVING IN THE DOMAIN OF IPART
         72                     C X(IP)      : X COORDINATE
         73                     C Y(IP)      : Y COORDINATE
         74                     C Z(IP)      : Z COORDINATE
         75                     C
         76                     C[OUTPUT]
         77                     C NDOMS          : NUMBER OF DOMAIN  FOR SENDING
         78                     C LDOMS (  IDOM) : DOMAIN LIST       FOR SENDING
         79                     C NBDOMS(I,IDOM) : NUMBER OF NODES   FOR SENDING TO THE DOMAIN OF IDOM
         80                     C LOSFMS(I,IDOM) : FRAME NUMBER LIST FOR SENDING TO THE DOMAIN OF IDOM
         81                     C LOSPS (I,IDOM) : NODE  NUMBER LIST FOR SENDING TO THE DOMAIN OF IDOM
         82                     C XOVERS(I,IDOM) : X-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
         83                     C YOVERS(I,IDOM) : Y-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
         84                     C ZOVERS(I,IDOM) : Z-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
         85                     C NDOMR          : NUMBER OF DOMAIN  FOR RECEIVING
         86                     C LDOMR (  IDOM) : DOMAIN LIST       FOR RECEIVING FROM THE DOMAIN OF IDOM
         87                     C NBDOMR(I,IDOM) : NUMBER OF NODES   FOR RECEIVING FROM THE DOMAIN OF IDOM
         88                     C LOSFMR(I,IDOM) : FRAME NUMBER LIST FOR RECEIVING FROM THE DOMAIN OF IDOM
         89                     C LOSPR (I,IDOM) : NODE  NUMBER LIST FOR RECEIVING FROM THE DOMAIN OF IDOM
         90                     C XOVERR(I,IDOM) : X-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
         91                     C YOVERR(I,IDOM) : Y-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
         92                     C ZOVERR(I,IDOM) : Z-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
         93                     C
         94                     C
         95                           IERR=0
         96                           TH=OMEGA*TIME
         97                           COSTH=COS(TH)
         98                           SINTH=SIN(TH)
         99                     C
        100     1                     IF(IPART.EQ.0) THEN
        101     1                         NDOMS=1
        102     1                         NDOMR=1
        103     1                         LDOMS(1)=0
        104     1                         LDOMR(1)=0
        105     1                         LISTS(1)=1
        106     1                         LISTR(1)=1
        107     1                         NBDOMS(1)=NPSET+NESET
        108     1                         NBDOMR(1)=NPSET+NESET
        109     1               C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 167
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPSET4, LOSPS, LOSPR, LPSET1, LOSFMS
                              <<<      LOSFMR, LTYPER, LTYPES, XOVERS, YOVERS
                              <<<      XOVERR, YOVERR, ZOVERS, ZOVERR
                              <<< Loop-information  End >>>
        110     2  pp    s                DO 100 IBP=1,NPSET
        111     2   p    v                    IP  =LPSET1(IBP)
        112     2   p    v                    IFRM=LPSET4(IBP)
        113     2   p    v                    LOSFMS(IBP)=IFRM
        114     2   p    v                    LOSFMR(IBP)=IFRM
        115     2   p    v                    LOSPS (IBP)=IBP
        116     2   p    v                    LOSPR (IBP)=IBP
        117     2   p    v                    LTYPES(IBP)=1
        118     2   p    v                    LTYPER(IBP)=1
        119     2               C
        120     2   p    v                    XBUF=X(IP)
        121     2   p    v                    YBUF=Y(IP)
        122     2   p    v                    ZBUF=Z(IP)
        123     2               C
        124     2   p    v                    O1=OMEGA
        125     2   p    v                    C1=COS(O1*TIME)
        126     2   p    v                    S1=SIN(O1*TIME)
        127     2               C
        128     3   p    m                    IF(IPATTR(IP)         .GE. 0  .AND.
        129     3                    *           IFATTR(LPSET4(IBP)).EQ.-1       )THEN
        130     3               CC            [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A1]
        131     3   p    s                       XBUF= C1*X(IP)+S1*Y(IP)
        132     3   p    s                       YBUF=-S1*X(IP)+C1*Y(IP)
        133     3   p    v                    ENDIF
        134     2               C
        135     3   p    s                    IF(IPATTR(IP)         .EQ.-1  .AND.
        136     3                    *           IFATTR(LPSET4(IBP)).GE. 0       )THEN
        137     3               CC            [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A1]
        138     3   p    s                       XBUF=C1*X(IP)-S1*Y(IP)
        139     3   p    s                       YBUF=S1*X(IP)+C1*Y(IP)
        140     3   p    v                    ENDIF
        141     2               C
        142     2   p    v                    XOVERS(IBP)=XBUF
        143     2   p    v                    XOVERR(IBP)=XBUF
        144     2   p    v                    YOVERS(IBP)=YBUF
        145     2   p    v                    YOVERR(IBP)=YBUF
        146     2   p    v                    ZOVERS(IBP)=ZBUF
        147     2   p    v                    ZOVERR(IBP)=ZBUF
        148     2   p    v        100     CONTINUE
        149     1               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LESET4, LESET1, LOSFMS, LOSFMR, LOSPS
                              <<<      LOSPR, LTYPES, LTYPER, XOVERS, XOVERR
                              <<<      YOVERS, YOVERR, ZOVERS, ZOVERR
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 10
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        150     2   s    s                DO 110 IBE=1,NESET
        151     2   p    v                    IE  =LESET1(IBE)
        152     2   p    v                    IFRM=LESET4(IBE)
        153     2   p    v                    LOSFMS(NPSET+IBE)=IFRM
        154     2   p    v                    LOSFMR(NPSET+IBE)=IFRM
        155     2   p    v                    LOSPS (NPSET+IBE)=IBE
        156     2   p    v                    LOSPR (NPSET+IBE)=IBE
        157     2   p    v                    LTYPES(NPSET+IBE)=2
        158     2   p    v                    LTYPER(NPSET+IBE)=2
        159     2               C
        160     2   p    v                    IP1=NODE(1,IE)
        161     2   p    v                    IP2=NODE(2,IE)
        162     2   p    v                    IP3=NODE(3,IE)
        163     2   p    v                    IP4=NODE(4,IE)
        164     2   p    v                    IP5=NODE(5,IE)
        165     2   p    v                    IP6=NODE(6,IE)
        166     2   p    v                    IP7=NODE(7,IE)
        167     2   p    v                    IP8=NODE(8,IE)
        168     3   p    s                    IF(IP8.NE.0) THEN
        169     3   m    s                        XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        170     3                    *                   +X(IP5)+X(IP6)+X(IP7)+X(IP8))/8.0E0
        171     3   m    s                        YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        172     3                    *                   +Y(IP5)+Y(IP6)+Y(IP7)+Y(IP8))/8.0E0
        173     3   m    s                        ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        174     3                    *                   +Z(IP5)+Z(IP6)+Z(IP7)+Z(IP8))/8.0E0
        175     3   p    s                    ELSE IF(IP6.NE.0) THEN
        176     3   m    s                        XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        177     3                    *                   +X(IP5)+X(IP6)              )/6.0E0
        178     3   m    s                        YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        179     3                    *                   +Y(IP5)+Y(IP6)              )/6.0E0
        180     3   m    m                        ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        181     3                    *                   +Z(IP5)+Z(IP6)              )/6.0E0
        182     3   p    s                    ELSE IF(IP5.NE.0) THEN
        183     3   m    s                        XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        184     3                    *                   +X(IP5)                     )/5.0E0
        185     3   m    s                        YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        186     3                    *                   +Y(IP5)                     )/5.0E0
        187     3   m    s                        ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        188     3                    *                   +Z(IP5)                     )/5.0E0
        189     3   p    s                    ELSE IF(IP4.NE.0) THEN
        190     3   m    s                        XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4))/4.0E0
        191     3   m    s                        YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4))/4.0E0
        192     3   m    s                        ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4))/4.0E0
        193     3   p    v                    ENDIF
        194     2               C
        195     2   s    s                    XBUF=XBUF0
        196     2   s    s                    YBUF=YBUF0
        197     2   p    v                    ZBUF=ZBUF0
        198     2               C
        199     2   p    v                    O1=OMEGA
        200     2   p    v                    C1=COS(O1*TIME)
        201     2   p    v                    S1=SIN(O1*TIME)
        202     2               C
        203     3   p    m                    IF(IEATTR(IE)         .GE. 0  .AND.
        204     3                    *           IFATTR(LESET4(IBE)).EQ.-1       )THEN
        205     3               CC            [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A1]
        206     3   m    s                       XBUF= C1*XBUF0+S1*YBUF0
        207     3   m    s                       YBUF=-S1*XBUF0+C1*YBUF0
        208     3   p    v                    ENDIF
        209     2               C
        210     3   p    s                    IF(IEATTR(IE)         .EQ.-1  .AND.
        211     3                    *           IFATTR(LESET4(IBE)).GE. 0       )THEN
        212     3               CC            [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A1]
        213     3   m    s                       XBUF=C1*XBUF0-S1*YBUF0
        214     3   m    s                       YBUF=S1*XBUF0+C1*YBUF0
        215     3   p    v                    ENDIF
        216     2               C
        217     2   p    v                    XOVERS(NPSET+IBE)=XBUF
        218     2   p    v                    XOVERR(NPSET+IBE)=XBUF
        219     2   p    v                    YOVERS(NPSET+IBE)=YBUF
        220     2   p    v                    YOVERR(NPSET+IBE)=YBUF
        221     2   s    s                    ZOVERS(NPSET+IBE)=ZBUF
        222     2   s    s                    ZOVERR(NPSET+IBE)=ZBUF
        223     2   p    v        110     CONTINUE
        224     1               C
        225     1                         RETURN
        226     1                     ENDIF
        227                     CC
        228                     CCYY
        229                     CCYY[1] SEARCH DOMAIN FOR SENDING AND RECEIVING
        230                     CCYY
        231                           NDOMS=0
        232                           NDOMR=0
        233                           LISTS(1)=1
        234                           LISTR(1)=1
        235                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      NBDOMR, NBDOMS
                              <<< Loop-information  End >>>
        236     1  pp   2v            DO 500 I=1,MDOM
        237     1   p   2v                NBDOMS(I)=0
        238     1   p   2v                NBDOMR(I)=0
        239     1   p   2v        500 CONTINUE
        240                     C
        241                           II=0
        242     1                     DO 1000 JPART=1,NPART
        243     1               CC
        244     1               CC BOUNDING BOX FILTERING
        245     1               CC
        246     1                         ICHECK=1
        247     1                         CALL CHKBOX(OSBOXG(1,IPART),BNDBOX(1,JPART),ICHECK)
        248     1                         IF(ICHECK.EQ.0) GOTO 1000
        249     1               CC
        250     1               CC SEACH DOMAINS FOR SENDING
        251     1               CC
        252     1                        INEW=0
        253     2                        DO 1100 I=1,NFRMS(IPART)
        254     2                             IFRM=LFRMS(I,IPART)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFRMR
                              <<< Loop-information  End >>>
        255     3                             DO 1110 J=1,NFRMR(JPART)
        256     3                                 JFRM=LFRMR(J,JPART)
        257     3                                 IF(IFRM.NE.JFRM) GOTO 1110
        258     4                                 IF(INEW.EQ.0) THEN
        259     4                                     NDOMS=NDOMS+1
        260     5                                     IF(NDOMS.EQ.1) THEN
        261     5                                         II=0
        262     5                                     ELSE
        263     5                                         II=II+NBDOMS(NDOMS-1)
        264     5                                     ENDIF
        265     5                                     IF(NDOMS.GT.MDOM) THEN
        266     5                                         IERR=1
        267     5                                         WRITE(IUT0,*)
        268     5                    *                    'INSUFFICIENT MEMORY: SET LARGER MDOM'
        269     5                                         GOTO 3000
        270     5                                     ENDIF
        271     4                                     LDOMS(NDOMS)=JPART
        272     4                                     INEW=1
        273     4                                 ENDIF
        274     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPSET1, LPSET4
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 3
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        275     4   s    s                        DO 1120 IBP=1,NPSET
        276     4   p    m                            IP=LPSET1(IBP)
        277     4   p    m                            IF(LPSET4(IBP).NE.IFRM) GOTO 1120
        278     4               C
        279     4               C
        280     4   p    s                            XBUF=X(IP)
        281     4   p    s                            YBUF=Y(IP)
        282     4   p    s                            ZBUF=Z(IP)
        283     4               C
        284     4   p    s                            O1=OMEGA
        285     5   p    s                            IF(IPATTR(IP).GE.0) THEN
        286     5   p    s                                O2=0.0
        287     5   p    s                                AX=1.0
        288     5   p    s                                AY=0.0
        289     5   p    s                            ELSE
        290     5   p    s                                O2=OMGMRF(-IPATTR(IP))
        291     5   p    s                                AX=AMRF(1,-IPATTR(IP))
        292     5   p    s                                AY=AMRF(2,-IPATTR(IP))
        293     5   p    s                            ENDIF
        294     4   p    s                            C0=AX/SQRT(AX*AX+AY*AY)
        295     4   p    s                            S0=AY/SQRT(AX*AX+AY*AY)
        296     4   p    s                            C1  = COS(O1*TIME)
        297     4   p    s                            S1  = SIN(O1*TIME)
        298     4   p    s                            C2  = COS(O2*TIME)
        299     4   p    s                            S2  = SIN(O2*TIME)
        300     4               C
        301     5   p    s                            IF(IPATTR(IP)         .GE. 0  .AND.
        302     5                    *                   IFATTR(LPSET4(IBP)).EQ.-1       )THEN
        303     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A1]
        304     5   p    s                               XBUF= C1*X(IP)+S1*Y(IP)
        305     5   p    s                               YBUF=-S1*X(IP)+C1*Y(IP)
        306     5   p    s                            ENDIF
        307     4               C
        308     5   p    s                            IF(IPATTR(IP)         .EQ.-1  .AND.
        309     5                    *                   IFATTR(LPSET4(IBP)).GE. 0       )THEN
        310     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A1]
        311     5   p    s                               XBUF=C1*X(IP)-S1*Y(IP)
        312     5   p    s                               YBUF=S1*X(IP)+C1*Y(IP)
        313     5   p    s                            ENDIF
        314     4               C
        315     5   p    s                            IF(IPATTR(IP)         .LT.-1  .AND.
        316     5                    *                   IFATTR(LPSET4(IBP)).EQ.-1       )THEN
        317     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A0]
        318     5   p    s                                XR1 = C0*X(IP)+S0*Y(IP)
        319     5   p    s                                YR1 =-S0*X(IP)+C0*Y(IP)
        320     5   p    s                                ZR1 =    Z(IP)
        321     5               CC                    [ROTATE COORDINATES AROUND X-AXIS WITH THE ANGLE A2]
        322     5   p    s                                XR2 = XR1
        323     5   p    s                                YR2 = C2*YR1-S2*ZR1
        324     5   p    s                                ZR2 = S2*YR1+C2*ZR1
        325     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A0]
        326     5   p    s                                XBUF= C0*XR2-S0*YR2
        327     5   p    s                                YBUF= S0*XR2+C0*YR2
        328     5   p    s                                ZBUF=    ZR2
        329     5   p    s                            ENDIF
        330     4               C
        331     5   p    s                            IF(IPATTR(IP)         .EQ.-1  .AND.
        332     5                    *                   IFATTR(LPSET4(IBP)).LT.-1       )THEN
        333     5   p    s                                O2=OMGMRF(-IFATTR(LPSET4(IBP)))
        334     5   p    s                                AX=AMRF(1,-IFATTR(LPSET4(IBP)))
        335     5   p    s                                AY=AMRF(2,-IFATTR(LPSET4(IBP)))
        336     5   p    s                                C0=AX/SQRT(AX*AX+AY*AY)
        337     5   p    s                                S0=AY/SQRT(AX*AX+AY*AY)
        338     5   p    s                                C1  = COS(O1*TIME)
        339     5   p    s                                S1  = SIN(O1*TIME)
        340     5   p    s                                C2  = COS(O2*TIME)
        341     5   p    s                                S2  = SIN(O2*TIME)
        342     5               C                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A0]
        343     5   p    s                                XR1 = C0*X(IP)+S0*Y(IP)
        344     5   p    s                                YR1 =-S0*X(IP)+C0*Y(IP)
        345     5   p    s                                ZR1 =    Z(IP)
        346     5               C                    [ROTATE COORDINATES AROUND X-AXIS WITH THE ANGLE -A2]
        347     5   p    s                                XR2 = XR1
        348     5   p    s                                YR2 = C2*YR1+S2*ZR1
        349     5   p    s                                ZR2 =-S2*YR1+C2*ZR1
        350     5               C                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A0]
        351     5   p    s                                XBUF= C0*XR2-S0*YR2
        352     5   p    s                                YBUF= S0*XR2+C0*YR2
        353     5   p    s                                ZBUF=    ZR2
        354     5   p    s                            ENDIF
        355     4               C
        356     4   p    s                            IF(XBUF.LT.BNDBOX(1,JPART)) GOTO 1120
        357     4   p    s                            IF(YBUF.LT.BNDBOX(2,JPART)) GOTO 1120
        358     4   p    s                            IF(ZBUF.LT.BNDBOX(3,JPART)) GOTO 1120
        359     4   p    s                            IF(XBUF.GT.BNDBOX(4,JPART)) GOTO 1120
        360     4   p    s                            IF(YBUF.GT.BNDBOX(5,JPART)) GOTO 1120
        361     4   p    m                            IF(ZBUF.GT.BNDBOX(6,JPART)) GOTO 1120
        362     4               C
        363     4   s    s                            NBDOMS(NDOMS           )=NBDOMS(NDOMS)+1
        364     4   m    s                            LOSFMS(II+NBDOMS(NDOMS))=IFRM
        365     4   s    s                            LOSPS (II+NBDOMS(NDOMS))=IBP
        366     4   s    s                            LTYPES(II+NBDOMS(NDOMS))=1
        367     4   s    s                            XOVERS(II+NBDOMS(NDOMS))=XBUF
        368     4   s    s                            YOVERS(II+NBDOMS(NDOMS))=YBUF
        369     4   s    s                            ZOVERS(II+NBDOMS(NDOMS))=ZBUF
        370     4               C
        371     4   p    v       1120             CONTINUE
        372     3               C
        373     3               C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LESET1, LESET4
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 11
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        374     4   s    s                        DO 1130 IBE=1,NESET
        375     4   p    v                            IE=LESET1(IBE)
        376     4   p    m                            IF(LESET4(IBE).NE.IFRM) GOTO 1130
        377     4               C
        378     4   p    s                            IP1=NODE(1,IE)
        379     4   p    s                            IP2=NODE(2,IE)
        380     4   p    s                            IP3=NODE(3,IE)
        381     4   p    s                            IP4=NODE(4,IE)
        382     4   p    s                            IP5=NODE(5,IE)
        383     4   p    s                            IP6=NODE(6,IE)
        384     4   p    s                            IP7=NODE(7,IE)
        385     4   p    s                            IP8=NODE(8,IE)
        386     5   p    s                            IF(IP8.NE.0) THEN
        387     5   m    s                                XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        388     5                    *                           +X(IP5)+X(IP6)+X(IP7)+X(IP8))/8.0E0
        389     5   m    s                                YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        390     5                    *                           +Y(IP5)+Y(IP6)+Y(IP7)+Y(IP8))/8.0E0
        391     5   m    s                                ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        392     5                    *                           +Z(IP5)+Z(IP6)+Z(IP7)+Z(IP8))/8.0E0
        393     5   p    s                            ELSE IF(IP6.NE.0) THEN
        394     5   m    s                                XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        395     5                    *                           +X(IP5)+X(IP6)              )/6.0E0
        396     5   m    s                                YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        397     5                    *                           +Y(IP5)+Y(IP6)              )/6.0E0
        398     5   m    m                                ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        399     5                    *                           +Z(IP5)+Z(IP6)              )/6.0E0
        400     5   p    s                            ELSE IF(IP5.NE.0) THEN
        401     5   m    s                                XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4)
        402     5                    *                           +X(IP5)                     )/5.0E0
        403     5   m    s                                YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4)
        404     5                    *                           +Y(IP5)                     )/5.0E0
        405     5   m    s                                ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4)
        406     5                    *                           +Z(IP5)                     )/5.0E0
        407     5   p    s                            ELSE IF(IP4.NE.0) THEN
        408     5   m    s                                XBUF0=( X(IP1)+X(IP2)+X(IP3)+X(IP4))/4.0E0
        409     5   m    s                                YBUF0=( Y(IP1)+Y(IP2)+Y(IP3)+Y(IP4))/4.0E0
        410     5   m    s                                ZBUF0=( Z(IP1)+Z(IP2)+Z(IP3)+Z(IP4))/4.0E0
        411     5   p    s                            ENDIF
        412     4               C
        413     4   s    s                            XBUF=XBUF0
        414     4   s    s                            YBUF=YBUF0
        415     4   s    s                            ZBUF=ZBUF0
        416     4               C
        417     4   p    s                            O1=OMEGA
        418     5   p    s                            IF(IEATTR(IE).GE.0) THEN
        419     5   p    s                                O2=0.0
        420     5   p    s                                AX=1.0
        421     5   p    s                                AY=0.0
        422     5   p    s                            ELSE
        423     5   p    s                                O2=OMGMRF(-IEATTR(IE))
        424     5   p    s                                AX=AMRF(1,-IEATTR(IE))
        425     5   p    s                                AY=AMRF(2,-IEATTR(IE))
        426     5   p    s                            ENDIF
        427     4   p    s                            C0=AX/SQRT(AX*AX+AY*AY)
        428     4   p    s                            S0=AY/SQRT(AX*AX+AY*AY)
        429     4   p    s                            C1  = COS(O1*TIME)
        430     4   p    s                            S1  = SIN(O1*TIME)
        431     4   p    s                            C2  = COS(O2*TIME)
        432     4   p    s                            S2  = SIN(O2*TIME)
        433     4               C
        434     5   p    s                            IF(IEATTR(IE)         .GE. 0  .AND.
        435     5                    *                   IFATTR(LESET4(IBE)).EQ.-1       )THEN
        436     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A1]
        437     5   m    s                               XBUF= C1*XBUF0+S1*YBUF0
        438     5   m    s                               YBUF=-S1*XBUF0+C1*YBUF0
        439     5   p    s                            ENDIF
        440     4               C
        441     5   p    s                            IF(IEATTR(IE)         .EQ.-1  .AND.
        442     5                    *                   IFATTR(LESET4(IBE)).GE. 0       )THEN
        443     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A1]
        444     5   m    s                               XBUF=C1*XBUF0-S1*YBUF0
        445     5   m    s                               YBUF=S1*XBUF0+C1*YBUF0
        446     5   p    s                            ENDIF
        447     4               C
        448     5   p    s                            IF(IEATTR(IE)         .LT.-1  .AND.
        449     5                    *                   IFATTR(LESET4(IBE)).EQ.-1       )THEN
        450     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A0]
        451     5   m    s                                XR1 = C0*XBUF0+S0*YBUF0
        452     5   m    s                                YR1 =-S0*XBUF0+C0*YBUF0
        453     5   p    s                                ZR1 =    ZBUF0
        454     5               CC                    [ROTATE COORDINATES AROUND X-AXIS WITH THE ANGLE A2]
        455     5   p    s                                XR2 = XR1
        456     5   m    s                                YR2 = C2*YR1-S2*ZR1
        457     5   m    s                                ZR2 = S2*YR1+C2*ZR1
        458     5               CC                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A0]
        459     5   p    s                                XBUF= C0*XR2-S0*YR2
        460     5   p    s                                YBUF= S0*XR2+C0*YR2
        461     5   p    s                                ZBUF=    ZR2
        462     5   p    s                            ENDIF
        463     4               C
        464     5   p    s                            IF(IEATTR(IE)         .EQ.-1  .AND.
        465     5                    *                   IFATTR(LESET4(IBE)).LT.-1       )THEN
        466     5   p    s                                O2=OMGMRF(-IFATTR(LESET4(IBE)))
        467     5   p    s                                AX=AMRF(1,-IFATTR(LESET4(IBE)))
        468     5   p    s                                AY=AMRF(2,-IFATTR(LESET4(IBE)))
        469     5   p    s                                C0=AX/SQRT(AX*AX+AY*AY)
        470     5   p    s                                S0=AY/SQRT(AX*AX+AY*AY)
        471     5   p    s                                C1  = COS(O1*TIME)
        472     5   p    s                                S1  = SIN(O1*TIME)
        473     5   p    s                                C2  = COS(O2*TIME)
        474     5   s    s                                S2  = SIN(O2*TIME)
        475     5               C                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE A0]
        476     5   m    s                                XR1 = C0*XBUF0+S0*YBUF0
        477     5   m    s                                YR1 =-S0*XBUF0+C0*YBUF0
        478     5   p    s                                ZR1 =    ZBUF0
        479     5               C                    [ROTATE COORDINATES AROUND X-AXIS WITH THE ANGLE -A2]
        480     5   p    s                                XR2 = XR1
        481     5   m    s                                YR2 = C2*YR1+S2*ZR1
        482     5   m    s                                ZR2 =-S2*YR1+C2*ZR1
        483     5               C                    [ROTATE COORDINATES AROUND Z-AXIS WITH THE ANGLE -A0]
        484     5   p    s                                XBUF= C0*XR2-S0*YR2
        485     5   p    s                                YBUF= S0*XR2+C0*YR2
        486     5   p    s                                ZBUF=    ZR2
        487     5   p    s                            ENDIF
        488     4               C
        489     4   p    s                            IF(XBUF.LT.BNDBOX(1,JPART)) GOTO 1130
        490     4   p    s                            IF(YBUF.LT.BNDBOX(2,JPART)) GOTO 1130
        491     4   p    s                            IF(ZBUF.LT.BNDBOX(3,JPART)) GOTO 1130
        492     4   p    s                            IF(XBUF.GT.BNDBOX(4,JPART)) GOTO 1130
        493     4   p    s                            IF(YBUF.GT.BNDBOX(5,JPART)) GOTO 1130
        494     4   p    s                            IF(ZBUF.GT.BNDBOX(6,JPART)) GOTO 1130
        495     4               C
        496     4   s    s                            NBDOMS(NDOMS           )=NBDOMS(NDOMS)+1
        497     4   m    s                            LOSFMS(II+NBDOMS(NDOMS))=IFRM
        498     4   s    s                            LOSPS (II+NBDOMS(NDOMS))=IBE
        499     4   s    s                            LTYPES(II+NBDOMS(NDOMS))=2
        500     4   s    s                            XOVERS(II+NBDOMS(NDOMS))=XBUF
        501     4   s    s                            YOVERS(II+NBDOMS(NDOMS))=YBUF
        502     4   s    s                            ZOVERS(II+NBDOMS(NDOMS))=ZBUF
        503     4               C
        504     4   p    v       1130             CONTINUE
        505     3               C
        506     3                                 IF(NDOMS.GT.1)
        507     3                    *            LISTS(NDOMS)=LISTS(NDOMS-1)+NBDOMS(NDOMS-1)
        508     3               C
        509     3                                 GOTO 1100
        510     3               C
        511     3                1110         CONTINUE
        512     2                1100     CONTINUE
        513     1                1000 CONTINUE
        514                     C
        515                     C
        516                     CC
        517                     CC SEACH DOMAINS FOR RECEIVING
        518                     CC
        519     1                     DO 2000 JPART=1,NPART
        520     1               C
        521     1               CC
        522     1               CC BOUNDING BOX FILTERING
        523     1               CC
        524     1                         ICHECK=1
        525     1                         CALL CHKBOX(OSBOXG(1,JPART),BNDBOX(1,IPART),ICHECK)
        526     1                         IF(ICHECK.EQ.0) GOTO 2000
        527     1               C
        528     1                         INEW=0
        529     2                         DO 2100 I=1,NFRMR(IPART)
        530     2                             IFRM=LFRMR(I,IPART)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFRMS
                              <<< Loop-information  End >>>
        531     3                             DO 2110 J=1,NFRMS(JPART)
        532     3                                 JFRM=LFRMS(J,JPART)
        533     3                                 IF(IFRM.NE.JFRM) GOTO 2110
        534     4                                 IF(INEW.EQ.0) THEN
        535     4                                     NDOMR=NDOMR+1
        536     5                                     IF(NDOMR.GT.MDOM) THEN
        537     5                                         IERR=1
        538     5                                         WRITE(IUT0,*)
        539     5                    *                    'INSUFFICIENT MEMORY: SET LARGER MDOM'
        540     5                                         GOTO 3000
        541     5                                     ENDIF
        542     4                                     LDOMR(NDOMR)=JPART
        543     4                                     INEW=1
        544     4                                 ENDIF
        545     3                                 GOTO 2100
        546     3                2110        CONTINUE
        547     2                2100     CONTINUE
        548     1               C
        549     1                2000 CONTINUE
        550                     C
        551                      3000 CONTINUE
        552                     C
        553                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        554     1                     IF(IERRA.NE.0) THEN
        555     1                         IERR=1
        556     1                         RETURN
        557     1                     ENDIF
        558                     CCYY
        559                     CCYY[2] COMMUNICATE NUM. OF DATA ( NBDOMS --> NNDOMR )
        560                     CCYY
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWRK
                              <<< Loop-information  End >>>
        561     1  pp   4v            DO 4000 I=1,MDOM
        562     1   p   4v                LWRK(I)=1
        563     1   p   4v       4000 CONTINUE
        564                           CALL DDSET5(IPART,NUM1,
        565                          *            NDOMS,LDOMS,LWRK,NBDOMS,
        566                          *            NDOMR,LDOMR,LWRK,NBDOMR,IERR)
        567                     C
        568     1                     IF(NDOMR.GE.2) THEN
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 3.33, ITR: 12, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LISTR, NBDOMR
                              <<< Loop-information  End >>>
        569     2   s   2s                DO 4100 I=2,NDOMR
        570     2   s   2s                    LISTR(I)=LISTR(I-1)+NBDOMR(I-1)
        571     2   s   2s       4100     CONTINUE
        572     1                     ENDIF
        573                     CCYY
        574                     CCYY[3] COMMUNICATE   LOSFMS,LOSP,[X,Y,Z]OVERS
        575                     CCYY
        576                           CALL DDSET6(IPART,MCOMM,
        577                          *            NDOMS,LDOMS,NBDOMS,LISTS,LOSFMS,
        578                          *            NDOMR,LDOMR,NBDOMR,LISTR,LOSFMR,IERR)
        579                     C
        580                           CALL DDSET6(IPART,MCOMM,
        581                          *            NDOMS,LDOMS,NBDOMS,LISTS,LOSPS,
        582                          *            NDOMR,LDOMR,NBDOMR,LISTR,LOSPR,IERR)
        583                     C
        584                           CALL DDSET6(IPART,MCOMM,
        585                          *            NDOMS,LDOMS,NBDOMS,LISTS,LTYPES,
        586                          *            NDOMR,LDOMR,NBDOMR,LISTR,LTYPER,IERR)
        587                     C
        588                           CALL DDSET6(IPART,MCOMM,
        589                          *            NDOMS,LDOMS,NBDOMS,LISTS,XOVERS,
        590                          *            NDOMR,LDOMR,NBDOMR,LISTR,XOVERR,IERR)
        591                     C
        592                           CALL DDSET6(IPART,MCOMM,
        593                          *            NDOMS,LDOMS,NBDOMS,LISTS,YOVERS,
        594                          *            NDOMR,LDOMR,NBDOMR,LISTR,YOVERR,IERR)
        595                     C
        596                           CALL DDSET6(IPART,MCOMM,
        597                          *            NDOMS,LDOMS,NBDOMS,LISTS,ZOVERS,
        598                          *            NDOMR,LDOMR,NBDOMR,LISTR,ZOVERR,IERR)
        599                     C
        600                           RETURN
        601                           END

 Diagnostic messages: program name(SETOS2)
   jwd8220o-i  "setos2.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "setos2.f", line 49: この名前'WBUF'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos2.f", line 49: この名前'VBUF'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos2.f", line 49: この名前'UBUF'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos2.f", line 50: この名前'WR3'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos2.f", line 50: この名前'VR3'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos2.f", line 50: この名前'UR3'は、宣言だけされていて引用されていません。
   jwd5001p-i  "setos2.f", line 110: このDOループを並列化しました。(名前:IBP)
   jwd6229s-i  "setos2.f", line 110: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "setos2.f", line 110: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "setos2.f", line 132: 多項式の演算順序を変更しました。
   jwd6229s-i  "setos2.f", line 150: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "setos2.f", line 150: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "setos2.f", line 169: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 169: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:XBUF0)
   jwd6202s-i  "setos2.f", line 169: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:XBUF0)
   jwd8209o-i  "setos2.f", line 171: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 171: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:YBUF0)
   jwd6202s-i  "setos2.f", line 171: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:YBUF0)
   jwd8209o-i  "setos2.f", line 173: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 173: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:ZBUF0)
   jwd6202s-i  "setos2.f", line 173: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ZBUF0)
   jwd8206o-i  "setos2.f", line 176: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 176: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 178: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 178: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 180: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 180: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 183: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 183: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 185: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 185: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 187: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 187: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 190: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 191: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 192: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 207: 多項式の演算順序を変更しました。
   jwd5001p-i  "setos2.f", line 236: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "setos2.f", line 236: このDOループをSIMD化しました。(名前:I)
   jwd8663o-i  "setos2.f", line 236: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos2.f", line 236: ループを展開数2回でアンローリングしました。
   jwd5131p-i  "setos2.f", line 242: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "setos2.f", line 253: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "setos2.f", line 255: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "setos2.f", line 255: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "setos2.f", line 255: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd6229s-i  "setos2.f", line 275: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "setos2.f", line 275: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "setos2.f", line 305: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 319: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 344: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 349: 多項式の演算順序を変更しました。
   jwd5208p-i  "setos2.f", line 363: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NBDOMS)
   jwd6208s-i  "setos2.f", line 363: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループはSIMD化できません。(名前:NBDOMS)
   jwd5228p-i  "setos2.f", line 364: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。
   jwd6229s-i  "setos2.f", line 374: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "setos2.f", line 374: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "setos2.f", line 387: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 387: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:XBUF0)
   jwd6202s-i  "setos2.f", line 387: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:XBUF0)
   jwd8209o-i  "setos2.f", line 389: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 389: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:YBUF0)
   jwd6202s-i  "setos2.f", line 389: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:YBUF0)
   jwd8209o-i  "setos2.f", line 391: 多項式の演算順序を変更しました。
   jwd5202p-i  "setos2.f", line 391: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:ZBUF0)
   jwd6202s-i  "setos2.f", line 391: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ZBUF0)
   jwd8206o-i  "setos2.f", line 394: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 394: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 396: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 396: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 398: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 398: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 401: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 401: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 403: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 403: 多項式の演算順序を変更しました。
   jwd8206o-i  "setos2.f", line 405: 除算を逆数の乗算に変更しました。
   jwd8209o-i  "setos2.f", line 405: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 408: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 409: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 410: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 438: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 452: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 477: 多項式の演算順序を変更しました。
   jwd8209o-i  "setos2.f", line 482: 多項式の演算順序を変更しました。
   jwd5208p-i  "setos2.f", line 496: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループは並列化できません。(名前:NBDOMS)
   jwd6208s-i  "setos2.f", line 496: 定義引用の順序が分からないため、定義引用順序が逐次実行と異なる可能性があり、このDOループはSIMD化できません。(名前:NBDOMS)
   jwd5228p-i  "setos2.f", line 497: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。
   jwd5131p-i  "setos2.f", line 519: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "setos2.f", line 529: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "setos2.f", line 531: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "setos2.f", line 531: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "setos2.f", line 531: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5001p-i  "setos2.f", line 561: このDOループを並列化しました。(名前:I)
   jwd6001s-i  "setos2.f", line 561: このDOループをSIMD化しました。(名前:I)
   jwd8663o-i  "setos2.f", line 561: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos2.f", line 561: ループを展開数4回でアンローリングしました。
   jwd8204o-i  "setos2.f", line 569: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "setos2.f", line 569: ループの繰返し数が12回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5202p-i  "setos2.f", line 570: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:LISTR)
   jwd6202s-i  "setos2.f", line 570: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:LISTR)

 Procedure information
   Lines      : 601
   Statements : 388
   Stack(byte): 2512
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 601
   Total statements : 388
   Total stack(byte): 2512
   Total prefetch num: 0

