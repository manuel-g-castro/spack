
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:36 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : slvvof.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SLVVOF"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : SLVVOF                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY H.YOSHIMURA         C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE SLVVOF(ITIME,IVOF,NSCYC,
         16                          *                  NE,NP,NFACE,NFACE1,NFACE2,NFACE3,
         17                          *                  N2,NEX,NSP,NS,MELM,NODE,CM,
         18                          *                  LOCAL,LFACE,LEFACE,
         19                          *                  MEP,MP,NEP,IENP,
         20                          *                  U,V,W,DELTA,AVEC,DVEC,DT,
         21                          *                  NPWALL,NPINLT,LPWALL,LPINLT,
         22                          *                  NFWALL,NFINLT,NFFREE,NFSYMT,
         23                          *                  LFWALL,LFINLT,LFFREE,LFSYMT,FINLT,
         24                          *                  IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
         25                          *                  NDOMF,MBFDOM,LDOMF,NBFDOM,IFSLF,IFSND,
         26                          *                  EPS,EPSRE,NMAX,
         27                          *                  FE,FFA,FVOL,FMIN,FMAX,CMAX,FLXIN,FLXOUT,
         28                          *                  NPC,NERR,RES,
         29                          *                  NITR,NEFLD2,NPFLD2,LEFLD2,LPFLD2,
         30                          *                  MWRK,LEKIND,LWRK01,LWRK02,LWRK03,LWRK04,
         31                          *                  AD,A,FXYZ,RHS,CD,FEO,
         32                          *                  WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,WRK07,
         33                          *                  BUFSND,BUFRCV,
         34                          *                  FLUX,BETAF,EFLX,
         35                          *                  FEWRKO,FEWRK,DLWRK,
         36                          *                  FBWRK1,FBWRK2,FBWRK3,FBWRK4,
         37                          *                  EAP1,
         38                          *                  IUT6,IUT0,IERR)
         39                     C
         40                           IMPLICIT NONE
         41                     C
         42                     C     [INPUT]
         43                           INTEGER*4 ITIME,IVOF,NSCYC,
         44                          *          NE,NP,NFACE,NFACE1,NFACE2,NFACE3,
         45                          *          N2,NEX(12),NSP,NS,MELM
         46                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4),LFACE(5,NFACE),LEFACE(6,NE)
         47                           INTEGER*4 MEP,MP,NEP(NP),IENP(MEP,NP)
         48                           REAL*4    CM(NP),U(NP),V(NP),W(NP),DELTA(NE)
         49                           REAL*4    AVEC(4,NFACE),DVEC(3,NFACE),DT
         50                           INTEGER*4 NPWALL,NPINLT,LPWALL(NPWALL),LPINLT(NPINLT)
         51                           INTEGER*4 NFWALL,NFINLT,NFFREE,NFSYMT
         52                           INTEGER*4 LFWALL(NFWALL),LFINLT(NFINLT),LFFREE(NFFREE),
         53                          *          LFSYMT(NFSYMT)
         54                           REAL*4    FINLT(NFINLT)
         55                           INTEGER*4 IPART,
         56                          *          NDOM,MBPDOM,LDOM(NDOM),NBPDOM(NDOM),
         57                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM),
         58                          *          NDOMF,MBFDOM,LDOMF(NDOMF),NBFDOM(NDOMF),
         59                          *          IFSLF(MBFDOM,NDOMF),IFSND(MBFDOM,NDOMF)
         60                           REAL*4    EPS,EPSRE
         61                           INTEGER*4 NMAX
         62                     C     [IN-OUTPUT]
         63                           REAL*4    FE(NE),FFA(NFACE),FVOL,FMIN,FMAX,CMAX,FLXIN,FLXOUT,RES
         64                           INTEGER*4 NITR,NEFLD2,NPFLD2,LEFLD2(NE),LPFLD2(NP),
         65                          *          IUT6,IUT0,IERR
         66                           REAL*4    EAP1(N2,MEP,NP)
         67                     C
         68                     C     [WORK]
         69                           INTEGER*4 MWRK,LEKIND(NE),LWRK01,LWRK02,LWRK03,LWRK04
         70                           REAL*4    AD(NE),A(6,NE),FXYZ(3,NE),RHS(NE),CD(NE),FEO(NE)
         71                           REAL*4    WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,WRK07,BUFSND,BUFRCV
         72                           REAL*4    FLUX(NFACE),BETAF(NFACE),EFLX(NFACE)
         73                           REAL*4    FEWRKO(NFACE3),FEWRK (NFACE3),DLWRK (NFACE3),
         74                          *          FBWRK1(NFACE3),FBWRK2(NFACE3),FBWRK3(NFACE3),
         75                          *          FBWRK4(NFACE3)
         76                     C
         77                     C     [LOCAL]
         78                           INTEGER*4 ISCYC
         79                           INTEGER*4 IE,IE1,IE2,IEE,IED,IEA,IFACE,IFACE3,IS,IS1,IS2,IBF
         80                           INTEGER*4 IEKIND1,IEKIND2,MAXBUF,IDIM,NERR,NPC,NPCMAX,NVAL,
         81                          *          IERRA,I,IP,IBP,ND
         82                           REAL*4 RK,DTS,TIMES,AX,AY,AZ,DA
         83                           REAL*4 VAL1,VAL2,VAL3,DVX,DVY,DVZ,CDD,FXYZD1,FXYZD2,FXYZD3
         84                           REAL*4 FED,FEA,FEU,RR,AA,BB,CC,THETA,BFLXD,BFLXA
         85                           REAL*4 FEDN,FFAN,FFCBCN,FFUQN,GAMMAF,
         86                          *       FEDO,FEAO,DELTAD,CF,BFC,DELF,ERF,DEPS
         87                           REAL*4 UOLD,VOLD,WOLD
         88                           DATA RK     /1.0E0 /
         89                           DATA NPCMAX /2     /
         90                     C      DATA NPCMAX /10     /
         91                           DATA DEPS   /1.0E-6/
         92                     C
         93                           CHARACTER*60 ERMSGC
         94                          * /' ## SUBROUTINE SLVVOF: ERROR OCCURED             ; RETURNED' /
         95                     C
         96                     C
         97                           MAXBUF=5*NFACE
         98                           DTS=DT/FLOAT(NSCYC)
         99                           TIMES=0.0E0
        100                           ISCYC=1
        101                     C
        102                           IF (ITIME.EQ.0) GOTO 6000
        103                     C
        104                     CC
        105                     CCHY  [1] EXTRACT SURFACE ANT ITS NEIGHBOR ELEMENT
        106                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEKIND
                              <<< Loop-information  End >>>
        107     1  pp   4v            DO IE=1,NE
        108     1   p   4v               LEKIND(IE)=1
        109     1   p   4v            ENDDO
        110                     C
        111                     CC
        112                     CCHY  [2] CALCULATE VELOCITY AT FACE
        113                     CC
        114                           CALL CALFLX(NE,NP,NFACE,NSP,NS,NODE,LOCAL,LFACE,
        115                          *            U,V,W,AVEC,FLUX,IUT6,IERR)
        116                     C
        117                     CC-------------------------------------------------------------------------------
        118                     CC    SUBCYCL LOOP --- START
        119                     CC-------------------------------------------------------------------------------
        120                      9000 CONTINUE
        121                           IF (ISCYC.EQ.NSCYC) DTS=DT-TIMES
        122                           TIMES=TIMES+DTS
        123                     C
        124                     CC
        125                     CCHY  [3] CALCULATE GRADIENT OF VOLUME FUNCTION AND COURANT NUMBER IN EACH ELEMENT
        126                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 889
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 96, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      CD, FXYZ
                              <<< Loop-information  End >>>
        127     1  pp   2v            DO 1000 IE=1,NE
        128     1   p   2v               FXYZ(1,IE)=0.0E0
        129     1   p   2v               FXYZ(2,IE)=0.0E0
        130     1   p   2v               FXYZ(3,IE)=0.0E0
        131     1   p   2v               CD(IE)=0.0E0
        132     1   p   2v       1000 CONTINUE
        133                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AVEC, LFACE, FFA, FLUX
                              <<< Loop-information  End >>>
        134     1   s    s            DO 1100 IFACE=1,NFACE
        135     1               C
        136     1   p    v               IE1=LFACE(1,IFACE)
        137     1   p    v               IE2=LFACE(2,IFACE)
        138     1               C
        139     1   p    v               AX = AVEC(1,IFACE)
        140     1   p    v               AY = AVEC(2,IFACE)
        141     1   p    v               AZ = AVEC(3,IFACE)
        142     1   p    v               DA = AVEC(4,IFACE)
        143     1   p    v               VAL1=FFA(IFACE)*AX*DA
        144     1   p    v               VAL2=FFA(IFACE)*AY*DA
        145     1   p    v               VAL3=FFA(IFACE)*AZ*DA
        146     1               C
        147     1   m    m               FXYZ(1,IE1)=FXYZ(1,IE1)+VAL1 / DELTA(IE1)
        148     1   m    m               FXYZ(2,IE1)=FXYZ(2,IE1)+VAL2 / DELTA(IE1)
        149     1   m    m               FXYZ(3,IE1)=FXYZ(3,IE1)+VAL3 / DELTA(IE1)
        150     1   m    m               CD(IE1)=CD(IE1)+AMAX1( FLUX(IFACE)*DTS/DELTA(IE1),0.0E0)
        151     1               C
        152     1   p    v               IF (IE2.LE.0) GOTO 1100
        153     1               C
        154     1   m    m               FXYZ(1,IE2)=FXYZ(1,IE2)-VAL1 / DELTA(IE2)
        155     1   m    m               FXYZ(2,IE2)=FXYZ(2,IE2)-VAL2 / DELTA(IE2)
        156     1   m    m               FXYZ(3,IE2)=FXYZ(3,IE2)-VAL3 / DELTA(IE2)
        157     1   m    m               CD(IE2)=CD(IE2)+AMAX1(-FLUX(IFACE)*DTS/DELTA(IE2),0.0E0)
        158     1               C
        159     1   p    v       1100 CONTINUE
        160                     C
        161                           CMAX=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 728
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
        162     1  pp    v            DO 1150 IE=1,NE
        163     1   p    v               CMAX=AMAX1(CD(IE),CMAX)
        164     1   p    v       1150 CONTINUE
        165                     C
        166                     CC
        167                     CCHY  [4] COMMUNICATE FXYZ, CD AND FE
        168                     CC
        169     1                     IF (IPART.NE.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 314
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.84, ITR: 112, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      DLWRK, FEWRK, LFACE, FBWRK4, FBWRK3
                              <<<      FBWRK2, FBWRK1
                              <<< Loop-information  End >>>
        170     2  pp    v            DO 1200 IFACE3=1,NFACE3
        171     2   p    v               IFACE=NFACE1+NFACE2+IFACE3
        172     2   p    v               IE=LFACE(1,IFACE)
        173     2   p    v               FBWRK1(IFACE3)=FXYZ(1,IE)
        174     2   p    v               FBWRK2(IFACE3)=FXYZ(2,IE)
        175     2   p    v               FBWRK3(IFACE3)=FXYZ(3,IE)
        176     2   p    v               FBWRK4(IFACE3)=CD(IE)
        177     2   p    v               FEWRK(IFACE3)=FE(IE)
        178     2   p    v               DLWRK(IFACE3)=DELTA(IE)
        179     2   p    v       1200 CONTINUE
        180     1               C
        181     1                     IDIM=3
        182     1                     CALL DDFAC1(IDIM,MBFDOM,NDOMF,LDOMF,NBFDOM,IFSLF,IFSND,NFACE3,
        183     1                    *            FBWRK1,FBWRK2,FBWRK3,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
        184     1                     CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        185     1                     IF(IERRA.NE.0) GOTO 9999
        186     1               C
        187     1                     CALL DDFAC1(IDIM,MBFDOM,NDOMF,LDOMF,NBFDOM,IFSLF,IFSND,NFACE3,
        188     1                    *            FBWRK4,FEWRK,DLWRK,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
        189     1                     CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        190     1                     IF(IERRA.NE.0) GOTO 9999
        191     1                     ENDIF
        192                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE, FEO
                              <<< Loop-information  End >>>
        193     1  pp   4v            DO 1300 IE=1,NE
        194     1   p   4v               FEO(IE)=FE(IE)
        195     1   p   4v       1300 CONTINUE
        196                     C
        197     1                     IF (IPART.NE.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FEWRK, FEWRKO
                              <<< Loop-information  End >>>
        198     2  pp   4v            DO 1400 IFACE3=1,NFACE3
        199     2   p   4v               FEWRKO(IFACE3)=FEWRK(IFACE3)
        200     2   p   4v       1400 CONTINUE
        201     1                     ENDIF
        202                     C
        203                     CC
        204                     CCHY  [5] CALCULATE FLUX OF VOLUME FUNCTION AT FACE
        205                     CC
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      BETAF, FLUX
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 5  FILL 28
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        206     1   s    s            DO 2000 IFACE=1,NFACE
        207     1               C
        208     1   p    v               BETAF(IFACE)=0.0E0
        209     1   p    v               IF (FLUX(IFACE).EQ.0.0E0) GOTO 2000
        210     1               C
        211     1   p    v               IE1=LFACE(1,IFACE)
        212     1   p    v               IE2=LFACE(2,IFACE)
        213     1               C
        214     1   p    v               IF (IE2.EQ.0) GOTO 2000 ! BOUNDARY FACE
        215     1               C
        216     2   p    v               IF (FLUX(IFACE).GT.0.0E0) THEN
        217     2               C        IE1:DONOR IE2:ACCEPTOR
        218     2   p    v                  FED=FE(IE1)
        219     2   p    v                  FXYZD1=FXYZ(1,IE1)
        220     2   p    v                  FXYZD2=FXYZ(2,IE1)
        221     2   p    v                  FXYZD3=FXYZ(3,IE1)
        222     2   p    v                  CDD=CD(IE1)
        223     3   p    v                  IF (IE2.LT.0) THEN
        224     3   p    v                     IFACE3=IFACE-NFACE1-NFACE2
        225     3   p    v                     FEA=FEWRK(IFACE3)
        226     3   p    v                  ELSE
        227     3   p    v                     FEA=FE(IE2)
        228     3   p    v                  ENDIF
        229     2   p    v                  DVX= DVEC(1,IFACE)
        230     2   p    v                  DVY= DVEC(2,IFACE)
        231     2   p    v                  DVZ= DVEC(3,IFACE)
        232     2   p    v               ELSE
        233     2               C        IE1:ACCEPTOR IE2:DONOR
        234     3   p    v                  IF (IE2.LT.0) THEN
        235     3   p    v                     IFACE3=IFACE-NFACE1-NFACE2
        236     3   p    v                     FED=FEWRK(IFACE3)
        237     3   p    v                     FXYZD1=FBWRK1(IFACE3)
        238     3   p    v                     FXYZD2=FBWRK2(IFACE3)
        239     3   p    v                     FXYZD3=FBWRK3(IFACE3)
        240     3   p    v                     CDD=FBWRK4(IFACE3)
        241     3   p    v                  ELSE
        242     3   p    v                     FED=FE(IE2)
        243     3   p    v                     FXYZD1=FXYZ(1,IE2)
        244     3   p    v                     FXYZD2=FXYZ(2,IE2)
        245     3   p    v                     FXYZD3=FXYZ(3,IE2)
        246     3   p    v                     CDD=CD(IE2)
        247     3   p    v                  ENDIF
        248     2   p    v                  FEA=FE(IE1)
        249     2   p    v                  DVX=-DVEC(1,IFACE)
        250     2   p    v                  DVY=-DVEC(2,IFACE)
        251     2   p    v                  DVZ=-DVEC(3,IFACE)
        252     2   p    v               ENDIF
        253     1               C
        254     1   p    v               RR=FXYZD1*DVX+FXYZD2*DVY+FXYZD3*DVZ
        255     1   p    v               FEU=AMIN1( AMAX1( FEA-2.0E0*RR, 0.0E0 ), 1.0E0 )
        256     1               C
        257     1   p    v               IF (ABS(FEA-FEU).LE.DEPS) GOTO 2000
        258     1   p    v               IF (ABS(RR)     .LE.DEPS) GOTO 2000
        259     1               C
        260     1               C     NORMALIZE F OF DONOR ELEMENT
        261     1   p    v               FEDN=(FED-FEU)/(FEA-FEU)
        262     1   p    v               IF (ABS(FEDN).LE.DEPS) FEDN=0.0E0
        263     1               C
        264     1   p    v               IF (ABS(1.0E0-FEDN).LE.DEPS) GOTO 2000
        265     1               C
        266     1               C     CBC SCHEME
        267     2   p    v               IF (FEDN.GE.0.0E0.AND.FEDN.LE.1.0E0) THEN
        268     2   s    s                  FFCBCN=FEDN/CDD
        269     2   m    m                  FFCBCN=AMIN1(FFCBCN,1.0E0)
        270     2   p    v               ELSE IF (FEDN.LT.0.0E0.OR.FEDN.GT.1.0E0) THEN
        271     2   m    m                  FFCBCN=FEDN
        272     2   p    v               ENDIF
        273     1               C
        274     1               C     UQ SCHEME
        275     2   p    v               IF (FEDN.GE.0.0E0.AND.FEDN.LE.1.0E0) THEN
        276     2   m    m                  FFUQN=(8.0E0*CDD*FEDN
        277     2                    *          +(1.0E0-CDD)*(6.0E0*FEDN+3.0E0))/8.0E0
        278     2   m    m                  FFUQN=AMIN1(FFUQN,FFCBCN)
        279     2   p    v               ELSE IF (FEDN.LT.0.0E0.OR.FEDN.GT.1.0E0) THEN
        280     2   m    m                  FFUQN=FEDN
        281     2   p    v               ENDIF
        282     1               C
        283     1               C     CALCLATE WIGHTING FACTOR
        284     1   p    v               AA=SQRT(FXYZD1*FXYZD1
        285     1                    *          +FXYZD2*FXYZD2
        286     1                    *          +FXYZD3*FXYZD3)
        287     1   p    v               BB=SQRT(DVX*DVX+DVY*DVY+DVZ*DVZ)
        288     1   p    v               THETA=ACOS( ABS(RR/(AA*BB)) )
        289     1   p    v               CC=RK*( COS(2.0E0*THETA)+1.0E0 )/2.0E0
        290     1   p    v               GAMMAF=AMIN1(CC,1.0E0)
        291     1               C
        292     1   s    s               FFAN=GAMMAF*FFCBCN+(1.0E0-GAMMAF)*FFUQN
        293     1               C
        294     1   m    m               BETAF(IFACE)=(FFAN-FEDN)/(1.0E0-FEDN)
        295     1   p    v       2000 CONTINUE
        296                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      EFLX
                              <<< Loop-information  End >>>
        297     1  pp   4v            DO 2100 IFACE=1,NFACE
        298     1   p   4v               EFLX(IFACE)=0.0E0
        299     1   p   4v       2100 CONTINUE
        300                     C
        301                     CC
        302                     CC
        303                     CC
        304                           NPC=0
        305                     CC-------------------------------------------------------------------------------
        306                     CC    PREDICTOR-CORRECTOR LOOP --- START
        307                     CC-------------------------------------------------------------------------------
        308                      2500 CONTINUE
        309                           NPC=NPC+1
        310                     C
        311                     CC
        312                     CCHY  [6] CALCULATE R.H.S
        313                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE, RHS
                              <<< Loop-information  End >>>
        314     1  pp   4v            DO 3000 IE=1,NE
        315     1   p   4v               RHS(IE)=FE(IE)
        316     1   p   4v       3000 CONTINUE
        317                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FLUX
                              <<< Loop-information  End >>>
        318     1   s    s            DO 3100 IFACE=1,NFACE
        319     1               C
        320     1   p    v               IF (FLUX(IFACE).EQ.0.0E0) GOTO 3100
        321     1               C
        322     1   p    v               IE1=LFACE(1,IFACE)
        323     1   p    v               IE2=LFACE(2,IFACE)
        324     1               C
        325     1   p    v               IF (IE2.EQ.0) GOTO 3100
        326     1               C
        327     2   p    v               IF (FLUX(IFACE).GT.0.0E0) THEN
        328     2               C        IE1:DONOR IE2:ACCEPTOR
        329     2   p    v                  FED=FE(IE1)
        330     3   p    v                  IF (IE2.LT.0) THEN
        331     3   p    v                     IFACE3=IFACE-NFACE1-NFACE2
        332     3   p    v                     FEA=FEWRK(IFACE3)
        333     3   p    v                  ELSE
        334     3   p    v                     FEA=FE(IE2)
        335     3   p    v                  ENDIF
        336     2   p    v               ELSE
        337     2               C        IE1:ACCEPTOR IE2:DONOR
        338     3   p    v                  IF (IE2.LT.0) THEN
        339     3   p    v                     IFACE3=IFACE-NFACE1-NFACE2
        340     3   p    v                     FED=FEWRK(IFACE3)
        341     3   p    v                  ELSE
        342     3   p    v                     FED=FE(IE2)
        343     3   p    v                  ENDIF
        344     2   p    v                  FEA=FE(IE1)
        345     2   p    v               ENDIF
        346     1               C
        347     1   p    v               BFLXD=FLUX(IFACE)*(1.0E0-BETAF(IFACE))/2.0E0
        348     1   p    v               BFLXA=FLUX(IFACE)*(      BETAF(IFACE))/2.0E0
        349     1               C
        350     2   p    v               IF (LEKIND(IE1).NE.0) THEN
        351     2   m    m                  RHS(IE1)=RHS(IE1)
        352     2                    *              -DTS/DELTA(IE1)*(BFLXD*FED+BFLXA*FEA+EFLX(IFACE))
        353     2   p    v               ENDIF
        354     1               C
        355     1   p    v               IF (IE2.LT.0) GOTO 3100
        356     2   p    v               IF (LEKIND(IE2).NE.0) THEN
        357     2   m    m                  RHS(IE2)=RHS(IE2)
        358     2                    *              +DTS/DELTA(IE2)*(BFLXD*FED+BFLXA*FEA+EFLX(IFACE))
        359     2   p    v               ENDIF
        360     1               C
        361     1   p    v       3100 CONTINUE
        362                     C
        363                     CC
        364                     CCHY  [7] CALCULATE COEFFICIENT MATRIX A
        365                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1600
                              <<<  [OPTIMIZATION]
                              <<<    COLLAPSED
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      AD, A
                              <<< Loop-information  End >>>
        366     1  pp   4v            DO 3200 IE=1,NE
        367     1   p   4v               AD(IE)=1.0E0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    COLLAPSED
                              <<< Loop-information  End >>>
        368     2   p   4                DO 3300 IS=1,6
        369     2   p   4v                  A(IS,IE)=0.0E0
        370     2   p   4v       3300    CONTINUE
        371     1   p            3200 CONTINUE
        372                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FLUX
                              <<< Loop-information  End >>>
        373     1   s    s            DO 3400 IFACE=1,NFACE
        374     1               C
        375     1   p    v               IF (FLUX(IFACE).EQ.0.0E0) GOTO 3400
        376     1               C
        377     1   p    v               IE1=LFACE(1,IFACE)
        378     1   p    v               IE2=LFACE(2,IFACE)
        379     1   p    v               IS1=LFACE(3,IFACE)
        380     1   p    v               IS2=LFACE(4,IFACE)
        381     1               C
        382     1   p    v               IF (IE2.EQ.0) GOTO 3400
        383     1               C
        384     1   p    v               BFLXD=FLUX(IFACE)*(1.0E0-BETAF(IFACE))/2.0E0
        385     1   p    v               BFLXA=FLUX(IFACE)*(      BETAF(IFACE))/2.0E0
        386     1               C
        387     2   p    v               IF (FLUX(IFACE).GT.0.0E0) THEN
        388     2               C        IE1:DONOR IE2:ACCEPTOR
        389     3   p    v                  IF (LEKIND(IE1).NE.0) THEN
        390     3   m    m                     AD(    IE1)=AD(    IE1)+DTS/DELTA(IE1)*BFLXD
        391     3   m    m                     A (IS1,IE1)= A(IS1,IE1)+DTS/DELTA(IE1)*BFLXA
        392     3   p    v                  ENDIF
        393     3   p    v                  IF (IE2.GT.0) THEN
        394     4   p    v                     IF (LEKIND(IE2).NE.0) THEN
        395     4   m    m                        AD(    IE2)=AD(    IE2)-DTS/DELTA(IE2)*BFLXA
        396     4   m    m                        A (IS2,IE2)= A(IS2,IE2)-DTS/DELTA(IE2)*BFLXD
        397     4   p    v                     ENDIF
        398     3   p    v                  ENDIF
        399     2   p    v               ELSE
        400     2               C        IE1:DONOR IE2:ACCEPTOR
        401     3   p    v                  IF (LEKIND(IE1).NE.0) THEN
        402     3   m    m                     AD(    IE1)=AD(    IE1)+DTS/DELTA(IE1)*BFLXA
        403     3   m    m                     A (IS1,IE1)=A (IS1,IE1)+DTS/DELTA(IE1)*BFLXD
        404     3   p    v                  ENDIF
        405     3   p    v                  IF (IE2.GT.0) THEN
        406     4   p    v                     IF (LEKIND(IE2).NE.0) THEN
        407     4   m    m                        AD(    IE2)=AD(    IE2)-DTS/DELTA(IE2)*BFLXD
        408     4   m    m                        A (IS2,IE2)=A (IS2,IE2)-DTS/DELTA(IE2)*BFLXA
        409     4   p    v                     ENDIF
        410     3   p    v                  ENDIF
        411     2   p    v               ENDIF
        412     1   p    v       3400 CONTINUE
        413                     C
        414                     CC
        415                     CCHY  [8] SET BOUNDARY CONDITION
        416                     CC
        417                     C     INLET BOUNDARY
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 0.95, ITR: 5, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFINLT, FINLT
                              <<< Loop-information  End >>>
        418     1   s    s            DO 3120 IBF=1,NFINLT
        419     1   p    v               IFACE=LFINLT(IBF)
        420     1   p    v               IE=LFACE(1,IFACE)
        421     1   m    m               RHS(IE)=RHS(IE)-DTS/DELTA(IE)*FLUX(IFACE)*FINLT(IBF)
        422     1   p    v       3120 CONTINUE
        423                     C
        424                     C     FREE BOUNDARY
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFFREE
                              <<< Loop-information  End >>>
        425     1   s    s            DO 3140 IBF=1,NFFREE
        426     1   p    v               IFACE=LFFREE(IBF)
        427     1   p    v               IE=LFACE(1,IFACE)
        428     2   p    v               IF (FLUX(IFACE).GT.0.0E0) THEN
        429     2   m    m                  RHS(IE)=RHS(IE)-FE(IE)*DTS/DELTA(IE)*FLUX(IFACE)/2.0E0
        430     2   m    m                  AD(IE)=AD(IE)+DTS/DELTA(IE)*FLUX(IFACE)/2.0E0
        431     2   p    v               ENDIF
        432     1   p    v       3140 CONTINUE
        433                     C
        434                     CC
        435                     CCHY  [9] DIAGONAL SCALING
        436                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 77
                              <<<  [OPTIMIZATION]
                              <<<    SOFTWARE PIPELINING(IPC: 3.00, ITR: 126, MVE: 11)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      A, AD, RHS
                              <<< Loop-information  End >>>
        437     1  pp                 DO 3500 IE=1,NE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        438     2   p    v               DO 3600 IS=1,6
        439     2   p    v                  A(IS,IE)=A(IS,IE)/AD(IE)
        440     2   p    v       3600    CONTINUE
        441     1   p                    RHS(IE)=RHS(IE)/AD(IE)
        442     1   p                    AD(IE)=1.0E0
        443     1   p            3500 CONTINUE
        444                     C
        445                           CALL BCGSVE(NE,NFACE,NFACE1,NFACE2,NFACE3,LEFACE,LFACE,
        446                          *            A,AD,RHS,EPS,EPSRE,NMAX,NITR,FE,RES,
        447                          *            IPART,MBFDOM,NDOMF,LDOMF,NBFDOM,IFSLF,IFSND,
        448                          *            FEWRK,BUFSND,BUFRCV,WRK01,WRK02,WRK03,WRK04,WRK05,
        449                          *            WRK06,IUT6,IUT0,IERR)
        450                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 348
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 0.88, ITR: 48, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FE
                              <<< Loop-information  End >>>
        451     1  pp    v            DO 3700 IE=1,NE
        452     2   p    v               IF (FE(IE).LT.0.0E0) THEN
        453     2   p    v                  ERF=AMAX1(-FE(IE),0.0E0)
        454     3   p    v                  IF (ERF.LE.DEPS) THEN
        455     3   p    v                     FE(IE)=0.0E0
        456     3   p    v                  ENDIF
        457     2   p    v               ELSE IF (FE(IE).GT.1.0E0) THEN
        458     2   p    v                  ERF=AMAX1(FE(IE)-1.0E0,0.0E0)
        459     3   p    v                  IF (ERF.LE.DEPS) THEN
        460     3   p    v                     FE(IE)=1.0E0
        461     3   p    v                  ENDIF
        462     2   p    v               ELSE IF (FE(IE).LE.DEPS) THEN
        463     2   p    v                  FE(IE)=0.0E0
        464     2   p    v               ELSE IF ((1.0E0-FE(IE)).LE.DEPS) THEN
        465     2   p    v                  FE(IE)=1.0E0
        466     2   p    v               ENDIF
        467     1   p    v       3700 CONTINUE
        468                     C
        469                     CC
        470                     CCHY  [10] COMMUNICATE FE
        471                     CC
        472     1                     IF (IPART.NE.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 800
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 352, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFACE, FEWRK
                              <<< Loop-information  End >>>
        473     2  pp   2v            DO 3800 IFACE3=1,NFACE3
        474     2   p   2v               IFACE=NFACE1+NFACE2+IFACE3
        475     2   p   2v               IE=LFACE(1,IFACE)
        476     2   p   2v               FEWRK(IFACE3)=FE(IE)
        477     2   p   2v       3800 CONTINUE
        478     1               C
        479     1                     IDIM=1
        480     1                     CALL DDFAC1(IDIM,MBFDOM,NDOMF,LDOMF,NBFDOM,IFSLF,IFSND,NFACE3,
        481     1                    *            FEWRK,FEWRK,FEWRK,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
        482     1                     CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        483     1                     IF(IERRA.NE.0) GOTO 9999
        484     1                     ENDIF
        485                     C
        486                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        487                     CC
        488                     CC    2. CORRECTOR STEP
        489                     CC
        490                     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        491                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      EFLX
                              <<< Loop-information  End >>>
        492     1  pp   4v            DO 3900 IFACE=1,NFACE
        493     1   p   4v               EFLX (IFACE)=0.0E0
        494     1   p   4v       3900 CONTINUE
        495                     C
        496                           NERR=0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 51
                              <<< Loop-information  End >>>
        497     1  pp    s            DO 4000 IFACE=1,NFACE
        498     1               C
        499     1   p    v               IF (FLUX(IFACE).EQ.0.0E0) GOTO 4000
        500     1               C
        501     1   p    m               IE1=LFACE(1,IFACE)
        502     1   p    s               IE2=LFACE(2,IFACE)
        503     1               C
        504     1   p    m               IF (IE2.EQ.0) GOTO 4000
        505     1               C
        506     2   p    m               IF (FLUX(IFACE).GT.0.0E0) THEN
        507     2               C        IE1:DONOR IE2:ACCEPTOR
        508     2   p    s                  FED =FE (IE1)
        509     2   p    s                  FEDO=FEO(IE1)
        510     2   p    m                  DELTAD=DELTA(IE1)
        511     3   p    m                  IF (IE2.LT.0) THEN
        512     3   p    m                     IFACE3=IFACE-NFACE1-NFACE2
        513     3   p    s                     FEA =FEWRK (IFACE3)
        514     3   p    m                     FEAO=FEWRKO(IFACE3)
        515     3   p                       ELSE
        516     3   p    s                     FEA =FE (IE2)
        517     3   p    s                     FEAO=FEO(IE2)
        518     3   p                       ENDIF
        519     2   p                    ELSE
        520     2               C        IE1:ACCEPTOR IE2:DONOR
        521     3   p    m                  IF (IE2.LT.0) THEN
        522     3   p    s                     IFACE3=IFACE-NFACE1-NFACE2
        523     3   p    s                     FED   =FEWRK (IFACE3)
        524     3   p    m                     FEDO  =FEWRKO(IFACE3)
        525     3   p    m                     DELTAD=DLWRK (IFACE3)
        526     3   p                       ELSE
        527     3   p    s                     FED =FE (IE2)
        528     3   p    s                     FEDO=FEO(IE2)
        529     3   p    m                     DELTAD=DELTA(IE2)
        530     3   p                       ENDIF
        531     2   p    m                  FEA =FE (IE1)
        532     2   p    m                  FEAO=FEO(IE1)
        533     2   p                    ENDIF
        534     1               C
        535     1   p    m               IF (FED.GE.0.0E0.AND.FED.LE.1.0E0) GOTO 4000
        536     1               C
        537     1   p    m               NERR=NERR+1
        538     1   p    m               DELF=0.5E0*(FEAO+FEA)-0.5E0*(FEDO+FED)
        539     1   p    m               CF=ABS(FLUX(IFACE)*DTS/DELTAD)
        540     1   p    m               BFC=0.0E0
        541     1   p    m               ERF=0.0E0
        542     2   p    s               IF (FED.LT.0.0E0) THEN
        543     2   p    s                  ERF=AMAX1(-FED,0.0E0)
        544     3   p    m                  IF (DELF.GT.ERF) THEN
        545     3   p    s                     AA=2.0E0*CF*(DELF+ERF)
        546     4   p    m                     IF (AA.NE.0.0E0) THEN
        547     4   p    s                        CC=ERF*(2.0E0-CF+2.0E0*CF*BETAF(IFACE))/AA
        548     4   p    s                        BFC=AMIN1(CC,BETAF(IFACE))
        549     4   p                          ENDIF
        550     3   p                       ENDIF
        551     2   p    m                  BETAF(IFACE)=BETAF(IFACE)-BFC
        552     2   p    m                  EFLX (IFACE)=FLUX(IFACE)*(-0.5E0+BETAF(IFACE))*ERF
        553     2   p                    ELSE IF (FED.GT.1.0E0) THEN
        554     2   p    m                  ERF=AMAX1(FED-1.0E0,0.0E0)
        555     3   p    m                  IF (DELF.LT.(-ERF)) THEN
        556     3   p    s                     AA=2.0E0*CF*(-DELF+ERF)
        557     4   p    m                     IF (AA.NE.0.0E0) THEN
        558     4   p    s                        CC=ERF*(2.0E0-CF+2.0E0*CF*BETAF(IFACE))/AA
        559     4   p    m                        BFC=AMIN1(CC,BETAF(IFACE))
        560     4   p                          ENDIF
        561     3   p                       ENDIF
        562     2   p    m                  BETAF(IFACE)=BETAF(IFACE)-BFC
        563     2   p    m                  EFLX (IFACE)=FLUX(IFACE)*( 0.5E0-BETAF(IFACE))*ERF
        564     2   p                    ENDIF
        565     1               C
        566     1   p    v       4000 CONTINUE
        567                     C
        568     1                     IF(IPART.GE.1) THEN
        569     1                        VAL1=FLOAT(NERR)
        570     1                        CALL DDCOM2(VAL1,VAL2)
        571     1                        VAL1=VAL2
        572     1                        NERR=NINT(VAL1)
        573     1                     ENDIF
        574                     C
        575     1                     IF (NERR.NE.0.AND.NPC.LT.NPCMAX) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FEO, FE
                              <<< Loop-information  End >>>
        576     2  pp   4v               DO 4100 IE=1,NE
        577     2   p   4v                  FE(IE)=FEO(IE)
        578     2   p   4v       4100    CONTINUE
        579     1               C
        580     2                        IF (IPART.NE.0) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 1455
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.00, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FEWRKO, FEWRK
                              <<< Loop-information  End >>>
        581     3  pp   4v                  DO 4200 IFACE3=1,NFACE3
        582     3   p   4v                     FEWRK(IFACE3)=FEWRKO(IFACE3)
        583     3   p   4v       4200       CONTINUE
        584     2                        ENDIF
        585     1                        GOTO 2500
        586     1                     ELSE IF (NPC.EQ.NPCMAX) THEN
        587     1               C         GOTO 9999
        588     1                     ENDIF
        589                     CC-------------------------------------------------------------------------------
        590                     CC    PREDICTOR-CORRECTOR LOOP --- END
        591                     CC-------------------------------------------------------------------------------
        592                     C
        593                     CC
        594                     CCHY  [11] CALC VOLUME FLACTION AT FACE
        595                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 149
                              <<< Loop-information  End >>>
        596     1  pp    s            DO 5100 IFACE=1,NFACE
        597     1   p    m               IE1=LFACE(1,IFACE)
        598     1   p    v               IE2=LFACE(2,IFACE)
        599     1               C
        600     1   p    v               IF (IE2.EQ.0) GOTO 5100
        601     1               C
        602     2   p    m               IF (FLUX(IFACE).GE.0.0E0) THEN
        603     2               C        IE1:DONOR IE2:ACCEPTOR
        604     2   p    m                  FED=FE(IE1)
        605     3   p    s                  IF (IE2.LT.0) THEN
        606     3   p    s                     IFACE3=IFACE-NFACE1-NFACE2
        607     3   p    m                     FEA=FEWRK(IFACE3)
        608     3   p                       ELSE
        609     3   p    m                     FEA=FE(IE2)
        610     3   p                       ENDIF
        611     2   p                    ELSE
        612     2               C        IE1:ACCEPTOR IE2:DONOR
        613     3   p    m                  IF (IE2.LT.0) THEN
        614     3   p    s                     IFACE3=IFACE-NFACE1-NFACE2
        615     3   p    m                     FED=FEWRK(IFACE3)
        616     3   p                       ELSE
        617     3   p    m                     FED=FE(IE2)
        618     3   p                       ENDIF
        619     2   p    m                  FEA=FE(IE1)
        620     2   p                    ENDIF
        621     1               C
        622     1   p    m               FFA(IFACE)=(1.0E0-BETAF(IFACE))*FED+BETAF(IFACE)*FEA
        623     1   p    v       5100  CONTINUE
        624                     C
        625                            ISCYC=ISCYC+1
        626                            IF (ISCYC.LE.NSCYC) GOTO 9000
        627                     CC-------------------------------------------------------------------------------
        628                     CC    SUBCYCL LOOP --- END
        629                     CC-------------------------------------------------------------------------------
        630                      6000  CONTINUE
        631                     C
        632                     CC
        633                     CCHY  [12] CALC TOTAL VOLUME OF FLUID1
        634                     CC
        635                           FVOL= 0.0E0
        636                           FMIN= 1.0E6
        637                           FMAX=-1.0E6
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 341
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<< Loop-information  End >>>
        638     1  pp    v            DO 6100 IE=1,NE
        639     1   p    v               FMIN=AMIN1(FMIN,FE(IE))
        640     1   p    v               FMAX=AMAX1(FMAX,FE(IE))
        641     1   p    v               FVOL=FVOL+FE(IE)*DELTA(IE)
        642     1   p    v       6100 CONTINUE
        643                     C
        644                     CC
        645                     CCHY  [13] CALC VOLUME FLACTION AT FACE
        646                     CC
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.44, ITR: 416, MVE: 7)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFWALL
                              <<< Loop-information  End >>>
        647     1   s   2v            DO 7100 IBF=1,NFWALL
        648     1   p   2v               IFACE=LFWALL(IBF)
        649     1   p   2v               IE=LFACE(1,IFACE)
        650     1   m   2v               FFA(IFACE)=FE(IE)
        651     1   p   2v       7100 CONTINUE
        652                     C
        653                           FLXIN=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 552
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        654     1   m    v            DO 7200 IBF=1,NFINLT
        655     1   p    v               IFACE=LFINLT(IBF)
        656     1   p    v               IE=LFACE(1,IFACE)
        657     1   m    v               FFA(IFACE)=FINLT(IBF)
        658     1   p    v               FLXIN=FLXIN+FLUX(IFACE)*FFA(IFACE)
        659     1   p    v       7200 CONTINUE
        660                     C
        661                           FLXOUT=0.0E0
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 0.80, ITR: 384, MVE: 2)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFFREE
                              <<< Loop-information  End >>>
        662     1   s   8v            DO 7300 IBF=1,NFFREE
        663     1   p   8v               IFACE=LFFREE(IBF)
        664     1   p   8v               IE=LFACE(1,IFACE)
        665     1   m   8v               FFA(IFACE)=FE(IE)
        666     1   p   8v               FLXOUT=FLXOUT+FLUX(IFACE)*FFA(IFACE)
        667     1   p   8v       7300 CONTINUE
        668                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.44, ITR: 416, MVE: 7)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFSYMT
                              <<< Loop-information  End >>>
        669     1   s   2v            DO 7400 IBF=1,NFSYMT
        670     1   p   2v               IFACE=LFSYMT(IBF)
        671     1   p   2v               IE=LFACE(1,IFACE)
        672     1   m   2v               FFA(IFACE)=FE(IE)
        673     1   p   2v       7400 CONTINUE
        674                     C
        675     1                     IF(IPART.GE.1) THEN
        676     1                         CALL DDCOM2(FVOL,  VAL1)
        677     1                         CALL DDCOM2(FLXIN, VAL2)
        678     1                         CALL DDCOM2(FLXOUT,VAL3)
        679     1                         FVOL  =VAL1
        680     1                         FLXIN =VAL2
        681     1                         FLXOUT=VAL3
        682     1                     ENDIF
        683                     C
        684                     CC
        685                     CCHY  [14] MASK SECOND FLUID ELEMENT
        686                     CC
        687     1                     IF (IVOF.EQ.1) THEN
        688     1                        CALL MSKELM(ITIME,NE,NP,N2,NEX,MELM,NODE,MEP,MP,NEP,IENP,
        689     1                    *               FE,DELTA,NPWALL,NPINLT,LPWALL,LPINLT,
        690     1                    *               IPART,NDOM,MBPDOM,LDOM,NBPDOM,
        691     1                    *               IPSLF,IPSND,BUFSND,BUFRCV,
        692     1                    *               CM,U,V,W,NEFLD2,NPFLD2,LEFLD2,LPFLD2,
        693     1                    *               MWRK,LWRK01,LWRK02,LWRK03,LWRK04,EAP1,
        694     1                    *               WRK01,WRK02,WRK03,WRK04,WRK05,WRK06,WRK07,
        695     1                    *               IUT0,IERR)
        696     1                     ENDIF
        697                     C
        698                           IF (ITIME.NE.0) RETURN
        699                     C
        700                     CC
        701                     CCHY  [15] CALCULATE VOLUME FRACTION AT FACE
        702                     CC
        703     1                     IF (IPART.GE.1) THEN
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 800
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.33, ITR: 352, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFACE, FBWRK1
                              <<< Loop-information  End >>>
        704     2  pp   2v               DO 8000 IFACE3=1,NFACE3
        705     2   p   2v                  IFACE=NFACE1+NFACE2+IFACE3
        706     2   p   2v                  IE=LFACE(1,IFACE)
        707     2   p   2v                  FBWRK1(IFACE3)=FE(IE)
        708     2   p   2v       8000    CONTINUE
        709     1               C
        710     1                        IDIM=1
        711     1                        CALL DDFAC1(IDIM,MBFDOM,NDOMF,LDOMF,NBFDOM,IFSLF,IFSND,NFACE,
        712     1                    *             FBWRK1,FBWRK1,FBWRK1,BUFSND,BUFRCV,MAXBUF,IUT0,IERR)
        713     1                        CALL ERCHK2(IUT6,IPART,1,IERR,IERRA)
        714     1                        IF(IERRA.NE.0) GOTO 9999
        715     1                     ENDIF
        716                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 411
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFACE
                              <<< Loop-information  End >>>
        717     1  pp    s            DO 8100 IFACE=1,NFACE
        718     1   p    v               IE1=LFACE(1,IFACE)
        719     1   p    v               IE2=LFACE(2,IFACE)
        720     1               
        721     1   p    s               IF (IE2.EQ.0) GOTO 8100
        722     1               C
        723     1   p    s               FED=FE(IE1)
        724     2   p    s               IF (IE2.LT.0) THEN
        725     2   p    s                  IFACE3=IFACE-NFACE1-NFACE2
        726     2   p    s                  FEA=FBWRK1(IFACE3)
        727     2   p    s               ELSE
        728     2   p    s                  FEA=FE(IE2)
        729     2   p    s               ENDIF
        730     1               C
        731     1   p    s               FFA(IFACE)=0.5E0*(FED+FEA)
        732     1   p    v       8100 CONTINUE
        733                     C
        734                           RETURN
        735                     C
        736                      9999 CONTINUE
        737                           WRITE(IUT0,*) ERMSGC
        738                           IERR=1
        739                           RETURN
        740                     C
        741                           END

 Diagnostic messages: program name(SLVVOF)
   jwd8220o-i  "slvvof.f", line 15: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "slvvof.f", line 79: この名前'IEA'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 79: この名前'IED'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 79: この名前'IEE'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'ND'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'IBP'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'IP'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'I'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'NVAL'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'IEKIND2'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 80: この名前'IEKIND1'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 87: この名前'WOLD'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 87: この名前'VOLD'は、宣言だけされていて引用されていません。
   jwd2006i-i  "slvvof.f", line 87: この名前'UOLD'は、宣言だけされていて引用されていません。
   jwd5001p-i  "slvvof.f", line 107: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 107: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "slvvof.f", line 107: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "slvvof.f", line 107: ループを展開数4回でアンローリングしました。
   jwd5132p-i  "slvvof.f", line 120: DO WHILE文、DO UNTIL文、およびIF/GO TO文によるループは並列化できません。
   jwd5001p-i  "slvvof.f", line 127: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 127: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 127: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 127: ループの繰返し数が96回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd6229s-i  "slvvof.f", line 134: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "slvvof.f", line 134: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "slvvof.f", line 143: 多項式の演算順序を変更しました。
   jwd8206o-i  "slvvof.f", line 147: 除算を逆数の乗算に変更しました。
   jwd5209p-i  "slvvof.f", line 147: 配列'FXYZ'の添字式中の変数'IE1'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "slvvof.f", line 147: 配列'FXYZ'の添字式中の変数'IE2'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 147: 配列'FXYZ'の添字式中の変数'IE1'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6209s-i  "slvvof.f", line 147: 配列'FXYZ'の添字式中の変数'IE2'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd8206o-i  "slvvof.f", line 148: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "slvvof.f", line 149: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "slvvof.f", line 150: 除算を逆数の乗算に変更しました。
   jwd5209p-i  "slvvof.f", line 150: 配列'CD'の添字式中の変数'IE1'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "slvvof.f", line 150: 配列'CD'の添字式中の変数'IE2'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 150: 配列'CD'の添字式中の変数'IE1'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6209s-i  "slvvof.f", line 150: 配列'CD'の添字式中の変数'IE2'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd5004p-i  "slvvof.f", line 162: リダクション演算を含むDOループを並列化しました。(名前:IE)
   jwd6004s-i  "slvvof.f", line 162: リダクション演算を含むDOループをSIMD化しました。(名前:IE)
   jwd5001p-i  "slvvof.f", line 170: このDOループを並列化しました。(名前:IFACE3)
   jwd6001s-i  "slvvof.f", line 170: このDOループをSIMD化しました。(名前:IFACE3)
   jwd8204o-i  "slvvof.f", line 170: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 170: ループの繰返し数が112回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 193: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 193: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 193: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 193: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 198: このDOループを並列化しました。(名前:IFACE3)
   jwd6001s-i  "slvvof.f", line 198: このDOループをSIMD化しました。(名前:IFACE3)
   jwd8204o-i  "slvvof.f", line 198: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 198: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd6229s-i  "slvvof.f", line 206: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8664o-i  "slvvof.f", line 206: ループ内に関数呼出しなどの最適化対象外の命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "slvvof.f", line 254: 多項式の演算順序を変更しました。
   jwd5202p-i  "slvvof.f", line 268: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:FFCBCN)
   jwd6202s-i  "slvvof.f", line 268: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FFCBCN)
   jwd5202p-i  "slvvof.f", line 276: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:FFUQN)
   jwd6202s-i  "slvvof.f", line 276: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FFUQN)
   jwd8209o-i  "slvvof.f", line 284: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 287: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 294: 多項式の演算順序を変更しました。
   jwd5001p-i  "slvvof.f", line 297: このDOループを並列化しました。(名前:IFACE)
   jwd6001s-i  "slvvof.f", line 297: このDOループをSIMD化しました。(名前:IFACE)
   jwd8663o-i  "slvvof.f", line 297: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "slvvof.f", line 297: ループを展開数4回でアンローリングしました。
   jwd5132p-i  "slvvof.f", line 304: DO WHILE文、DO UNTIL文、およびIF/GO TO文によるループは並列化できません。
   jwd5132p-i  "slvvof.f", line 308: DO WHILE文、DO UNTIL文、およびIF/GO TO文によるループは並列化できません。
   jwd5001p-i  "slvvof.f", line 314: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 314: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 314: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 314: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd6229s-i  "slvvof.f", line 318: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "slvvof.f", line 318: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "slvvof.f", line 347: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 348: 多項式の演算順序を変更しました。
   jwd5209p-i  "slvvof.f", line 351: 配列'RHS'の添字式中の変数'IE1'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "slvvof.f", line 351: 配列'RHS'の添字式中の変数'IE2'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 351: 配列'RHS'の添字式中の変数'IE1'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6209s-i  "slvvof.f", line 351: 配列'RHS'の添字式中の変数'IE2'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd8209o-i  "slvvof.f", line 351: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 357: 多項式の演算順序を変更しました。
   jwd5001p-i  "slvvof.f", line 366: このDOループを並列化しました。(名前:IE)
   jwd8215o-i  "slvvof.f", line 366: 不完全多重ループを分割して、完全多重ループにしました。
   jwd6002s-i  "slvvof.f", line 366: このDOループをSIMD化しました。
   jwd6001s-i  "slvvof.f", line 366: このDOループをSIMD化しました。(名前:IE)
   jwd8663o-i  "slvvof.f", line 366: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "slvvof.f", line 366: ループを展開数4回でアンローリングしました。
   jwd5002p-i  "slvvof.f", line 368: このDOループを並列化しました。
   jwd8330o-i  "slvvof.f", line 369: 多重DOループをDO変数IE,...,ISで1重化しました。
   jwd6229s-i  "slvvof.f", line 373: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "slvvof.f", line 373: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "slvvof.f", line 384: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 385: 多項式の演算順序を変更しました。
   jwd5209p-i  "slvvof.f", line 390: 配列'AD'の添字式中の変数'IE1'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "slvvof.f", line 390: 配列'AD'の添字式中の変数'IE2'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 390: 配列'AD'の添字式中の変数'IE1'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6209s-i  "slvvof.f", line 390: 配列'AD'の添字式中の変数'IE2'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd5209p-i  "slvvof.f", line 391: 配列'A'の添字式中の変数'IE1'をループ中で定義しているため、このDOループは並列化できません。
   jwd5209p-i  "slvvof.f", line 391: 配列'A'の添字式中の変数'IE2'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 391: 配列'A'の添字式中の変数'IE1'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6209s-i  "slvvof.f", line 391: 配列'A'の添字式中の変数'IE2'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd8204o-i  "slvvof.f", line 418: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 418: ループの繰返し数が5回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "slvvof.f", line 421: 多項式の演算順序を変更しました。
   jwd5209p-i  "slvvof.f", line 421: 配列'RHS'の添字式中の変数'IE'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 421: 配列'RHS'の添字式中の変数'IE'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd6229s-i  "slvvof.f", line 425: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "slvvof.f", line 425: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "slvvof.f", line 429: 多項式の演算順序を変更しました。
   jwd5209p-i  "slvvof.f", line 429: 配列'RHS'の添字式中の変数'IE'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 429: 配列'RHS'の添字式中の変数'IE'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd8209o-i  "slvvof.f", line 430: 多項式の演算順序を変更しました。
   jwd5209p-i  "slvvof.f", line 430: 配列'AD'の添字式中の変数'IE'をループ中で定義しているため、このDOループは並列化できません。
   jwd6209s-i  "slvvof.f", line 430: 配列'AD'の添字式中の変数'IE'をループ中で定義しているため、このDOループはSIMD化できません。
   jwd5001p-i  "slvvof.f", line 437: このDOループを並列化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 437: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 437: ループの繰返し数が126回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd6001s-i  "slvvof.f", line 438: このDOループをSIMD化しました。(名前:IS)
   jwd8206o-i  "slvvof.f", line 438: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "slvvof.f", line 439: 除算を逆数の乗算に変更しました。
   jwd8206o-i  "slvvof.f", line 441: 除算を逆数の乗算に変更しました。
   jwd5001p-i  "slvvof.f", line 451: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 451: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 451: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 451: ループの繰返し数が48回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 473: このDOループを並列化しました。(名前:IFACE3)
   jwd6001s-i  "slvvof.f", line 473: このDOループをSIMD化しました。(名前:IFACE3)
   jwd8204o-i  "slvvof.f", line 473: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 473: ループの繰返し数が352回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 492: このDOループを並列化しました。(名前:IFACE)
   jwd6001s-i  "slvvof.f", line 492: このDOループをSIMD化しました。(名前:IFACE)
   jwd8663o-i  "slvvof.f", line 492: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "slvvof.f", line 492: ループを展開数4回でアンローリングしました。
   jwd5004p-i  "slvvof.f", line 497: リダクション演算を含むDOループを並列化しました。(名前:IFACE)
   jwd6229s-i  "slvvof.f", line 497: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd6202s-i  "slvvof.f", line 501: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:IE1)
   jwd6202s-i  "slvvof.f", line 502: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:IE2)
   jwd6202s-i  "slvvof.f", line 508: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FED)
   jwd6202s-i  "slvvof.f", line 509: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FEDO)
   jwd6202s-i  "slvvof.f", line 510: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:DELTAD)
   jwd6202s-i  "slvvof.f", line 513: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FEA)
   jwd6202s-i  "slvvof.f", line 514: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FEAO)
   jwd8209o-i  "slvvof.f", line 538: 多項式の演算順序を変更しました。
   jwd6202s-i  "slvvof.f", line 538: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:DELF)
   jwd6202s-i  "slvvof.f", line 539: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:CF)
   jwd6202s-i  "slvvof.f", line 543: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ERF)
   jwd6228s-i  "slvvof.f", line 545: データの定義引用の順序が逐次実行と異なる可能性があるため、このDOループはSIMD化できません。
   jwd6202s-i  "slvvof.f", line 545: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:AA)
   jwd8209o-i  "slvvof.f", line 547: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 548: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 552: 多項式の演算順序を変更しました。
   jwd6202s-i  "slvvof.f", line 552: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:ERF)
   jwd8209o-i  "slvvof.f", line 556: 多項式の演算順序を変更しました。
   jwd6228s-i  "slvvof.f", line 556: データの定義引用の順序が逐次実行と異なる可能性があるため、このDOループはSIMD化できません。
   jwd8209o-i  "slvvof.f", line 558: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 559: 多項式の演算順序を変更しました。
   jwd8209o-i  "slvvof.f", line 563: 多項式の演算順序を変更しました。
   jwd5001p-i  "slvvof.f", line 576: このDOループを並列化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 576: このDOループをSIMD化しました。(名前:IE)
   jwd8204o-i  "slvvof.f", line 576: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 576: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 581: このDOループを並列化しました。(名前:IFACE3)
   jwd6001s-i  "slvvof.f", line 581: このDOループをSIMD化しました。(名前:IFACE3)
   jwd8204o-i  "slvvof.f", line 581: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 581: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 596: このDOループを並列化しました。(名前:IFACE)
   jwd6229s-i  "slvvof.f", line 596: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd6202s-i  "slvvof.f", line 604: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FED)
   jwd6202s-i  "slvvof.f", line 607: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:FEA)
   jwd5004p-i  "slvvof.f", line 638: リダクション演算を含むDOループを並列化しました。(名前:IE)
   jwd6004s-i  "slvvof.f", line 638: リダクション演算を含むDOループをSIMD化しました。(名前:IE)
   jwd6001s-i  "slvvof.f", line 647: このDOループをSIMD化しました。(名前:IBF)
   jwd8204o-i  "slvvof.f", line 647: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 647: ループの繰返し数が416回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "slvvof.f", line 650: 配列'FFA'の添字式中の変数'IFACE'をループ中で定義しているため、このDOループは並列化できません。
   jwd5005p-i  "slvvof.f", line 654: このDOループを部分的に並列化しました。(名前:IBF)
   jwd5004p-i  "slvvof.f", line 654: リダクション演算を含むDOループを並列化しました。(名前:IBF)
   jwd6004s-i  "slvvof.f", line 654: リダクション演算を含むDOループをSIMD化しました。(名前:IBF)
   jwd5209p-i  "slvvof.f", line 657: 配列'FFA'の添字式中の変数'IFACE'をループ中で定義しているため、このDOループは並列化できません。
   jwd6004s-i  "slvvof.f", line 662: リダクション演算を含むDOループをSIMD化しました。(名前:IBF)
   jwd8204o-i  "slvvof.f", line 662: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 662: ループの繰返し数が384回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8208o-i  "slvvof.f", line 663: ループ内の総和または乗積演算の計算方法を変更しました。
   jwd5209p-i  "slvvof.f", line 665: 配列'FFA'の添字式中の変数'IFACE'をループ中で定義しているため、このDOループは並列化できません。
   jwd6001s-i  "slvvof.f", line 669: このDOループをSIMD化しました。(名前:IBF)
   jwd8204o-i  "slvvof.f", line 669: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 669: ループの繰返し数が416回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "slvvof.f", line 672: 配列'FFA'の添字式中の変数'IFACE'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "slvvof.f", line 704: このDOループを並列化しました。(名前:IFACE3)
   jwd6001s-i  "slvvof.f", line 704: このDOループをSIMD化しました。(名前:IFACE3)
   jwd8204o-i  "slvvof.f", line 704: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "slvvof.f", line 704: ループの繰返し数が352回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "slvvof.f", line 717: このDOループを並列化しました。(名前:IFACE)
   jwd6229s-i  "slvvof.f", line 717: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "slvvof.f", line 717: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。

 Procedure information
   Lines      : 741
   Statements : 483
   Stack(byte): 142544
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 741
   Total statements : 483
   Total stack(byte): 142544
   Total prefetch num: 0

