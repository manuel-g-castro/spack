
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:33 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : mkfac1.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "MKFAC1"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : MKFAC1                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY H.YOSHIMURA         C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE MKFAC1(IPART,NE,NP,N2,NSP,NS,MEP,MFACE,
         16                          *                  NODE,LOCAL,NEP,IENP,X,Y,Z,
         17                          *                  NFACE,LFACE,AVEC,DVEC,
         18                          *                  LEFACE,IUT6,IUT0,IERR)
         19                     C
         20                           IMPLICIT NONE
         21                     C
         22                     C     [INPUT]
         23                           INTEGER*4 IPART,NE,NP,N2,NSP,NS,MEP,MFACE
         24                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4),NEP(NP),IENP(MEP,NP)
         25                           REAL*8    X(NP),Y(NP),Z(NP)
         26                     C
         27                     C     [IN-OUTPUT]
         28                           INTEGER*4 NFACE
         29                           INTEGER*4 LFACE(5,MFACE)
         30                           REAL*4    AVEC(4,MFACE),DVEC(3,MFACE)
         31                           INTEGER*4 LEFACE(6,NE)
         32                           INTEGER*4 IUT6,IUT0,IERR
         33                     
         34                     C
         35                     C     [LOCAL]
         36                           INTEGER*4 MSD
         37                           INTEGER*4,ALLOCATABLE::LWORK(:,:)
         38                           INTEGER*4 IP,IP1,IP2,IP3,IP4,IMATCH
         39                           INTEGER*4 IE,NSD,IETYPE,NLS,IE1,IE2,IS,IS1,IS2,I,I1,I2,J
         40                           INTEGER*4 IB1,IB2,IB3,IB4,IBTYPE,IERRA
         41                     C
         42                           CHARACTER*60 ERMSGC
         43                          * /' ## SUBROUTINE MKFAC1: ERROR OCCURED             ; RETURNED' /
         44                           CHARACTER*60 EREXP1
         45                          * / ' ALLOCATING FAILED                                        ' /
         46                           CHARACTER*60 EREXP2
         47                          * / ' THE NUMBER OF ADJACENT FACE TO NODE IS OVER MBFDOM       ' /
         48                           CHARACTER*60 EREXP3
         49                          * / ' THE NUMBER OF FACE IS OVER MFACE                         ' /
         50                     
         51                     C
         52                     CC
         53                     CCHY [1] COUNT MAXMUM NUMBER OF ADJACENT FACES TO NODE IP
         54                     CC
         55                           MSD=0
         56     1                     DO 1000 IP=1,NP
         57     1                        NSD=0
         58     2                        DO 1100 I=1,NEP(IP)
         59     2                           IE=IENP(I,IP)
         60     3                           IF(     NODE(8,IE).GE.1) THEN ! HEX
         61     3                              IETYPE=4
         62     3                              NLS=6
         63     3                           ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
         64     3                              IETYPE=3
         65     3                              NLS=5
         66     3                           ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
         67     3                              IETYPE=2
         68     3                              NLS=5
         69     3                           ELSE                          ! TET
         70     3                              IETYPE=1
         71     3                              NLS=4
         72     3                           ENDIF
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 150
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    UNSWITCHING
                              <<< Loop-information  End >>>
         73     3  pp    v                  DO 1200 IS=1,NLS
         74     3               C
         75     3   p    v                     IP1=NODE(LOCAL(1,IS,IETYPE),IE)
         76     3   p    v                     IP2=NODE(LOCAL(2,IS,IETYPE),IE)
         77     3   p    v                     IP3=NODE(LOCAL(3,IS,IETYPE),IE)
         78     3               C
         79     4   p    m                     IF((IETYPE.EQ.1            ).OR. ! TRI
         80     4                    *              (IETYPE.EQ.2.AND.IS.LE.4).OR.
         81     4                    *              (IETYPE.EQ.3.AND.IS.LE.2))THEN
         82     4   p    m                        IP4=0
         83     4   p    v                     ELSE                             ! QUAD
         84     4   p    m                        IP4=NODE(LOCAL(4,IS,IETYPE),IE)
         85     4   p    v                     ENDIF
         86     3   p    v                     IF(     IP.NE.IP1 .AND. IP.NE.IP2
         87     3                    *            .AND.IP.NE.IP3 .AND. IP.NE.IP4) GOTO 1200
         88     3               C
         89     3   p    m                     NSD=NSD+1
         90     3   p    v       1200       CONTINUE
         91     2                1100    CONTINUE
         92     1               C
         93     2                        IF (NSD.GT.MSD) THEN
         94     2                           MSD=NSD
         95     2                        ENDIF
         96     1               C
         97     1                1000 CONTINUE
         98                     C
         99                           WRITE(IUT6,*) 'MAXMUM NUMBER OF ADJACENT FACES TO NODE :',MSD
        100                     C
        101                     CC
        102                     CCHY [2] ALLOCATE WORK ARRAYS
        103                     CC
        104                           ALLOCATE(LWORK(6,MSD),STAT=IERR)
        105                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        106     1                     IF(IERRA.NE.0) THEN
        107     1                        WRITE(IUT0,*) EREXP1
        108     1                        GOTO 9999
        109     1                     ENDIF
        110                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 84
                              <<< Loop-information  End >>>
        111     1  pp   4             DO 2000 IE=1,MSD
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<< Loop-information  End >>>
        112     2   p   4v               DO 2100 J=1,6
        113     2   p   4v                  LWORK(J,IE)=0
        114     2   p   4v       2100    CONTINUE
        115     1   p   4        2000 CONTINUE
        116                     C
        117                     CC
        118                     CCHY [3] MAKE FACE LIST FOR INNER REGION
        119                     CC
        120     1                     DO 3000 IP=1,NP
        121     1                        NSD=0
        122     2                        DO 3100 I=1,NEP(IP)
        123     2                           IE=IENP(I,IP)
        124     3                           IF(     NODE(8,IE).GE.1) THEN ! HEX
        125     3                              IETYPE=4
        126     3                              NLS=6
        127     3                           ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
        128     3                              IETYPE=3
        129     3                              NLS=5
        130     3                           ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
        131     3                              IETYPE=2
        132     3                              NLS=5
        133     3                           ELSE                          ! TET
        134     3                              IETYPE=1
        135     3                              NLS=4
        136     3                           ENDIF
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEFACE
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 1
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        137     3                           DO 3200 IS=1,NLS
        138     3                              IF (LEFACE(IS,IE).NE.0) GOTO 3200
        139     3               C
        140     3                              IP1=NODE(LOCAL(1,IS,IETYPE),IE)
        141     3                              IP2=NODE(LOCAL(2,IS,IETYPE),IE)
        142     3                              IP3=NODE(LOCAL(3,IS,IETYPE),IE)
        143     3               C
        144     4                              IF ((IETYPE.EQ.1            ).OR. ! TRI
        145     4                    *             (IETYPE.EQ.2.AND.IS.LE.4).OR.
        146     4                    *             (IETYPE.EQ.3.AND.IS.LE.2)) THEN
        147     4                                 IP4=0
        148     4                              ELSE                             ! QUAD
        149     4                                 IP4=NODE(LOCAL(4,IS,IETYPE),IE)
        150     4                              ENDIF
        151     3                              IF (     IP.NE.IP1 .AND. IP.NE.IP2
        152     3                    *             .AND.IP.NE.IP3 .AND. IP.NE.IP4) GOTO 3200
        153     3               C
        154     3                              NSD=NSD+1
        155     4                              IF (NSD.GT.MSD) THEN
        156     4                                 WRITE(IUT0,*) EREXP2,MSD
        157     4                                 GOTO 9999
        158     4                              ENDIF
        159     3                              LWORK(1,NSD)=IP1
        160     3                              LWORK(2,NSD)=IP2
        161     3                              LWORK(3,NSD)=IP3
        162     3                              LWORK(4,NSD)=IP4
        163     3                              LWORK(5,NSD)=IE
        164     3                              LWORK(6,NSD)=IS
        165     3                3200       CONTINUE
        166     2                3100    CONTINUE
        167     1               C
        168     2                        DO 3300 I1=1,NSD
        169     2                           IE1=LWORK(5,I1)
        170     2                           IS1=LWORK(6,I1)
        171     3                           DO 3400 I2=I1+1,NSD
        172     3                              IE2=LWORK(5,I2)
        173     3                              IS2=LWORK(6,I2)
        174     3                              IF (IE1.EQ.IE2) GOTO 3400
        175     3                              IF (LEFACE(IS2,IE2).NE.0) GOTO 3400
        176     3               C
        177     3                              CALL MATCHX(LWORK(1,I1),LWORK(1,I2),IMATCH)
        178     4                              IF (IMATCH.NE.0) THEN
        179     4                                 NFACE=NFACE+1
        180     5                                 IF (NFACE.GT.MFACE) THEN
        181     5                                    WRITE(IUT0,*) EREXP3,MFACE
        182     5                                    GOTO 9999
        183     5                                 ENDIF
        184     4                                 LEFACE(IS1,IE1)=IE2
        185     4                                 LEFACE(IS2,IE2)=IE1
        186     5                                 IF (IE1.GT.IE2) THEN
        187     5                                    LFACE(1,NFACE)=IE1
        188     5                                    LFACE(2,NFACE)=IE2
        189     5                                    LFACE(3,NFACE)=IS1
        190     5                                    LFACE(4,NFACE)=IS2
        191     5                                    CALL CALAVC(IE1,IS1,NE,NP,N2,NSP,NS,NODE,LOCAL,
        192     5                    *                           X,Y,Z,AVEC(1,NFACE))
        193     5                                 ELSE
        194     5                                    LFACE(1,NFACE)=IE2
        195     5                                    LFACE(2,NFACE)=IE1
        196     5                                    LFACE(3,NFACE)=IS2
        197     5                                    LFACE(4,NFACE)=IS1
        198     5                                    CALL CALAVC(IE2,IS2,NE,NP,N2,NSP,NS,NODE,LOCAL,
        199     5                    *                           X,Y,Z,AVEC(1,NFACE))
        200     5                                 ENDIF
        201     4                                 LFACE(5,NFACE)=0
        202     4                                 GOTO 3300
        203     4                              ENDIF
        204     3                3400       CONTINUE
        205     2                3300    CONTINUE
        206     1               C
        207     1                3000 CONTINUE
        208                     C
        209                     CC
        210                     CCHY [4] DEALLOCATE WORK ARRAYS
        211                     CC
        212                           DEALLOCATE(LWORK)
        213                     C
        214                           RETURN
        215                     C
        216                      9999 CONTINUE
        217                           WRITE(IUT0,*) ERMSGC
        218                           IERR=1
        219                           RETURN
        220                     C
        221                           END

 Diagnostic messages: program name(MKFAC1)
   jwd8220o-i  "mkfac1.f", line 15: 副作用の可能性のある最適化を行いました。
   jwd2008i-i  "mkfac1.f", line 30: この仮引数'DVEC'は、副プログラム中で使用されていません。
   jwd2006i-i  "mkfac1.f", line 40: この名前'IBTYPE'は、宣言だけされていて引用されていません。
   jwd2006i-i  "mkfac1.f", line 40: この名前'IB4'は、宣言だけされていて引用されていません。
   jwd2006i-i  "mkfac1.f", line 40: この名前'IB3'は、宣言だけされていて引用されていません。
   jwd2006i-i  "mkfac1.f", line 40: この名前'IB2'は、宣言だけされていて引用されていません。
   jwd2006i-i  "mkfac1.f", line 40: この名前'IB1'は、宣言だけされていて引用されていません。
   jwd5202p-i  "mkfac1.f", line 56: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:MSD)
   jwd5202p-i  "mkfac1.f", line 56: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:IP4)
   jwd5202p-i  "mkfac1.f", line 58: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:IP4)
   jwd5202p-i  "mkfac1.f", line 58: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。(名前:NSD)
   jwd8321o-i  "mkfac1.f", line 73: ループをループアンスイッチングしました。
   jwd5004p-i  "mkfac1.f", line 73: リダクション演算を含むDOループを並列化しました。(名前:IS)
   jwd6004s-i  "mkfac1.f", line 73: リダクション演算を含むDOループをSIMD化しました。(名前:IS)
   jwd6229s-i  "mkfac1.f", line 73: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8209o-i  "mkfac1.f", line 75: 多項式の演算順序を変更しました。
   jwd6202s-i  "mkfac1.f", line 79: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:IP4)
   jwd6202s-i  "mkfac1.f", line 82: データの定義引用の順序が逐次実行と異なるため、このDOループはSIMD化できません。(名前:IP4)
   jwd5001p-i  "mkfac1.f", line 111: このDOループを並列化しました。(名前:IE)
   jwd8663o-i  "mkfac1.f", line 111: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "mkfac1.f", line 111: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "mkfac1.f", line 112: このDOループをSIMD化しました。(名前:J)
   jwd5131p-i  "mkfac1.f", line 120: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "mkfac1.f", line 122: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "mkfac1.f", line 137: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "mkfac1.f", line 137: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "mkfac1.f", line 137: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5131p-i  "mkfac1.f", line 168: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "mkfac1.f", line 171: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "mkfac1.f", line 171: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8664o-i  "mkfac1.f", line 171: ループ内に関数呼出しなどの最適化対象外の命令があるため、ソフトウェアパイプライニングを適用できません。

 Procedure information
   Lines      : 221
   Statements : 150
   Stack(byte): 69664
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 221
   Total statements : 150
   Total stack(byte): 69664
   Total prefetch num: 0

