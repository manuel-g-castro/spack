
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:27 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : tractx.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "TRACTX"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE TRACTX
          2                          *   ( MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
          3                          *     ME,MP,NE,NP,NODE,N1,N2,NEX,
          4                          *     CRHO,CVEL,U,V,W,PN,VISC,MELM,EAP2,IENP,NODP,NEP,MEP,
          5                          *     SN,CM, SIJN,FX,FY,FZ,TRAC,RX,RY,
          6                          *     IPART ,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
          7                          *     NPB,LPB,XPB,YPB,ZPB,
          8                          *     IUT0,IERR)
          9                     C
         10                           IMPLICIT NONE
         11                     C
         12                     CCCC  [INPUT:LOOP]
         13                           INTEGER*4 MCOLOR,MCPART
         14                           INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
         15                     C
         16                           INTEGER*4 ME,MP,NE,NP,N1,N2,MEP
         17                           INTEGER*4 NODE(N2,NE),NEX(12)
         18                           INTEGER*4 MELM
         19                           REAL*4 CRHO,CVEL
         20                           REAL*4 U(NP),V(NP),W(NP),PN(NP),VISC(NE)
         21                           REAL*4 SN(N1,NE),CM(NP)
         22                           REAL*4 SIJN(MP,6),FX(NP),FY(NP),FZ(NP),
         23                          *       RX(0:N2,ME),RY(0:N2,ME)
         24                           REAL*8 TRAC(3,NPB)
         25                     C
         26                           REAL*4 EAP2(3,N2,MEP,NP)
         27                           INTEGER*4 IENP(MEP,MP),NODP(N2,MEP,NP),NEP(MP)
         28                     C
         29                           INTEGER*4 IPART,NDOM,MBPDOM
         30                           INTEGER*4 LDOM(NDOM),NBPDOM(NDOM),
         31                          *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM)
         32                     C
         33                           INTEGER*4 NPB
         34                           INTEGER*4 LPB(NPB)
         35                           REAL*4    XPB(NPB),YPB(NPB),ZPB(NPB)
         36                     C
         37                           INTEGER*4 IUT0,IERR
         38                     C
         39                           INTEGER*4 IDUM,MAXBUF
         40                     C
         41                           INTEGER*4 IB,IP
         42                           REAL*4    VISP,COEF
         43                     C
         44                           CHARACTER*60 ERMSGC
         45                          & /' ## SUBROUTINE TRANCX: FATAL      ERROR REPORT   ; RETURNED' /
         46                     C
         47                           IDUM=3
         48                           MAXBUF = NE*(N2+1)
         49                     C
         50                     C
         51                     CCYY 1. COMPUTE NODAL VALUE OF STRAIN VELOCITY TENSOR
         52                     C
         53                     C
         54                     C  (1) DIAGONAL TERMS
         55                     C
         56                     C
         57                           CALL NNXYZ( "DIAGONAL    ",MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
         58                          *           ME,MP,NE,NP,NODE,N2,NEX,
         59                          *           MELM,EAP2,IENP,NODP,NEP,MEP,
         60                          *           FX,FY,FZ,U,V,W)
         61                     C
         62                           CALL DDCOMX(IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
         63                          &            FX,FY,FZ,NP,IUT0,IERR,
         64                          &            RX,RY,MAXBUF)
         65     1                     IF(IERR.NE.0) THEN
         66     1                         WRITE(IUT0,*)
         67     1                         WRITE(IUT0,*) ERMSGC
         68     1                         RETURN
         69     1                     ENDIF
         70                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 552
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.60, ITR: 144, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      SIJN, FZ, CM, FY, FX
                              <<< Loop-information  End >>>
         71     1  pp    v            DO 1000 IP=1,NP
         72     1   p    v                SIJN(IP,1)=FX(IP)*CM(IP)
         73     1   p    v                SIJN(IP,2)=FY(IP)*CM(IP)
         74     1   p    v                SIJN(IP,3)=FZ(IP)*CM(IP)
         75     1   p    v       1000 CONTINUE
         76                     C
         77                     C
         78                     C  (2) OFF-DIAGONAL TERMS
         79                     C
         80                     C
         81                           CALL NNXYZ( "OFF-DIAGONAL",MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
         82                          *           ME,MP,NE,NP,NODE,N2,NEX,
         83                          *           MELM,EAP2,IENP,NODP,NEP,MEP,
         84                          *           FX,FY,FZ,U,V,W)
         85                     C
         86                           CALL DDCOMX(IPART,IDUM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
         87                          &            FX,FY,FZ,NP,IUT0,IERR,
         88                          &            RX,RY,MAXBUF)
         89     1                     IF(IERR.NE.0) THEN
         90     1                         WRITE(IUT0,*)
         91     1                         WRITE(IUT0,*) ERMSGC
         92     1                         RETURN
         93     1                     ENDIF
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 552
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 3.60, ITR: 144, MVE: 4)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      SIJN, FZ, CM, FY, FX
                              <<< Loop-information  End >>>
         94     1  pp    v            DO 1100 IP=1,NP
         95     1   p    v               SIJN(IP,4)=FX(IP)*CM(IP)
         96     1   p    v               SIJN(IP,5)=FY(IP)*CM(IP)
         97     1   p    v               SIJN(IP,6)=FZ(IP)*CM(IP)
         98     1   p    v       1100 CONTINUE
         99                     C
        100                     C
        101                     CCYY 2. COMPUTE NODAL VALUE OF VISCOCITY
        102                     C
        103                     C
        104                           CALL NODLEX(NODE,ME,MP,NE,NP,N1,N2,NEX,SN,
        105                          *            IPART,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
        106                          *            VISC,FX,CM,IUT0,IERR,RX,RY,MAXBUF)
        107     1                     IF(IERR.NE.0) THEN
        108     1                         WRITE(IUT0,*)
        109     1                         WRITE(IUT0,*) ERMSGC
        110     1                         RETURN
        111     1                     ENDIF
        112                     C
        113                     C
        114                     CCYY 3. COMPUTE STRESS-TENSOR
        115                     C
        116                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 286
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.90, ITR: 80, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FX, SIJN, PN
                              <<< Loop-information  End >>>
        117     1  pp    v            DO 1300 IP=1,NP
        118     1   p    v               VISP=FX(IP)
        119     1   p    v               SIJN(IP,1)=VISP*SIJN(IP,1)-PN(IP)
        120     1   p    v               SIJN(IP,2)=VISP*SIJN(IP,2)-PN(IP)
        121     1   p    v               SIJN(IP,3)=VISP*SIJN(IP,3)-PN(IP)
        122     1   p    v               SIJN(IP,4)=VISP*SIJN(IP,4)
        123     1   p    v               SIJN(IP,5)=VISP*SIJN(IP,5)
        124     1   p    v               SIJN(IP,6)=VISP*SIJN(IP,6)
        125     1   p    v       1300 CONTINUE
        126                     C
        127                     C
        128                     CCYY 4. COMPUTE TRACTION AT BOUNDARY NODES
        129                     C
        130                     C
        131                           COEF=CRHO*CVEL*CVEL
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 214
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 8)
                              <<<    SOFTWARE PIPELINING(IPC: 2.11, ITR: 56, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      ZPB, LPB, XPB, YPB, TRAC
                              <<< Loop-information  End >>>
        132     1  pp    v            DO 1400 IB=1,NPB
        133     1   p    v               IP=LPB(IB)
        134     1   p    v               TRAC(1,IB)= COEF*( XPB(IB)*SIJN(IP,1)
        135     1                    *                     +YPB(IB)*SIJN(IP,6)
        136     1                    *                     +ZPB(IB)*SIJN(IP,5))
        137     1   p    v               TRAC(2,IB)= COEF*( XPB(IB)*SIJN(IP,6)
        138     1                    *                     +YPB(IB)*SIJN(IP,2)
        139     1                    *                     +ZPB(IB)*SIJN(IP,4))
        140     1   p    v               TRAC(3,IB)= COEF*( XPB(IB)*SIJN(IP,5)
        141     1                    *                     +YPB(IB)*SIJN(IP,4)
        142     1                    *                     +ZPB(IB)*SIJN(IP,3))
        143     1   p    v       1400 CONTINUE
        144                     C
        145                           RETURN
        146                           END

 Diagnostic messages: program name(TRACTX)
   jwd8220o-i  "tractx.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd5001p-i  "tractx.f", line 71: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "tractx.f", line 71: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "tractx.f", line 71: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "tractx.f", line 71: ループの繰返し数が144回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "tractx.f", line 94: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "tractx.f", line 94: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "tractx.f", line 94: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "tractx.f", line 94: ループの繰返し数が144回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5001p-i  "tractx.f", line 117: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "tractx.f", line 117: このDOループをSIMD化しました。(名前:IP)
   jwd8204o-i  "tractx.f", line 117: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "tractx.f", line 117: ループの繰返し数が80回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "tractx.f", line 131: 多項式の演算順序を変更しました。
   jwd5001p-i  "tractx.f", line 132: このDOループを並列化しました。(名前:IB)
   jwd6001s-i  "tractx.f", line 132: このDOループをSIMD化しました。(名前:IB)
   jwd8204o-i  "tractx.f", line 132: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "tractx.f", line 132: ループの繰返し数が56回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd8209o-i  "tractx.f", line 134: 多項式の演算順序を変更しました。
   jwd8209o-i  "tractx.f", line 137: 多項式の演算順序を変更しました。
   jwd8209o-i  "tractx.f", line 140: 多項式の演算順序を変更しました。

 Procedure information
   Lines      : 146
   Statements : 74
   Stack(byte): 2320
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 146
   Total statements : 74
   Total stack(byte): 2320
   Total prefetch num: 0

