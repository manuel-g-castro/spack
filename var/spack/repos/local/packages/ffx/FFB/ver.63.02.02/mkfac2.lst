
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:33 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : mkfac2.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "MKFAC2"
  (line-no.)(nest)(optimize)
          1                     C======================================================================C
          2                     C                                                                      C
          3                     C SOFTWARE NAME : FRONTFLOW_BLUE.8.1                                   C
          4                     C                                                                      C
          5                     C  SUB ROUTINE : MKFAC2                                                C
          6                     C                                                                      C
          7                     C                                       WRITTEN BY H.YOSHIMURA         C
          8                     C                                                                      C
          9                     C                                                                      C
         10                     C CONTACT ADDRESS : IIS, THE UNIVERSITY OF TOKYO, CISS                 C
         11                     C                                                                      C
         12                     C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
         13                     C                                                                      C
         14                     C======================================================================C
         15                           SUBROUTINE MKFAC2(IPART,NE,NP,N2,NSP,NS,MEP,MFACE,MBF,
         16                          *                  NODE,LOCAL,NEP,IENP,X,Y,Z,FE,
         17                          *                  NPWALL,NPINLT,NPFREE,NPSYMT,
         18                          *                  LPWALL,LPINLT,LPFREE,LPSYMT,
         19                          *                  NFACE,LFACE,AVEC,DVEC,
         20                          *                  NFWALL,NFINLT,NFFREE,NFSYMT,
         21                          *                  LFWALL,LFINLT,LFFREE,LFSYMT,FINLT,
         22                          *                  LWRK01,LEFACE,IUT6,IUT0,IERR)
         23                     C
         24                           IMPLICIT NONE
         25                     C
         26                     C     [INPUT]
         27                           INTEGER*4 IPART,NE,NP,N2,NSP,NS,MEP,MFACE,MBF
         28                           INTEGER*4 NODE(N2,NE),LOCAL(NSP,NS,4),NEP(NP),IENP(MEP,NP)
         29                           REAL*8    X(NP),Y(NP),Z(NP)
         30                           REAL*4    FE(NE)
         31                           INTEGER*4 NPWALL,NPINLT,NPFREE,NPSYMT
         32                           INTEGER*4 LPWALL(NPWALL),LPINLT(NPINLT),
         33                          *          LPFREE(NPFREE),LPSYMT(NPSYMT)
         34                     C
         35                     C     [IN-OUTPUT]
         36                           INTEGER*4 NFACE
         37                           INTEGER*4 LFACE(5,MFACE)
         38                           REAL*4    AVEC(4,MFACE),DVEC(3,MFACE)
         39                           INTEGER*4 NFWALL,NFINLT,NFFREE,NFSYMT
         40                           INTEGER*4 LFWALL(MBF),LFINLT(MBF),LFFREE(MBF),LFSYMT(MBF)
         41                           REAL*4    FINLT(MBF)
         42                           INTEGER*4 LEFACE(6,NE)
         43                           INTEGER*4 IUT6,IUT0,IERR
         44                     C
         45                     C     [WORK]
         46                           INTEGER*4 LWRK01(NP)
         47                     C
         48                     C     [LOCAL]
         49                           INTEGER*4 IP,IP1,IP2,IP3,IP4
         50                           INTEGER*4 IE,IETYPE,NLS,IS,IBF
         51                           INTEGER*4 IBP,IB1,IB2,IB3,IB4,IBTYPE
         52                     C
         53                           CHARACTER*60 ERMSGC
         54                          * /' ## SUBROUTINE MKFAC1: ERROR OCCURED             ; RETURNED' /
         55                           CHARACTER*60 EREXP1
         56                          * / ' THE NUMBER OF FACE IS OVER MFACE                         ' /
         57                           CHARACTER*60 EREXP2
         58                          * / ' THE NUMBER OF WALL     BOUNDARY FACE IS OVER MBF         ' /
         59                           CHARACTER*60 EREXP3
         60                          * / ' THE NUMBER OF INLET    BOUNDARY FACE IS OVER MBF         ' /
         61                           CHARACTER*60 EREXP4
         62                          * / ' THE NUMBER OF FREE     BOUNDARY FACE IS OVER MBF         ' /
         63                           CHARACTER*60 EREXP5
         64                          * / ' THE NUMBER OF SYMMETRY BOUNDARY FACE IS OVER MBF         ' /
         65                     CC
         66                     CCHY [1] SET BOUNDARY TYPE
         67                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2000
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LWRK01
                              <<< Loop-information  End >>>
         68     1  pp   4v            DO 1000 IP=1,NP
         69     1   p   4v               LWRK01(IP)=0
         70     1   p   4v       1000 CONTINUE
         71                     C
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPWALL
                              <<< Loop-information  End >>>
         72     1   s   4v            DO 1100 IBP=1,NPWALL
         73     1   p   4v               IP=LPWALL(IBP)
         74     1   m   4v               LWRK01(IP)=1
         75     1   p   4v       1100 CONTINUE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPINLT
                              <<< Loop-information  End >>>
         76     1   s   4v            DO 1200 IBP=1,NPINLT
         77     1   p   4v               IP=LPINLT(IBP)
         78     1   m   4v               LWRK01(IP)=2
         79     1   p   4v       1200 CONTINUE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPFREE
                              <<< Loop-information  End >>>
         80     1   s   4v            DO 1300 IBP=1,NPFREE
         81     1   p   4v               IP=LPFREE(IBP)
         82     1   m   4v               LWRK01(IP)=3
         83     1   p   4v       1300 CONTINUE
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 1.83, ITR: 320, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPSYMT
                              <<< Loop-information  End >>>
         84     1   s   4v            DO 1400 IBP=1,NPSYMT
         85     1   p   4v               IP=LPSYMT(IBP)
         86     1   m   4v               LWRK01(IP)=4
         87     1   p   4v       1400 CONTINUE
         88                     CC
         89                     CCHY [2] MAKE BOUNDARY SURFACE LIST
         90                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 942
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LFSYMT, LFFREE, LFINLT, LFWALL
                              <<< Loop-information  End >>>
         91     1  pp   2v            DO 2000 IBF=1,MBF
         92     1   p   2v               LFWALL(IBF)=0
         93     1   p   2v               LFINLT(IBF)=0
         94     1   p   2v               LFFREE(IBF)=0
         95     1   p   2v               LFSYMT(IBF)=0
         96     1   p   2v       2000 CONTINUE
         97                     C
         98                           NFWALL=0
         99                           NFINLT=0
        100                           NFFREE=0
        101                           NFSYMT=0
        102     1                     DO 2100 IE=1,NE
        103     2                        IF(     NODE(8,IE).GE.1) THEN ! HEX
        104     2                           IETYPE=4
        105     2                           NLS=6
        106     2                        ELSE IF(NODE(6,IE).GE.1) THEN ! PRS
        107     2                           IETYPE=3
        108     2                           NLS=5
        109     2                        ELSE IF(NODE(5,IE).GE.1) THEN ! PYR
        110     2                           IETYPE=2
        111     2                           NLS=5
        112     2                        ELSE                          ! TET
        113     2                           IETYPE=1
        114     2                           NLS=4
        115     2                        ENDIF
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    SPILLS :
                              <<<      GENERAL   : SPILL 0  FILL 26
                              <<<      SIMD&FP   : SPILL 0  FILL 0
                              <<<      SCALABLE  : SPILL 0  FILL 0
                              <<<      PREDICATE : SPILL 0  FILL 0
                              <<< Loop-information  End >>>
        116     2                        DO 2200 IS=1,NLS
        117     2                           IF (LEFACE(IS,IE).NE.0) GOTO 2200
        118     2               C
        119     2                           IBTYPE=0
        120     2                           IP1=NODE(LOCAL(1,IS,IETYPE),IE)
        121     2                           IB1=LWRK01(IP1)
        122     2                           IF (IB1.EQ.0) GOTO 2200
        123     2                           IBTYPE=MAX(IBTYPE,IB1)
        124     2               C
        125     2                           IP2=NODE(LOCAL(2,IS,IETYPE),IE)
        126     2                           IB2=LWRK01(IP2)
        127     2                           IF (IB2.EQ.0) GOTO 2200
        128     2                           IBTYPE=MAX(IBTYPE,IB2)
        129     2               C
        130     2                           IP3=NODE(LOCAL(3,IS,IETYPE),IE)
        131     2                           IB3=LWRK01(IP3)
        132     2                           IF (IB3.EQ.0) GOTO 2200
        133     2                           IBTYPE=MAX(IBTYPE,IB3)
        134     2               C
        135     3                           IF ((IETYPE.EQ.1            ).OR. ! TRI
        136     3                    *          (IETYPE.EQ.2.AND.IS.LE.4).OR.
        137     3                    *          (IETYPE.EQ.3.AND.IS.LE.2)) THEN
        138     3                              IP4=0
        139     3                           ELSE                              ! QUAD
        140     3                              IP4=NODE(LOCAL(4,IS,IETYPE),IE)
        141     3                              IB4=LWRK01(IP4)
        142     3                              IF (IB4.EQ.0) GOTO 2200
        143     3                              IBTYPE=MAX(IBTYPE,IB4)
        144     3                           ENDIF
        145     2               C
        146     2                           NFACE=NFACE+1
        147     3                           IF (NFACE.GT.MFACE) THEN
        148     3                              WRITE(IUT0,*) EREXP1,MFACE
        149     3                              GOTO 9999
        150     3                           ENDIF
        151     2                           LEFACE(IS,IE)=IE
        152     2                           LFACE(1,NFACE)=IE
        153     2                           LFACE(2,NFACE)=0
        154     2                           LFACE(3,NFACE)=IS
        155     2                           LFACE(4,NFACE)=0
        156     2                           LFACE(5,NFACE)=0
        157     2                           CALL CALAVC(IE,IS,NE,NP,N2,NSP,NS,NODE,LOCAL,
        158     2                    *                  X,Y,Z,AVEC(1,NFACE))
        159     2               C
        160     3                           IF      (IBTYPE.EQ.1) THEN
        161     3                              NFWALL=NFWALL+1
        162     4                              IF (NFWALL.GT.MBF) THEN
        163     4                                 WRITE(IUT0,*) EREXP2,MBF
        164     4                                 GOTO 9999
        165     4                              ENDIF
        166     3                              LFWALL(NFWALL)=NFACE
        167     3                           ELSE IF (IBTYPE.EQ.2) THEN
        168     3                              NFINLT=NFINLT+1
        169     4                              IF (NFINLT.GT.MBF) THEN
        170     4                                 WRITE(IUT0,*) EREXP3,MBF
        171     4                                 GOTO 9999
        172     4                              ENDIF
        173     3                              LFINLT(NFINLT)=NFACE
        174     3                           ELSE IF (IBTYPE.EQ.3) THEN
        175     3                              NFFREE=NFFREE+1
        176     4                              IF (NFFREE.GT.MBF) THEN
        177     4                                 WRITE(IUT0,*) EREXP4,MBF
        178     4                                 GOTO 9999
        179     4                              ENDIF
        180     3                              LFFREE(NFFREE)=NFACE
        181     3                           ELSE IF (IBTYPE.EQ.4) THEN
        182     3                              NFSYMT=NFSYMT+1
        183     4                              IF (NFSYMT.GT.MBF) THEN
        184     4                                 WRITE(IUT0,*) EREXP5,MBF
        185     4                                 GOTO 9999
        186     4                              ENDIF
        187     3                              LFSYMT(NFSYMT)=NFACE
        188     3                           ENDIF
        189     2               C
        190     2                2200    CONTINUE
        191     1                2100 CONTINUE
        192                     C
        193                           WRITE(IUT6,*) 'NUMBER OF WALL     BOUNDARY FACE : ',NFWALL
        194                           WRITE(IUT6,*) 'NUMBER OF INLET    BOUNDARY FACE : ',NFINLT
        195                           WRITE(IUT6,*) 'NUMBER OF FREE     BOUNDARY FACE : ',NFFREE
        196                           WRITE(IUT6,*) 'NUMBER OF SYMMETRY BOUNDARY FACE : ',NFSYMT
        197                     C
        198                     CC
        199                     CCHY [3] SET VOLUME FRACTION OF INLET BOUNDARY FACE
        200                     CC
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 534
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    SOFTWARE PIPELINING(IPC: 2.25, ITR: 416, MVE: 3)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      FINLT, LFINLT
                              <<< Loop-information  End >>>
        201     1  pp   2v            DO 3000 IBF=1,NFINLT
        202     1   p   2v               IE=LFACE(1,LFINLT(IBF))
        203     2   p   2v               IF (FE(IE).GE.0.5E0) THEN
        204     2   p   2v                  FINLT(IBF)=1.0E0
        205     2   p   2v               ELSE
        206     2   p   2v                  FINLT(IBF)=0.0E0
        207     2   p   2v               ENDIF
        208     1   p   2v       3000 CONTINUE
        209                     C
        210                           RETURN
        211                     C
        212                      9999 CONTINUE
        213                           WRITE(IUT0,*)
        214                           WRITE(IUT0,*) ERMSGC
        215                           IERR=1
        216                     C
        217                           RETURN
        218                           END

 Diagnostic messages: program name(MKFAC2)
   jwd2008i-i  "mkfac2.f", line 15: この仮引数'IPART'は、副プログラム中で使用されていません。
   jwd2008i-i  "mkfac2.f", line 28: この仮引数'IENP'は、副プログラム中で使用されていません。
   jwd2008i-i  "mkfac2.f", line 28: この仮引数'NEP'は、副プログラム中で使用されていません。
   jwd2008i-i  "mkfac2.f", line 38: この仮引数'DVEC'は、副プログラム中で使用されていません。
   jwd5001p-i  "mkfac2.f", line 68: このDOループを並列化しました。(名前:IP)
   jwd6001s-i  "mkfac2.f", line 68: このDOループをSIMD化しました。(名前:IP)
   jwd8663o-i  "mkfac2.f", line 68: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "mkfac2.f", line 68: ループを展開数4回でアンローリングしました。
   jwd6001s-i  "mkfac2.f", line 72: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "mkfac2.f", line 72: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "mkfac2.f", line 72: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "mkfac2.f", line 74: 配列'LWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6001s-i  "mkfac2.f", line 76: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "mkfac2.f", line 76: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "mkfac2.f", line 76: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "mkfac2.f", line 78: 配列'LWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6001s-i  "mkfac2.f", line 80: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "mkfac2.f", line 80: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "mkfac2.f", line 80: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "mkfac2.f", line 82: 配列'LWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd6001s-i  "mkfac2.f", line 84: このDOループをSIMD化しました。(名前:IBP)
   jwd8204o-i  "mkfac2.f", line 84: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "mkfac2.f", line 84: ループの繰返し数が320回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。
   jwd5209p-i  "mkfac2.f", line 86: 配列'LWRK01'の添字式中の変数'IP'をループ中で定義しているため、このDOループは並列化できません。
   jwd5001p-i  "mkfac2.f", line 91: このDOループを並列化しました。(名前:IBF)
   jwd6001s-i  "mkfac2.f", line 91: このDOループをSIMD化しました。(名前:IBF)
   jwd8663o-i  "mkfac2.f", line 91: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "mkfac2.f", line 91: ループを展開数2回でアンローリングしました。
   jwd5131p-i  "mkfac2.f", line 102: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "mkfac2.f", line 116: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "mkfac2.f", line 116: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8664o-i  "mkfac2.f", line 116: ループ内に関数呼出しなどの最適化対象外の命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd5001p-i  "mkfac2.f", line 201: このDOループを並列化しました。(名前:IBF)
   jwd6001s-i  "mkfac2.f", line 201: このDOループをSIMD化しました。(名前:IBF)
   jwd8204o-i  "mkfac2.f", line 201: ループにソフトウェアパイプライニングを適用しました。
   jwd8205o-i  "mkfac2.f", line 201: ループの繰返し数が416回以上の時、ソフトウェアパイプライニングを適用したループが実行時に選択されます。

 Procedure information
   Lines      : 218
   Statements : 154
   Stack(byte): 3072
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 218
   Total statements : 154
   Total stack(byte): 3072
   Total prefetch num: 0

