
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:15 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : ovrste.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "OVRSTE"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE OVRSTE(IPART,NESET,N1,N2,ME,NE,NP,NEX,NODE,S,SP,
          2                          *                  LESET1,LESET2,LESET3,EOVER1,EOVER2,EOVER3,
          3                          *                  NDOM,MBPDOM,NESND,NERCV,
          4                          *                  LESND,NETSND,LERCV,NETRCV,IESET,IESRC,
          5                          *                  WRK01,WRK02,RX,RY,IUT0,IERR)
          6                           IMPLICIT NONE
          7                           INTEGER*4 IPART,NESET,N1,N2,ME,NE,NP,NEX(12)
          8                           INTEGER*4 NODE(N2,NE)
          9                           REAL*4    S(NE),SP(NP)
         10                           INTEGER*4 LESET1(NESET),LESET2(NESET),LESET3(NESET)
         11                           REAL*4    EOVER1(NESET),EOVER2(NESET),EOVER3(NESET)
         12                           INTEGER*4 NDOM,MBPDOM,NESND,NERCV,
         13                          *          LESND(NDOM),NETSND(NDOM),
         14                          *          LERCV(NDOM),NETRCV(NDOM),
         15                          *          IESET (MBPDOM,NDOM),IESRC (MBPDOM,NDOM)
         16                           REAL*4    WRK01(NE),WRK02(NE),RX(N1,ME),RY(N1,ME)
         17                           INTEGER*4 IUT0,IERR
         18                     C
         19                           INTEGER*4 NETET,NEPRD,NEWED,NEHEX,NTET,NPRD,NWED,NHEX,
         20                          *          IBE,ISEND,IE,IP,NB,MAXBUF,IDIM,
         21                          *          IP1,IP2,IP3,IP4,IP5,IP6,IP7,IP8
         22                           REAL*4    GP,EP,TP,T1,T2,T3,T4,T5,T6,T7,T8
         23                     C
         24                           CHARACTER*60 ERMSGC
         25                          & / ' ## SUBROUTINE OVRSTE: FATAL      ERROR REPORT   ; RETURNED' /
         26                     C
         27                           MAXBUF = ME*N1
         28                     C
         29                           NETET =NEX( 1)
         30                           NEPRD =NEX( 2)
         31                           NEWED =NEX( 3)
         32                           NEHEX =NEX( 4)
         33                           NTET  =NEX( 5)
         34                           NPRD  =NEX( 6)
         35                           NWED  =NEX( 7)
         36                           NHEX  =NEX( 8)
         37                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 39
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LESET3
                              <<< Loop-information  End >>>
         38     1  pp    s            DO 1000 IBE = 1 , NESET
         39     1   p    m                ISEND = LESET3(IBE)
         40     1   p    s                IF(ISEND.LT.0) GO TO 1000
         41     1               C
         42     1   p    s                IE = LESET2(IBE)
         43     1   p    s                GP = EOVER1(IBE)
         44     1   p    s                EP = EOVER2(IBE)
         45     1   p    s                TP = EOVER3(IBE)
         46     1               CCYY---
         47     2   p    s                IF(IE.EQ.0) THEN
         48     2   p    m                    WRK01(IBE)=S(LESET1(IBE))
         49     2   p    s                    GOTO 1000
         50     2   p    s                ENDIF
         51     1               CCYY---
         52     1               C
         53     2   p    s                IF(NODE(NHEX,IE).NE.0) THEN
         54     2   p    s                    IP1=NODE(1,IE)
         55     2   p    s                    IP2=NODE(2,IE)
         56     2   p    s                    IP3=NODE(3,IE)
         57     2   p    s                    IP4=NODE(4,IE)
         58     2   p    s                    IP5=NODE(5,IE)
         59     2   p    s                    IP6=NODE(6,IE)
         60     2   p    s                    IP7=NODE(7,IE)
         61     2   p    s                    IP8=NODE(8,IE)
         62     2   p    s                    T1=0.125E0*(1.-GP)*(1.-EP)*(1.-TP)
         63     2   p    s                    T2=0.125E0*(1.+GP)*(1.-EP)*(1.-TP)
         64     2   p    s                    T3=0.125E0*(1.+GP)*(1.+EP)*(1.-TP)
         65     2   p    s                    T4=0.125E0*(1.-GP)*(1.+EP)*(1.-TP)
         66     2   p    s                    T5=0.125E0*(1.-GP)*(1.-EP)*(1.+TP)
         67     2   p    s                    T6=0.125E0*(1.+GP)*(1.-EP)*(1.+TP)
         68     2   p    s                    T7=0.125E0*(1.+GP)*(1.+EP)*(1.+TP)
         69     2   p    s                    T8=0.125E0*(1.-GP)*(1.+EP)*(1.+TP)
         70     2   p    s                    WRK01(IBE)=T1*SP(IP1)+T2*SP(IP2)+T3*SP(IP3)+T4*SP(IP4)
         71     2                    *                  +T5*SP(IP5)+T6*SP(IP6)+T7*SP(IP7)+T8*SP(IP8)
         72     2   p    s                ELSE IF(NODE(NWED,IE).NE.0) THEN
         73     2   p    s                    IP1=NODE(1,IE)
         74     2   p    s                    IP2=NODE(2,IE)
         75     2   p    s                    IP3=NODE(3,IE)
         76     2   p    s                    IP4=NODE(4,IE)
         77     2   p    s                    IP5=NODE(5,IE)
         78     2   p    s                    IP6=NODE(6,IE)
         79     2   p    s                    T1=0.5E0*GP        *(1.-TP)
         80     2   p    s                    T2=0.5E0*EP        *(1.-TP)
         81     2   p    s                    T3=0.5E0*(1.-GP-EP)*(1.-TP)
         82     2   p    s                    T4=0.5E0*GP        *(1.+TP)
         83     2   p    s                    T5=0.5E0*EP        *(1.+TP)
         84     2   p    s                    T6=0.5E0*(1.-GP-EP)*(1.+TP)
         85     2   p    s                    WRK01(IBE)=T1*SP(IP1)+T2*SP(IP2)+T3*SP(IP3)+T4*SP(IP4)
         86     2                    *                  +T5*SP(IP5)+T6*SP(IP6)
         87     2   p    s                ELSE IF(NODE(NPRD,IE).NE.0) THEN
         88     2   p    s                    IP1=NODE(1,IE)
         89     2   p    s                    IP2=NODE(2,IE)
         90     2   p    s                    IP3=NODE(3,IE)
         91     2   p    s                    IP4=NODE(4,IE)
         92     2   p    s                    IP5=NODE(5,IE)
         93     2   p    s                    T1=0.25E0*((1.-GP)*(1.-EP)-TP+GP*EP*TP/(1.-TP))
         94     2   p    s                    T2=0.25E0*((1.+GP)*(1.-EP)-TP-GP*EP*TP/(1.-TP))
         95     2   p    s                    T3=0.25E0*((1.+GP)*(1.+EP)-TP+GP*EP*TP/(1.-TP))
         96     2   p    s                    T4=0.25E0*((1.-GP)*(1.+EP)-TP-GP*EP*TP/(1.-TP))
         97     2   p    s                    T5= TP
         98     2   p    s                    WRK01(IBE)=T1*SP(IP1)+T2*SP(IP2)+T3*SP(IP3)+T4*SP(IP4)
         99     2                    *                  +T5*SP(IP5)
        100     2   p    s                ELSE IF(NODE(NTET,IE).NE.0) THEN
        101     2   p    s                    IP1=NODE(1,IE)
        102     2   p    s                    IP2=NODE(2,IE)
        103     2   p    s                    IP3=NODE(3,IE)
        104     2   p    s                    IP4=NODE(4,IE)
        105     2   p    s                    T1=GP
        106     2   p    s                    T2=EP
        107     2   p    s                    T3=TP
        108     2   p    s                    T4=1.0E0-(GP+EP+TP)
        109     2   p    s                    WRK01(IBE)=T1*SP(IP1)+T2*SP(IP2)+T3*SP(IP3)+T4*SP(IP4)
        110     2   p                     ELSE
        111     2               CC            WRITE(IUT0,*)'HEAT3X:INVALID NODE TABLE:ERROR'
        112     2               CC            IERR=1
        113     2               CC            RETURN
        114     2   p    s                ENDIF
        115     1   p    v       1000 CONTINUE
        116                     C
        117                     C         PERFORM SELF-DOMAIN VELOCITY OVERSETS
        118                     C
        119                           NB = 0
        120                     *POPTION INDEP(T)
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LESET3
                              <<< Loop-information  End >>>
        121     1       2s            DO 2000 IBE = 1 , NESET
        122     1       2v                ISEND = LESET3(IBE)
        123     1       2v                IF(ISEND.LT.0) GO TO 2000
        124     1               C
        125     1       2v                IE = LESET1(IBE)
        126     2       2v                IF(ISEND.EQ.0) THEN
        127     2       2v                    S(IE) = WRK01(IBE)
        128     2       2v                ELSE
        129     2       2m                    NB = NB+1
        130     2       2s                    WRK02(NB) = WRK01(IBE)
        131     2       2v                ENDIF
        132     1       2v       2000 CONTINUE
        133                     C
        134                     C         PERFORM INTER-DOMAIN VELOCITY OVERSETS
        135                     C
        136     1                     IF(IPART.GE.1) THEN
        137     1                         IDIM=1
        138     1                         CALL DDSET3(NESND,LESND,NETSND,IESET,IESRC,
        139     1                    *                WRK02,WRK02,WRK02,NB,
        140     1                    *                NERCV,LERCV,NETRCV,S,S,S,NE,
        141     1                    *                IDIM,MBPDOM,IUT0,IERR,RX,RY,MAXBUF)
        142     2                         IF(IERR.NE.0) THEN
        143     2                             WRITE(IUT0,*)
        144     2                             WRITE(IUT0,*) ERMSGC
        145     2                             RETURN
        146     2                         ENDIF
        147     1                     ENDIF
        148                     C
        149                           RETURN
        150                           END

 Diagnostic messages: program name(OVRSTE)
   jwd8220o-i  "ovrste.f", line 1: 副作用の可能性のある最適化を行いました。
   jwd2006i-i  "ovrste.f", line 19: この名前'IP'は、宣言だけされていて引用されていません。
   jwd5001p-i  "ovrste.f", line 38: このDOループを並列化しました。(名前:IBE)
   jwd6229s-i  "ovrste.f", line 38: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "ovrste.f", line 38: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8209o-i  "ovrste.f", line 70: 多項式の演算順序を変更しました。
   jwd8209o-i  "ovrste.f", line 85: 多項式の演算順序を変更しました。
   jwd8209o-i  "ovrste.f", line 98: 多項式の演算順序を変更しました。
   jwd8209o-i  "ovrste.f", line 109: 多項式の演算順序を変更しました。
   jwd5228p-i  "ovrste.f", line 121: データの定義引用の順序が逐次実行と異なるため、このDOループは並列化できません。
   jwd6229s-i  "ovrste.f", line 121: IF文が存在するため、このDOループのSIMD化を抑止しました。
   jwd8670o-i  "ovrste.f", line 121: ループ内に分岐命令があるため、ソフトウェアパイプライニングを適用できません。
   jwd8202o-i  "ovrste.f", line 121: ループを展開数2回でアンローリングしました。

 Procedure information
   Lines      : 150
   Statements : 113
   Stack(byte): 1152
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 150
   Total statements : 113
   Total stack(byte): 1152
   Total prefetch num: 0

