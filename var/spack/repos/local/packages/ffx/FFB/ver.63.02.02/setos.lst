
 Fujitsu Fortran Version 4.1.0  Tue Apr 28 18:53:23 2020

 Compilation information
   Current directory : /vol0001/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/ver.63.02.02
   Source file       : setos.f

 Option information
   Command line options : -Kident_mpi -f2004 -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Kvisimpact,ocl,optmsg=2,openmp -Dcputime -DUSE_TIMER -DUSE_BARRIER -Nlst=t -Cpp -Nfjomplib -c -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Knointentopt
   Cpp options          : -I/home/g9300001/u93021/09.FFB/2020.04.28a_v630202_from_Yamade/FFB.63.02.02/include -I/include/mpi/fujitsu/ -Dcputime -DUSE_TIMER -DUSE_BARRIER -I/opt/FJSVxtclanga/.common/MELI014/include/mpi/fujitsu -I/opt/FJSVxtclanga/.common/MELI014/lib64 -Dunix -Dlinux -D__FUJITSU -D__FRT_major__=4 -D__FRT_minor__=1 -D__FRT_patchlevel__=0 -D__FRT_version__="4.1.0" -D__aarch64__ -D__unix -D_OPENMP=201511 -D__frt_version=800 -D__ARM_ARCH=8 -D__ARM_FEATURE_SVE -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -otmp
   Effective options    : -fi -g0 -AE -Fixed -O3 -X08
                          -x0 -xaccept=nomodule_allocatable
                          -KA64FX -KARMV8_3_A -KSVE -Kalign_commons
                          -Kalign_loops -Kassume=noshortloop
                          -Kassume=nomemory_bandwidth
                          -Kassume=notime_saving_compilation -Kauto
                          -Kautoobjstack -Knocalleralloc -Kcmodel=small
                          -Keval -Keval_noconcurrent -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                          -Kilfunc=procedure -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_stripmining
                          -Kloop_fission_threshold=50 -Kloop_fusion
                          -Kloop_interchange -Kloop_part_parallel
                          -Kloop_part_simd -Kloop_perfect_nest
                          -Kloop_noversioning -Knolto -Kmfunc=1 -Kocl
                          -Komitfp -Knooptlib_string -Koptmsg=2
                          -Knopc_relative_literal_loads -Kplt -Knopreex
                          -Kprefetch_noconditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_strong -Kprefetch_strong_L2 -Knopreload
                          -Ksch_post_ra -Ksch_pre_ra -Ksibling_calls
                          -Ksimd=auto -Ksimd_packed_promotion
                          -Ksimd_reduction_product -Ksimd_reg_size=512
                          -Ksimd_nouncounted_loop
                          -Ksimd_use_multiple_structures -Knostriping -Kswp
                          -Kswp_freg_rate=100 -Kswp_ireg_rate=100
                          -Kswp_preg_rate=100 -Ktemparraystack -Kunroll
                          -Knounroll_and_jam -Knozfill
                          -Kopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_nocollapse_except_innermost
                          -Kopenmp_noordered_reduction -Knoopenmp_simd
                          -Kthreadsafe -Kparallel -Kparallel_nofp_precision
                          -Knoarray_private -Knodynamic_iteration -Kreduction
                          -Kregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocheck_global
                          -Nnocoarray -Nnocompdisp -Nnocopyarg -Nnocoverage
                          -Nfjprof -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nfjomplib -Nline -Nlst -Nlst=p
                          -Nlst=t -Nnomallocfree -Nnoobsfun -Nnoprivatealloc
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nnoreordered_variable_stack -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "SETOS"
  (line-no.)(nest)(optimize)
          1                           SUBROUTINE SETOS(N2,ME,NE,NP,NEX,IPART,NPART,MPSET,NDOM,
          2                          *                 MFRM,NFRM,ITIME,NODE,LEFRM,X,Y,Z,
          3                          *                 OMEGA,TIME,IEATTR,IPATTR,
          4                          *                 NPSET,LPSET1,LPSET2,LPSET3,LPSET4,
          5                          *                 COEFP1,COEFP2,COEFP3,
          6                          *                 NESET,LESET1,LESET2,LESET3,LESET4,
          7                          *                 COEFE1,COEFE2,COEFE3,
          8                          *                 MMRF,NMRF,IFATTR,OMGMRF,AMRF,
          9                          *                 XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,
         10                          *                 MZ,MBLK,NDIVX,NDIVY,NDIVZ,NEZ,IELIST,ISTART,
         11                          *                 JNTFND,EPSOS,
         12                          *                 IUT6,IUT0,IERR)
         13                           IMPLICIT NONE
         14                     C
         15                     C[INPUT]
         16                           INTEGER*4 N2,ME,NE,NP,NEX(8),IPART,NPART,MPSET,
         17                          *          NDOM,
         18                          *          NODE(N2,NE),LEFRM(NE),
         19                          *          IEATTR(NE),IPATTR(NP),MFRM,NFRM,ITIME
         20                           REAL*4    X(NP),Y(NP),Z(NP),OMEGA,TIME
         21                           REAL*4    XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX
         22                           INTEGER*4 MZ,MBLK,NDIVX,NDIVY,NDIVZ,
         23                          *          NEZ(MZ),IELIST(MBLK),ISTART(MZ)
         24                           INTEGER*4 JNTFND
         25                           REAL*4    EPSOS
         26                           INTEGER*4 IUT0,IUT6,IERR
         27                     C
         28                     C[INPUT/OUTPUT (OVERSET DATA)]
         29                           INTEGER*4 NPSET
         30                           INTEGER*4 LPSET1(MPSET),LPSET2(MPSET),LPSET3(MPSET),
         31                          *          LPSET4(MPSET)
         32                           REAL*4    COEFP1(MPSET),COEFP2(MPSET),COEFP3(MPSET)
         33                     C
         34                           INTEGER*4 NESET
         35                           INTEGER*4 LESET1(MPSET),LESET2(MPSET),LESET3(MPSET),
         36                          *          LESET4(MPSET)
         37                           REAL*4    COEFE1(MPSET),COEFE2(MPSET),COEFE3(MPSET)
         38                     C
         39                           INTEGER*4 MMRF,NMRF
         40                           INTEGER*4 IFATTR(MFRM)
         41                           REAL*4    OMGMRF(MMRF),AMRF(3,MMRF)
         42                     C
         43                     C[LOCAL:OVERSET TABLE-3]
         44                           INTEGER*4, ALLOCATABLE::
         45                          * NFRMS(:),LFRMS(:,:),NFRMR(:),LFRMR(:,:)
         46                     C
         47                     C[LOCAL:OVERSET TABLE-2]
         48                           INTEGER*4 NDOMS,NDOMR
         49                           INTEGER*4, ALLOCATABLE::
         50                          * LDOMS(:),NBDOMS(:),LISTS(:),LISTR(:),
         51                          * LOSFMS(:),LOSPS(:),LTYPES(:),
         52                          * LDOMR(:),NBDOMR(:),LOSFMR(:),LOSPR(:),LTYPER(:)
         53                           REAL*4, ALLOCATABLE::
         54                          * BNDBOX(:,:),OSBOXG(:,:),
         55                          * XOVERS(:),YOVERS(:),ZOVERS(:),
         56                          * XOVERR(:),YOVERR(:),ZOVERR(:)
         57                     C
         58                     C[LOCAL:OVERSET TABLE-1]
         59                           INTEGER*4, ALLOCATABLE::
         60                          * LOSFDS(:),LOSFDR(:)
         61                           REAL*4, ALLOCATABLE::
         62                          * COEF1S(:),COEF2S(:),COEF3S(:),
         63                          * COEF1R(:),COEF2R(:),COEF3R(:),
         64                          * ERROSR(:),ERROSS(:),
         65                          * XMINE(:),YMINE(:),ZMINE(:),XMAXE(:),YMAXE(:),ZMAXE(:)
         66                     C
         67                     C[LOCAL]
         68                           INTEGER*4 LPFRM(NP)
         69                           INTEGER*4 IBUF,IE,IP,I,MBPDOM,MDOM,MCOMM,IBP,IBE,IFRM,IERRA
         70                           REAL*4    CBUF1,CBUF2,CBUF3
         71                     C
         72                     C[LOCAL FOR BLOCK]
         73                           REAL*4    EPS
         74                           INTEGER*4 IPB
         75                           DATA EPS   /1.0E-1/
         76                     C
         77                     C[LOCAL FOR BLOCK]
         78                           REAL*4    OSBOX(6)
         79                     C
         80                     C
         81                     C     VERSION 2011.07.01 WRITTEN BY Y.YAMADE
         82                     C
         83                     C     FUNCTION
         84                     C     THIS PROGRAM MAKES OVERSET DATA BY TAKING INTO ACCOUNT
         85                     C     INTER DOMAIN CONNECTION
         86                     C
         87                     C
         88                     C     ARGUMENT LIST
         89                     C
         90                     C[INPUT]
         91                     C N2         : NUMBER OF NODES IN A ELEMENT (=8)
         92                     C              SOMETIMES, IT IS SET TO 9 TO AVOID BANK CONFLICT.
         93                     C NE         : NUMBER OF ELEMENTS
         94                     C NP         : NUMBER OF NODES
         95                     C IPART      : DOMAIN NUMBER (1 - NPART)
         96                     C NPART      : NUMBER OF DOMAINS
         97                     C MPSET      : MAX. NUMBER OF OVERSET NODES
         98                     C NODE(I,IE) : NODE TABLE
         99                     C LEFRM(IE)  : FRAME NUMBER AT ELEMENTS
        100                     C X(IP)      : X COORDINATE
        101                     C Y(IP)      : Y COORDINATE
        102                     C Z(IP)      : Z COORDINATE
        103                     C
        104                     C[OUTPUT]
        105                     C NPSET      : NUMBER OF OVERSET NOUSES
        106                     C LPSET1(IBP): OVERSET NODES LIST
        107                     C LPSET2(IBP): ELEMENT NUMBER OF PARENTS ELEMENTS OF OVERSET NODES
        108                     C LPSET3(IBP): DOMAIN NUMBER
        109                     C              0        : BOTH OF OVERSET NODES AND PARENTS ELEENTS
        110                     C                         ARE WITHIN THE DOMAIN
        111                     C              POSITIVE : ONLY PARENT ELEMENTS ARE WITHIN THE DOMAIN
        112                     C              NEGATIVE : ONLY OVERSET NODES   ARE WITHIN THE DOMAIN
        113                     C COEF1(IBP) : LOCAL COORDINATE-1
        114                     C COEF2(IBP) : LOCAL COORDINATE-2
        115                     C COEF3(IBP) : LOCAL COORDINATE-3
        116                     C
        117                     C[LOCAL ENTRY FOR OVERSET TABLE-3]
        118                     C NFRMS(  IPART) : NUMBER OF FRAMES FOR SENDING   IN THE DOMAIN OF IPART
        119                     C LFRMS(I,IPART) : FRAME LIST       FOR SENDING   IN THE DOMAIN OF IPART
        120                     C NFRMR(  IPART) : NUMBER OF FRAMES FOR RECEIVING IN THE DOMAIN OF IPART
        121                     C LFRMR(I,IPART) : FRAME LST        FOR RECEIVING IN THE DOMAIN OF IPART
        122                     C
        123                     C[LOCAL ENTRY FOR OVERSET TABLE-2]
        124                     C NDOMS          : NUMBER OF DOMAIN  FOR SENDING
        125                     C LDOMS (  IDOM) : DOMAIN LIST       FOR SENDING
        126                     C NBDOMS(I,IDOM) : NUMBER OF NODES   FOR SENDING TO THE DOMAIN OF IDOM
        127                     C LOSFMS(I,IDOM) : FRAME NUMBER LIST FOR SENDING TO THE DOMAIN OF IDOM
        128                     C LOSPS (I,IDOM) : NODE  NUMBER LIST FOR SENDING TO THE DOMAIN OF IDOM
        129                     C XOVERS(I,IDOM) : X-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
        130                     C YOVERS(I,IDOM) : Y-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
        131                     C ZOVERS(I,IDOM) : Z-COORDINATE      FOR SENDING TO THE DOMAIN OF IDOM
        132                     C NDOMR          : NUMBER OF DOMAIN  FOR RECEIVING
        133                     C LDOMR (  IDOM) : DOMAIN LIST       FOR RECEIVING FROM THE DOMAIN OF IDOM
        134                     C NBDOMR(I,IDOM) : NUMBER OF NODES   FOR RECEIVING FROM THE DOMAIN OF IDOM
        135                     C LOSFMR(I,IDOM) : FRAME NUMBER LIST FOR RECEIVING FROM THE DOMAIN OF IDOM
        136                     C LOSPR (I,IDOM) : NODE  NUMBER LIST FOR RECEIVING FROM THE DOMAIN OF IDOM
        137                     C XOVERR(I,IDOM) : X-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
        138                     C YOVERR(I,IDOM) : Y-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
        139                     C ZOVERR(I,IDOM) : Z-COORDINATE      FOR RECEIVING FROM THE DOMAIN OF IDOM
        140                     C
        141                     C NOTE THAT
        142                     C IPART IS GLOCAL DOMAIN NUMBER WHILE IDOM IS LOCAL
        143                     C DOMAIN NUMBER
        144                     C
        145                     C[LOCAL ENTRY FOR OVERSET TABLE-1]
        146                     C LOSFDR (I,IDOM) : RESULT OF SERCHING (0:NOT FOUND, ELM. NUM.:FOUND)
        147                     C COEF1R (I,IDOM) : LOCAL COORDINATE-1
        148                     C COEF2R (I,IDOM) : LOCAL COORDINATE-2
        149                     C COEF3R (I,IDOM) : LOCAL COORDINATE-3
        150                     C LOSFDS (I,IDOM) : RESULT OF SERCHING (IT WILL BE GOT BY COMMUNICATION)
        151                     C COEF1S (I,IDOM) : LOCAL COORDINATE-1
        152                     C COEF2S (I,IDOM) : LOCAL COORDINATE-2
        153                     C COEF3S (I,IDOM) : LOCAL COORDINATE-3
        154                     C
        155                           IERR=0
        156                           CALL DDSYNC
        157                           CALL USTSTA(31)
        158                     C
        159                     C
        160                     CCYY[1] CHECK MAXIMUM FRAME NUMBER
        161                     CC
        162                           WRITE(IUT6,*)
        163                           WRITE(IUT6,*) ' **SETOS** : CHECKING MAX. FRAME NUMBER'
        164                           WRITE(IUT6,*) ' **SETOS** : NMRF=', NMRF
        165                           WRITE(IUT6,*) ' **SETOS** :OMEGA=', OMEGA
        166                           WRITE(IUT6,*) ' **SETOS** : TIME=', TIME
        167                           WRITE(IUT6,*) ' **SETOS** :NPSET=', NPSET
        168                     C
        169     1                     DO 1100 IFRM=1,MFRM
                              <<< Loop-information Start >>>
                              <<<  [OPTIMIZATION]
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LEFRM
                              <<< Loop-information  End >>>
        170     2                         DO 1110 IE=1,NE
        171     3                             IF(LEFRM(IE).EQ.IFRM) THEN
        172     3                                 IFATTR(IFRM)=IEATTR(IE)
        173     3                                 GOTO 1120
        174     3                             ENDIF
        175     2                1110     CONTINUE
        176     1               C
        177     1                         IFATTR(IFRM)=-99999
        178     1               
        179     1                1120     CONTINUE
        180     1                             CALL DDMAXI(IFATTR(IFRM),IBUF,IERR)
        181     1                             IFATTR(IFRM)=IBUF
        182     2                             IF(IFATTR(IFRM).EQ.-9999) THEN
        183     2                                 WRITE(IUT0,*) 'INVALID O.S. FRAME NUMBER IN B.C. FILE'
        184     2                                 IERR=1
        185     2                                 RETURN
        186     2                             ELSE
        187     2                                 WRITE(IUT6,*)' **SETOS** :FRM. NUM',IFRM,IFATTR(IFRM)
        188     2                             ENDIF
        189     1                1100 CONTINUE
        190                     C
        191                           WRITE(IUT6,*) ' **SETOS** : DONE'
        192                     C
        193                     CC
        194                     CCYY[2] MAKING OVERSET TABLE-3
        195                     CC
        196                           WRITE(IUT6,*)
        197                           WRITE(IUT6,*) ' **SETOS3** : MAKING OS-TBL-3'
        198                     C
        199                           ALLOCATE(NFRMS(     NPART))
        200                           ALLOCATE(LFRMS(MFRM,NPART))
        201                           ALLOCATE(NFRMR(     NPART))
        202                           ALLOCATE(LFRMR(MFRM,NPART))
        203                           ALLOCATE(BNDBOX(6  ,NPART))
        204                           ALLOCATE(OSBOXG(6  ,NPART))
        205                     C
        206                           CALL CHKOS2(NP,NPSET,IFATTR,LPSET1,LPSET4,
        207                          *            X,Y,Z,IPATTR,OMEGA,TIME,OSBOX,
        208                          *            IUT0,IUT6,IERR)
        209                     C
        210                           CALL SETOS3(N2,NE,NP,IPART,NPART,MFRM,
        211                          *            NODE,LEFRM,LPFRM,NPSET,LPSET1,LPSET4,
        212                          *            NFRMS,LFRMS,NFRMR,LFRMR,
        213                          *            XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,
        214                          *            BNDBOX,OSBOX,OSBOXG,
        215                          *            IUT6,IERR)
        216                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        217                           IERR=IERRA
        218     1                     IF(IERR.NE.0) THEN
        219     1                         GOTO 9030
        220     1                     ENDIF
        221                           WRITE(IUT6,*) ' **SETOS3** : DONE'
        222                     CC
        223                     CCYY[3] MAKING OVERSET TABLE-2
        224                     CC
        225                           WRITE(IUT6,*)
        226                           WRITE(IUT6,*) ' **SETOS2** : MAKING OS-TBL-2'
        227                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 800
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LPSET2, LPSET3, COEFP1, COEFP2, COEFP3
                              <<< Loop-information  End >>>
        228     1  pp   2v            DO 1300 IBP =1,NPSET
        229     1   p   2v                LPSET2(IBP)=0
        230     1   p   2v                LPSET3(IBP)=0
        231     1   p   2v                COEFP1(IBP)=0.0E0
        232     1   p   2v                COEFP2(IBP)=0.0E0
        233     1   p   2v                COEFP3(IBP)=0.0E0
        234     1   p   2v       1300 CONTINUE
        235                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 800
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LESET2, LESET3, COEFE1, COEFE2, COEFE3
                              <<< Loop-information  End >>>
        236     1  pp   2v            DO 1310 IBE =1,NESET
        237     1   p   2v                LESET2(IBE)=0
        238     1   p   2v                LESET3(IBE)=0
        239     1   p   2v                COEFE1(IBE)=0.0E0
        240     1   p   2v                COEFE2(IBE)=0.0E0
        241     1   p   2v                COEFE3(IBE)=0.0E0
        242     1   p   2v       1310 CONTINUE
        243                     CC
        244                     CC    COUNT MBPDOM AND MDOM
        245                     CC
        246                           CALL CNTOS2(IPART,NPART,N2,NE,NP,MFRM,MBPDOM,MDOM,
        247                          *            MCOMM,
        248                          *            NPSET,LPSET1,LPSET4,
        249                          *            NESET,LESET1,LESET4,
        250                          *            X,Y,Z,NODE,
        251                          *            OMEGA,TIME,IPATTR,IEATTR,IFATTR,
        252                          *            NFRMS,LFRMS,NFRMR,LFRMR,
        253                          *            MMRF,OMGMRF,AMRF,BNDBOX,OSBOXG,
        254                          *            IUT6,IUT0,IERR)
        255                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        256                           IERR=IERRA
        257     1                     IF(IERR.NE.0) THEN
        258     1                         GOTO 9030
        259     1                     ENDIF
        260                     C
        261                           WRITE(IUT6,*)
        262                           WRITE(IUT6,*) ' **CNTOS2** : MDOM  ', MDOM
        263                           WRITE(IUT6,*) ' **CNTOS2** : MBPDOM', MBPDOM
        264                           WRITE(IUT6,*) ' **CNTOS2** : MCOMM ', MCOMM
        265                     C
        266                           ALLOCATE(LDOMS (MDOM ))
        267                           ALLOCATE(NBDOMS(MDOM ))
        268                           ALLOCATE(LISTS (MDOM ))
        269                           ALLOCATE(LOSFMS(MCOMM))
        270                           ALLOCATE(LOSPS (MCOMM))
        271                           ALLOCATE(LTYPES(MCOMM))
        272                           ALLOCATE(XOVERS(MCOMM))
        273                           ALLOCATE(YOVERS(MCOMM))
        274                           ALLOCATE(ZOVERS(MCOMM))
        275                     C
        276                           ALLOCATE(LDOMR (MDOM ))
        277                           ALLOCATE(NBDOMR(MDOM ))
        278                           ALLOCATE(LISTR (MDOM ))
        279                           ALLOCATE(LOSFMR(MCOMM))
        280                           ALLOCATE(LOSPR (MCOMM))
        281                           ALLOCATE(LTYPER(MCOMM))
        282                           ALLOCATE(XOVERR(MCOMM))
        283                           ALLOCATE(YOVERR(MCOMM))
        284                           ALLOCATE(ZOVERR(MCOMM))
        285                     C
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2286
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LOSFMS
                              <<< Loop-information  End >>>
        286        pp   4v            LOSFMS=-1
                              <<< Loop-information Start >>>
                              <<<  [PARALLELIZATION]
                              <<<    Standard iteration count: 2286
                              <<<  [OPTIMIZATION]
                              <<<    SIMD(VL: 16)
                              <<<    PREFETCH(HARD) Expected by compiler :
                              <<<      LOSFMR
                              <<< Loop-information  End >>>
        287        pp   4v            LOSFMR=-1
        288                     C
        289                           CALL SETOS2(IPART,NPART,N2,NE,NP,MFRM,MDOM,
        290                          *            MCOMM,
        291                          *            NPSET,LPSET1,LPSET4,
        292                          *            NESET,LESET1,LESET4,
        293                          *            X,Y,Z,NODE,
        294                          *            OMEGA,TIME,IPATTR,IEATTR,IFATTR,
        295                          *            NFRMS,LFRMS,NFRMR,LFRMR,
        296                          *            NDOMS,LISTS,LDOMS,LOSFMS,NBDOMS,LOSPS,LTYPES,
        297                          *            XOVERS,YOVERS,ZOVERS,
        298                          *            NDOMR,LISTR,LDOMR,LOSFMR,NBDOMR,LOSPR,LTYPER,
        299                          *            XOVERR,YOVERR,ZOVERR,
        300                          *            MMRF,OMGMRF,AMRF,BNDBOX,OSBOXG,
        301                          *            IUT6,IUT0,IERR)
        302                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        303                           IERR=IERRA
        304     1                     IF(IERR.NE.0) THEN
        305     1                         GOTO 9020
        306     1                     ENDIF
        307                           WRITE(IUT6,*) ' **SETOS2** : DONE'
        308                     CC
        309                     CCYY[4] SERCHING PARENT ELEMENTS
        310                     CC
        311                           WRITE(IUT6,*)
        312                           WRITE(IUT6,*) ' **SETOS1** : SEARCHING PARENTS ELMS.'
        313                     C
        314                           ALLOCATE(LOSFDS(MCOMM))
        315                           ALLOCATE(COEF1S(MCOMM))
        316                           ALLOCATE(COEF2S(MCOMM))
        317                           ALLOCATE(COEF3S(MCOMM))
        318                     C
        319                           ALLOCATE(LOSFDR(MCOMM))
        320                           ALLOCATE(COEF1R(MCOMM))
        321                           ALLOCATE(COEF2R(MCOMM))
        322                           ALLOCATE(COEF3R(MCOMM))
        323                     C
        324                           ALLOCATE(ERROSR(MCOMM))
        325                           ALLOCATE(ERROSS(MCOMM))
        326                     C
        327                           ALLOCATE(XMINE(NE))
        328                           ALLOCATE(YMINE(NE))
        329                           ALLOCATE(ZMINE(NE))
        330                           ALLOCATE(XMAXE(NE))
        331                           ALLOCATE(YMAXE(NE))
        332                           ALLOCATE(ZMAXE(NE))
        333                     C
        334                           CALL MINMAX(N2,NE,NP,NEX,X,Y,Z,NODE,
        335                          *            XMINE,YMINE,ZMINE,XMAXE,YMAXE,ZMAXE)
        336                     C
        337                           CALL DDSYNC
        338                           CALL USTSTA(32)
        339                           CALL SETOS1(IPART,NPART,N2,NE,NP,NEX,MBPDOM,MDOM,
        340                          *            MCOMM,NODE,LEFRM,X,Y,Z,
        341                          *            XMINE,YMINE,ZMINE,XMAXE,YMAXE,ZMAXE,
        342                          *            NDOMS,NDOMR,NBDOMS,NBDOMR,LISTS,LISTR,
        343                          *            LDOMS,LDOMR,LOSPR,
        344                          *            LOSFMR,XOVERR,YOVERR,ZOVERR,
        345                          *            LOSFDS,COEF1S,COEF2S,COEF3S,ERROSR,
        346                          *            LOSFDR,COEF1R,COEF2R,COEF3R,ERROSS,
        347                          *            MZ,MBLK,NDIVX,NDIVY,NDIVZ,NEZ,IELIST,ISTART,
        348                          *            XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,
        349                          *            JNTFND,EPSOS,IUT0,IUT6,IERR)
        350                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        351                           CALL DDSYNC
        352                           CALL USTEND(32)
        353                           IERR=IERRA
        354     1                     IF(IERR.NE.0) THEN
        355     1                         GOTO 9010
        356     1                     ENDIF
        357                           WRITE(IUT6,*) ' **SETOS1** : DONE'
        358                     C
        359                     CC
        360                     CCYY[5] SERCHING PARENT ELEMENTS
        361                     CC
        362                           WRITE(IUT6,*)
        363                           WRITE(IUT6,*) ' **SETOS0** : MAKE OVERSET DATA'
        364                           CALL SETOS0(IPART,NPART,MBPDOM,MDOM,MPSET,NE,LEFRM,
        365                          *            MCOMM,NDOMS,NDOMR,
        366                          *            LISTS,LISTR,NBDOMS,NBDOMR,LDOMS,LDOMR,
        367                          *            LOSPS,LOSPR,LOSFMS,LOSFMR,LOSFDS,LOSFDR,
        368                          *            LTYPES,LTYPER,
        369                          *            COEF1S,COEF2S,COEF3S,ERROSS,
        370                          *            COEF1R,COEF2R,COEF3R,
        371                          *            NPSET, LPSET1,LPSET2,LPSET3,LPSET4,
        372                          *            COEFP1,COEFP2,COEFP3,
        373                          *            NESET, LESET1,LESET2,LESET3,LESET4,
        374                          *            COEFE1,COEFE2,COEFE3,
        375                          *            IUT6,IERR,N2,NP,NODE,X,Y,Z)
        376                           CALL ERRCHK(IUT6,IPART,1,IERR,IERRA)
        377                           IERR=IERRA
        378     1                     IF(IERR.NE.0) THEN
        379     1                         GOTO 9010
        380     1                     ENDIF
        381                           WRITE(IUT6,*) ' **SETOS0** : DONE'
        382                     C
        383                      9010 CONTINUE
        384                           DEALLOCATE(LOSFDS)
        385                           DEALLOCATE(COEF1S)
        386                           DEALLOCATE(COEF2S)
        387                           DEALLOCATE(COEF3S)
        388                     C
        389                           DEALLOCATE(LOSFDR)
        390                           DEALLOCATE(COEF1R)
        391                           DEALLOCATE(COEF2R)
        392                           DEALLOCATE(COEF3R)
        393                     C
        394                           DEALLOCATE(ERROSR)
        395                           DEALLOCATE(ERROSS)
        396                     C
        397                           DEALLOCATE(XMINE)
        398                           DEALLOCATE(YMINE)
        399                           DEALLOCATE(ZMINE)
        400                           DEALLOCATE(XMAXE)
        401                           DEALLOCATE(YMAXE)
        402                           DEALLOCATE(ZMAXE)
        403                     C
        404                      9020 CONTINUE
        405                     C
        406                           DEALLOCATE(LDOMS )
        407                           DEALLOCATE(NBDOMS)
        408                           DEALLOCATE(LOSFMS)
        409                           DEALLOCATE(LOSPS )
        410                           DEALLOCATE(LTYPES)
        411                           DEALLOCATE(XOVERS)
        412                           DEALLOCATE(YOVERS)
        413                           DEALLOCATE(ZOVERS)
        414                     C
        415                           DEALLOCATE(LDOMR )
        416                           DEALLOCATE(NBDOMR)
        417                           DEALLOCATE(LOSFMR)
        418                           DEALLOCATE(LOSPR )
        419                           DEALLOCATE(LTYPER)
        420                           DEALLOCATE(XOVERR)
        421                           DEALLOCATE(YOVERR)
        422                           DEALLOCATE(ZOVERR)
        423                     C
        424                      9030 CONTINUE
        425                           DEALLOCATE(NFRMS)
        426                           DEALLOCATE(LFRMS)
        427                           DEALLOCATE(NFRMR)
        428                           DEALLOCATE(LFRMR)
        429                           DEALLOCATE(BNDBOX)
        430                           DEALLOCATE(OSBOXG)
        431                     C
        432                           CALL DDSYNC
        433                           CALL USTEND(31)
        434                     C
        435                           RETURN
        436                           END

 Diagnostic messages: program name(SETOS)
   jwd2008i-i  "setos.f", line 1: この仮引数'ITIME'は、副プログラム中で使用されていません。
   jwd2008i-i  "setos.f", line 1: この仮引数'NFRM'は、副プログラム中で使用されていません。
   jwd2008i-i  "setos.f", line 1: この仮引数'NDOM'は、副プログラム中で使用されていません。
   jwd2008i-i  "setos.f", line 1: この仮引数'ME'は、副プログラム中で使用されていません。
   jwd2006i-i  "setos.f", line 69: この名前'I'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos.f", line 69: この名前'IP'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos.f", line 70: この名前'CBUF3'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos.f", line 70: この名前'CBUF2'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos.f", line 70: この名前'CBUF1'は、宣言だけされていて引用されていません。
   jwd2006i-i  "setos.f", line 74: この名前'IPB'は、宣言だけされていて引用されていません。
   jwd5131p-i  "setos.f", line 169: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd5131p-i  "setos.f", line 170: ループ出口が2つ以上あるため、このDOループは並列化できません。
   jwd6131s-i  "setos.f", line 170: ループ出口が2つ以上あるため、このDOループはSIMD化できません。
   jwd8671o-i  "setos.f", line 170: ループの形状が最適化の対象外であるため、ソフトウェアパイプライニングを適用できません。
   jwd5001p-i  "setos.f", line 228: このDOループを並列化しました。(名前:IBP)
   jwd6001s-i  "setos.f", line 228: このDOループをSIMD化しました。(名前:IBP)
   jwd8663o-i  "setos.f", line 228: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos.f", line 228: ループを展開数2回でアンローリングしました。
   jwd5001p-i  "setos.f", line 236: このDOループを並列化しました。(名前:IBE)
   jwd6001s-i  "setos.f", line 236: このDOループをSIMD化しました。(名前:IBE)
   jwd8663o-i  "setos.f", line 236: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos.f", line 236: ループを展開数2回でアンローリングしました。
   jwd5003p-i  "setos.f", line 286: この配列記述を並列化しました。
   jwd6003s-i  "setos.f", line 286: この配列記述をSIMD化しました。
   jwd8663o-i  "setos.f", line 286: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos.f", line 286: ループを展開数4回でアンローリングしました。
   jwd5003p-i  "setos.f", line 287: この配列記述を並列化しました。
   jwd6003s-i  "setos.f", line 287: この配列記述をSIMD化しました。
   jwd8663o-i  "setos.f", line 287: ソフトウェアパイプライニングの効果がないループと判断したため、ソフトウェアパイプライニングを抑止しました。
   jwd8202o-i  "setos.f", line 287: ループを展開数4回でアンローリングしました。

 Procedure information
   Lines      : 436
   Statements : 213
   Stack(byte): 14240
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 436
   Total statements : 213
   Total stack(byte): 14240
   Total prefetch num: 0

